# Makefile Template for Gerbil
# Tangled using Org Mode (C-c C-v t) from doc/configure.org
# $ tangle() {
#    emacs --batch -l org --eval "(org-babel-tangle-file \"$1\")"
# }
# $ tangle doc/configure.org

# Copyright (c) 2019 by drewc <me@drewc.ca>, All Rights Reserved.

# The Makefile is generated by running ./configure

PACKAGE_SHORTNAME = @PACKAGE_SHORTNAME@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

prefix = @prefix@
exec_prefix = @exec_prefix@
includedir = @includedir@
libdir = @libdir@
bindir = @bindir@
docdir = @docdir@
infodir = @infodir@
emacsdir = @emacsdir@
libexecdir = @libexecdir@
datarootdir = @datarootdir@
datadir = @datadir@
htmldir = @htmldir@
dvidir = @dvidir@
pdfdir = @pdfdir@
psdir = @psdir@
localedir = @localedir@
mandir = @mandir@

LIBS = @LIBS@

gerbil_home = ${prefix}/lib/${PACKAGE_SHORTNAME}
gerbil_bin = "$(gerbil_home)/bin"
gerbil_lib = "${gerbil_home}/lib"
gerbil_share = "${gerbil_home}/share"


gerbil_bin_linkdir = "${prefix}/bin"
gerbil_share_linkdir = "${prefix}/share"

gerbil_make_conf = @gerbil_make_conf@

gerbil: configure
	cd src && LDFLAGS="$(LIBS)" ./build.sh

ensure-gx-version:
	echo "(define (gerbil-version-string) \"$(PACKAGE_STRING)\")" \
	> ./src/gerbil/runtime/gx-version.scm ;

configure: ensure-gx-version
	cd src && ./configure $(gerbil_make_conf) --prefix=$(gerbil_home)

stdlib:
	cd src && LDFLAGS="$(LIBS)" ./build.sh stdlib

lang:
	cd src && LDFLAGS="$(LIBS)" ./build.sh lang


r7rs-large:
	cd src && LDFLAGS="$(LIBS)" ./build.sh r7rs-large

tools:
	cd src && LDFLAGS="$(LIBS)" ./build.sh tools

stage0: configure
	cd src && LDFLAGS="$(LIBS)" ./build.sh stage0

stage1:
	cd src && LDFLAGS="$(LIBS)" ./build.sh stage1

layout:
		cd src && LDFLAGS="$(LIBS)" ./build.sh layout

tags:
	cd src && LDFLAGS="$(LIBS)" ./build.sh tags

install:
	mkdir -p ${gerbil_bin} ${gerbil_share} ${gerbil_bin_linkdir} ${gerbil_share_linkdir}
	cd src && ./install
	cp -a --link --remove-destination ${gerbil_bin}/* ${gerbil_bin_linkdir}  || \
	cp -a ${gerbil_bin}/* ${gerbil_bin_linkdir}
	cp -a --link --remove-destination ${gerbil_share}/* ${gerbil_share_linkdir}  || \
	cp -a ${gerbil_share}/* ${gerbil_share_linkdir}
