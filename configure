#!/bin/sh
set -e
cd $(dirname "$0")

die() {
  echo "configuration failed"
  exit 1
}

usage() {
    local gambit_config_help="$(cd src/gambit && ./configure --help | tail -n +63)"

    cat <<EOF
This script configures the Gerbil and integrated Gambit build.

Usage: $0 [option] ... [var=value]...

Options controlling integrated Gambit configuration:
${gambit_config_help}

Options understood and processed by Gerbil:
  --prefix=PREFIX       where to install Gerbil; default prefix is /opt/gerbil
  --with-gambit=TAG     integrated gambit git tag to check out for the build;
                        defaults to ${default_gambit_tag}
  --enable-march=ARCH   specify the machine architecture; it can be empty.
                        defaults to native
  --enable-shared       use shared libraries for libgerbil and libgambit

Gerbil Standard Library features:
  --enable-deprecated   Enable building of deprecated packages
  --enable-libxml       Enable or disable libxml based libraries; disabled by default
  --disable-libxml
  --enable-libyaml      Enable or disable libyaml based libraries; disabled by default
  --disable-libyaml
  --enable-zlib         Enable or disable zlib support; enabled by default
  --disable-zlib
  --enable-sqlite       Enable or disable sqlite support; enabled by default
  --disable-sqlite
  --enable-mysql        Enable or disable mysql driver support; disabled by default
  --disable-mysql
  --enable-lmdb         Enable or disable MDB support; disabled by default
  --disable-lmdb
  --enable-leveldb      Enable or disable leveldb support; disabled by default
  --disable-leveldb

Default integrated Gambit configuration: ${default_gambit_config}
EOF
}


std_patch_feature() {
    sed -i -e "$1" src/std/build-features.ss
}

std_enable_feature() {
    std_patch_feature "s/$1 #f/$1 #t/"
}

std_disable_feature() {
    std_patch_feature "s/$1 #t/$1 #f/"
}

readonly gerbil_version="v$(git describe --tags --always)"
readonly default_gambit_tag=v4.9.5
readonly default_gambit_config="--enable-targets='' --enable-single-host --enable-dynamic-clib --enable-default-runtime-options=t8,f8,-8 --enable-trust-c-tco"
prefix="/opt/gerbil"
readonly cflags_opt="-foptimize-sibling-calls"
readonly ldflags_rpath="-Wl,-rpath"

case $(uname) in
    OpenBSD)
        gambit_march=""
        ;;
    *)
        gambit_march="native"
        ;;
esac

gambit_tag="${default_gambit_tag}"
gambit_config="${default_gambit_config}"

while [ $# -gt 0 ]; do
    case "$1" in
        --help)
            usage
            exit 0
            ;;

        --prefix=*)
            prefix=$(echo "$1" | cut -d = -f 2-)
            shift
            ;;

        --with-gambit=*)
            gambit_tag=$(echo "$1" | cut -d = -f 2-)
            shift
            ;;

        --enable-march=*)
            gambit_march=$(echo "$1" | cut -d = -f 2-)
            shift
            ;;

        --enable-shared)
            gerbil_shared=t
            gambit_config="${gambit_config} $1"
            shift
            ;;

        --enable-deprecated)
            std_enable_feature deprecated
            shift
            ;;

        --enable-libxml)
            std_enable_feature libxml
            shift
            ;;

        --disable-libxml)
            std_disable_feature libxml
            shift
            ;;

        --enable-libyaml)
            std_enable_feature libyaml
            shift
            ;;

        --disable-libyaml)
            std_disable_feature libyaml
            shift
            ;;

        --enable-zlib)
            std_enable_feature zlib
            shift
            ;;

        --disable-zlib)
            std_disable_feature zlib
            shift
            ;;

        --enable-sqlite)
            std_enable_feature sqlite
            shift
            ;;

        --disable-sqlite)
            std_disable_feature sqlite
            shift
            ;;

        --enable-mysql)
            std_enable_feature mysql
            shift
            ;;

        --disable-mysql)
            std_disable_feature mysql
            shift
            ;;

        --enable-lmdb)
            std_enable_feature lmdb
            shift
            ;;

        --disable-lmdb)
            std_disable_feature lmdb
            shift
            ;;

        --enable-leveldb)
            std_enable_feature leveldb
            shift
            ;;

        --disable-leveldb)
            std_disable_feature leveldb
            shift
            ;;

        CFLAGS=*)
            flags=$(echo "$1" | cut -d = -f 2-)
            if [ -z "$CFLAGS" ]; then
                CFLAGS="$flags"
            else
                CFLAGS="$CFLAGS $flags"
            fi
            shift
            ;;

        LDFLAGS=*)
            flags=$(echo "$1" | cut -d = -f 2-)
            if [ -z "${LDFLAGS}" ]; then
                LDFLAGS="${flags}"
            else
                LDFLAGS="${LDFLAGS} ${flags}"
            fi
            shift
            ;;
        *)
            gambit_config="${gambit_config} $1"
            shift
        ;;
    esac
done

gerbil_prefix="${prefix}/${gerbil_version}"

if [ -z "${CFLAGS}" ]; then
    CFLAGS="${cflags_opt}"
else
    CFLAGS="${CFLAGS} ${cflags_opt}"
fi

if [ -z "${LDFLAGS}" ]; then
    if [ "${gerbil_shared}" = "t" ]; then
        LDFLAGS="${ldflags_rpath}=${gerbil_prefix}/lib"
    fi
else
    if [ "${gerbil_shared}" = "t" ]; then
        LDFLAGS="${LDFLAGS} ${ldflags_rpath}=${gerbil_prefix}/lib"
    fi
fi

git submodule init || die
git submodule update --force || die

(cd src/gambit && git fetch origin && git checkout "${gambit_tag}" && touch configure config.status) || die

gambit_config="--prefix=${gerbil_prefix} --enable-march=${gambit_march} ${gambit_config}"
(export LDFLAGS="$LDFLAGS"; export CFLAGS="$CFLAGS"; cd src/gambit && ./configure $gambit_config ) || die

rm -f build-env.sh
cat > build-env.sh <<EOF
GERBIL_PREFIX=${gerbil_prefix}
GERBIL_VERSION=${gerbil_version}
export GERBIL_PREFIX GERBIL_VERSION
EOF

exit 0
