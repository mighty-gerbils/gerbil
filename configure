#!/bin/sh
set -e
cd $(dirname "$0")

die() {
  echo "configuration failed"
  exit 1
}

std_patch_feature() {
    sed -i -e "$1" src/std/build-features.ss
}

std_enable_feature() {
    std_patch_feature "s/$1 #f/$1 #t"
}

std_disable_feature() {
    std_patch_feature "s/$1 #t/$1 #f"
}

readonly gerbil_version="v$(git describe --tags --always)"

prefix="/opt/gerbil"
gambit_tag=v4.9.5
gambit_config="--enable-targets='' --enable-single-host --enable-dynamic-clib --enable-default-runtime-options=t8,f8,-8 --enable-trust-c-tco"

readonly cflags_opt="-foptimize-sibling-calls"
readonly ldflags_rpath="-Wl,-rpath"

while [ $# -gt 0 ]; do
    case "$1" in
        --prefix=*)
            prefix=$(echo "$1" | cut -d = -f 2-)
            shift
            ;;

        --with-gambit=*)
            gambit_tag=$(echo "$1" | cut -d = -f 2-)
            shift
            ;;

        --enable-libxml)
            std_enable_feature libxml
            shift
            ;;

        --disable-libxml)
            std_disable_feature libxml
            shift
            ;;

        --enable-libyaml)
            std_enable_feature libyaml
            shift
            ;;

        --disable-libyaml)
            std_disable_feature libyaml
            shift
            ;;

        --enable-zlib)
            std_enable_feature zlib
            shift
            ;;

        --disable-zlib)
            std_disable_feature zlib
            shift
            ;;

        --enable-sqlite)
            std_enable_feature sqlite
            shift
            ;;

        --disable-sqlite)
            std_disable_feature sqlite
            shift
            ;;

        --enable-mysql)
            std_enable_feature mysql
            shift
            ;;

        --disable-mysql)
            std_disable_feature mysql
            shift
            ;;

        --enable-lmdb)
            std_enable_feature lmdb
            shift
            ;;

        --disable-lmdb)
            std_disable_feature lmdb
            shift
            ;;

        --enable-leveldb)
            std_enable_feature leveldb
            shift
            ;;

        --disable-leveldb)
            std_disable_feature leveldb
            shift
            ;;

        CFLAGS=*)
            flags=$(echo "$1" | cut -d = -f 2-)
            if [ -z "$CFLAGS" ]; then
                CFLAGS="$flags"
            else
                CFLAGS="$CFLAGS $flags"
            fi
            shift
            ;;

        LDFLAGS=*)
            lags=$(echo "$1" | cut -d = -f 2-)
            if [ -z "${LDFLAGS}" ]; then
                LDFLAGS="${flags}"
            else
                LDFLAGS="${LDFLAGS} ${flags}"
            fi
            shift
            ;;
        *)
            gambit_config="${gambit_config} $1"
            shift
        ;;
    esac
done

gerbil_prefix="${prefix}/${gerbil_version}"

if [ -z "${CFLAGS}" ]; then
    CFLAGS="${cflags_opt}"
else
    CFLAGS="'${CFLAGS} ${cflags_opt}'"
fi

if [ -z "${LDFLAGS}" ]; then
    LDFLAGS="${ldflags_rpath}=${gerbil_prefix}/lib"
else
    LDFLAGS="'${LDFLAGS} ${ldflags_rpath}=${gerbil_prefix}/lib'"
fi

git submodule init || die
git submodule update --force || die

(cd src/gambit && git pull origin master && git checkout "${gambit_tag}" && touch configure config.status) || die

gambit_config="--prefix=${gerbil_prefix} ${gambit_config} LDFLAGS=${LDFLAGS} CFLAGS=${CFLAGS}"
(cd src/gambit && ./configure $gambit_config) || die

rm -f build-env.sh
cat > build-env.sh <<EOF
GERBIL_PREFIX=${gerbil_prefix}
GERBIL_VERSION=${gerbil_version}
export GERBIL_PREFIX GERBIL_VERSION
EOF

exit 0
