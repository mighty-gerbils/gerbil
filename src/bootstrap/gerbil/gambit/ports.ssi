prelude: :gerbil/core
package: gerbil/gambit
namespace: gerbil/gambit/ports

(%#begin (%#export #t)
         (%#extern
          (port? port?)
          (close-port close-port)
          (force-output force-output)
          (input-port-timeout-set! input-port-timeout-set!)
          (output-port-timeout-set! output-port-timeout-set!)
          (input-port-line input-port-line)
          (input-port-column input-port-column)
          (output-port-line output-port-line)
          (output-port-column output-port-column)
          (output-port-width output-port-width)
          (read-all read-all)
          (read-line read-line)
          (read-substring read-substring)
          (write-substring write-substring)
          (input-port-readtable input-port-readtable)
          (output-port-readtable output-port-readtable)
          (input-port-readtable-set! input-port-readtable-set!)
          (output-port-readtable-set! output-port-readtable-set!)
          (read-u8 read-u8)
          (write-u8 write-u8)
          (read-subu8vector read-subu8vector)
          (write-subu8vector write-subu8vector)
          (open-file open-file)
          (input-port-byte-position input-port-byte-position)
          (output-port-byte-position output-port-byte-position)
          (open-tcp-client open-tcp-client)
          (open-tcp-server open-tcp-server)
          (tcp-service-register! tcp-service-register!)
          (tcp-service-unregister! tcp-service-unregister!)
          (make-tls-context make-tls-context)
          (socket-info? socket-info?)
          (socket-info-family socket-info-family)
          (socket-info-port-number socket-info-port-number)
          (socket-info-address socket-info-address)
          (tcp-client-peer-socket-info tcp-client-peer-socket-info)
          (tcp-client-self-socket-info tcp-client-self-socket-info)
          (tcp-client-local-socket-info tcp-client-local-socket-info)
          (tcp-server-socket-info tcp-server-socket-info)
          (open-udp open-udp)
          (udp-destination-set! udp-destination-set!)
          (udp-local-socket-info udp-local-socket-info)
          (udp-read-subu8vector udp-read-subu8vector)
          (udp-read-u8vector udp-read-u8vector)
          (udp-source-socket-info udp-source-socket-info)
          (udp-write-subu8vector udp-write-subu8vector)
          (udp-write-u8vector udp-write-u8vector)
          (open-directory open-directory)
          (open-vector open-vector)
          (open-input-vector open-input-vector)
          (open-output-vector open-output-vector)
          (call-with-input-vector call-with-input-vector)
          (call-with-output-vector call-with-output-vector)
          (with-input-from-vector with-input-from-vector)
          (with-output-to-vector with-output-to-vector)
          (open-vector-pipe open-vector-pipe)
          (get-output-vector get-output-vector)
          (open-string open-string)
          (open-input-string open-input-string)
          (open-output-string open-output-string)
          (call-with-input-string call-with-input-string)
          (call-with-output-string call-with-output-string)
          (with-input-from-string with-input-from-string)
          (with-output-to-string with-output-to-string)
          (open-string-pipe open-string-pipe)
          (get-output-string get-output-string)
          (object->string object->string)
          (print print)
          (println println)
          (open-u8vector open-u8vector)
          (open-input-u8vector open-input-u8vector)
          (open-output-u8vector open-output-u8vector)
          (call-with-input-u8vector call-with-input-u8vector)
          (with-input-from-u8vector with-input-from-u8vector)
          (call-with-output-u8vector call-with-output-u8vector)
          (with-output-to-u8vector with-output-to-u8vector)
          (open-u8vector-pipe open-u8vector-pipe)
          (get-output-u8vector get-output-u8vector)
          (object->u8vector object->u8vector)
          (open-process open-process)
          (open-input-process open-input-process)
          (open-output-process open-output-process)
          (call-with-input-process call-with-input-process)
          (call-with-output-process call-with-output-process)
          (with-input-from-process with-input-from-process)
          (with-output-to-process with-output-to-process)
          (process-pid process-pid)
          (process-status process-status)
          (with-input-from-port with-input-from-port)
          (with-output-to-port with-output-to-port)
          (input-port-char-position input-port-char-position)
          (output-port-char-position output-port-char-position)
          (open-event-queue open-event-queue)
          (open-dummy open-dummy)
          (port-settings-set! port-settings-set!)
          (input-port-bytes-buffered input-port-bytes-buffered)
          (input-port-characters-buffered input-port-characters-buffered)
          (repl-input-port repl-input-port)
          (repl-output-port repl-output-port)
          (console-port console-port)
          (peek-char peek-char))
         (%#define-runtime write-string gerbil/gambit/ports#write-string)
         (%#define-runtime read-string gerbil/gambit/ports#read-string)
         (%#define-runtime write-u8vector gerbil/gambit/ports#write-u8vector)
         (%#define-runtime read-u8vector gerbil/gambit/ports#read-u8vector))
(%#call (%#ref _gx#load-module) (%#quote "gerbil/gambit/ports__0"))
