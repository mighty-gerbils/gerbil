prelude: :gerbil/core
package: gerbil/runtime
namespace: #f

(%#begin (%#import
          :gerbil/runtime/gambit
          :gerbil/runtime/util
          :gerbil/runtime/table
          :gerbil/runtime/mop
          :gerbil/runtime/error
          :gerbil/runtime/interface)
         (%#export #t)
         (%#define-runtime UnboundKeyError::t UnboundKeyError::t)
         (%#define-runtime UnboundKeyError? UnboundKeyError?)
         (%#define-runtime make-UnboundKeyError make-UnboundKeyError)
         (%#define-runtime UnboundKeyError-message UnboundKeyError-message)
         (%#define-runtime UnboundKeyError-irritants UnboundKeyError-irritants)
         (%#define-runtime UnboundKeyError-where UnboundKeyError-where)
         (%#define-runtime
          UnboundKeyError-continuation
          UnboundKeyError-continuation)
         (%#define-runtime
          UnboundKeyError-message-set!
          UnboundKeyError-message-set!)
         (%#define-runtime
          UnboundKeyError-irritants-set!
          UnboundKeyError-irritants-set!)
         (%#define-runtime
          UnboundKeyError-where-set!
          UnboundKeyError-where-set!)
         (%#define-runtime
          UnboundKeyError-continuation-set!
          UnboundKeyError-continuation-set!)
         (%#define-runtime &UnboundKeyError-message &UnboundKeyError-message)
         (%#define-runtime
          &UnboundKeyError-irritants
          &UnboundKeyError-irritants)
         (%#define-runtime &UnboundKeyError-where &UnboundKeyError-where)
         (%#define-runtime
          &UnboundKeyError-continuation
          &UnboundKeyError-continuation)
         (%#define-runtime
          &UnboundKeyError-message-set!
          &UnboundKeyError-message-set!)
         (%#define-runtime
          &UnboundKeyError-irritants-set!
          &UnboundKeyError-irritants-set!)
         (%#define-runtime
          &UnboundKeyError-where-set!
          &UnboundKeyError-where-set!)
         (%#define-runtime
          &UnboundKeyError-continuation-set!
          &UnboundKeyError-continuation-set!)
         (%#begin (%#begin-syntax
                   (%#call (%#ref load-module)
                           (%#quote "gerbil/runtime/hash~1")))
                  (%#define-syntax UnboundKeyError |[:0:]#UnboundKeyError|))
         (%#define-runtime UnboundKeyError:::init! UnboundKeyError:::init!)
         (%#define-runtime raise-unbound-key-error raise-unbound-key-error)
         (%#define-runtime unbound-key-error? unbound-key-error?)
         (%#define-syntax @HashTable |[:0:]#@HashTable|)
         (%#define-runtime HashTable::t HashTable::t)
         (%#define-runtime HashTable::interface HashTable::interface)
         (%#define-runtime make-HashTable make-HashTable)
         (%#define-runtime try-HashTable try-HashTable)
         (%#define-runtime HashTable? HashTable?)
         (%#define-runtime is-HashTable? is-HashTable?)
         (%#define-syntax HashTable |[:0:]#HashTable|)
         (%#define-runtime HashTable-clear! HashTable-clear!)
         (%#define-runtime &HashTable-clear! &HashTable-clear!)
         (%#define-runtime HashTable-copy HashTable-copy)
         (%#define-runtime __HashTable-copy __HashTable-copy)
         (%#define-runtime &HashTable-copy &HashTable-copy)
         (%#define-runtime HashTable-delete! HashTable-delete!)
         (%#define-runtime &HashTable-delete! &HashTable-delete!)
         (%#define-runtime HashTable-for-each HashTable-for-each)
         (%#define-runtime &HashTable-for-each &HashTable-for-each)
         (%#define-runtime HashTable-length HashTable-length)
         (%#define-runtime __HashTable-length __HashTable-length)
         (%#define-runtime &HashTable-length &HashTable-length)
         (%#define-runtime HashTable-ref HashTable-ref)
         (%#define-runtime &HashTable-ref &HashTable-ref)
         (%#define-runtime HashTable-set! HashTable-set!)
         (%#define-runtime &HashTable-set! &HashTable-set!)
         (%#define-runtime HashTable-update! HashTable-update!)
         (%#define-runtime &HashTable-update! &HashTable-update!)
         (%#define-runtime Locker::t Locker::t)
         (%#define-runtime Locker::interface Locker::interface)
         (%#define-runtime make-Locker make-Locker)
         (%#define-runtime try-Locker try-Locker)
         (%#define-runtime Locker? Locker?)
         (%#define-runtime is-Locker? is-Locker?)
         (%#define-syntax Locker |[:0:]#Locker|)
         (%#define-runtime Locker-read-lock! Locker-read-lock!)
         (%#define-runtime &Locker-read-lock! &Locker-read-lock!)
         (%#define-runtime Locker-read-unlock! Locker-read-unlock!)
         (%#define-runtime &Locker-read-unlock! &Locker-read-unlock!)
         (%#define-runtime Locker-write-lock! Locker-write-lock!)
         (%#define-runtime &Locker-write-lock! &Locker-write-lock!)
         (%#define-runtime Locker-write-unlock! Locker-write-unlock!)
         (%#define-runtime &Locker-write-unlock! &Locker-write-unlock!)
         (%#define-runtime gambit-table-update! gambit-table-update!)
         (%#define-runtime gambit-table-for-each gambit-table-for-each)
         (%#define-runtime gambit-table-clear! gambit-table-clear!)
         (%#define-runtime hash-table::t hash-table::t)
         (%#define-runtime gc-hash-table::t gc-hash-table::t)
         (%#define-runtime locked-hash-table::t locked-hash-table::t)
         (%#define-runtime locked-hash-table? locked-hash-table?)
         (%#define-runtime make-locked-hash-table make-locked-hash-table)
         (%#define-runtime locked-hash-table-table locked-hash-table-table)
         (%#define-runtime locked-hash-table-lock locked-hash-table-lock)
         (%#define-runtime
          locked-hash-table-table-set!
          locked-hash-table-table-set!)
         (%#define-runtime
          locked-hash-table-lock-set!
          locked-hash-table-lock-set!)
         (%#define-runtime &locked-hash-table-table &locked-hash-table-table)
         (%#define-runtime &locked-hash-table-lock &locked-hash-table-lock)
         (%#define-runtime
          &locked-hash-table-table-set!
          &locked-hash-table-table-set!)
         (%#define-runtime
          &locked-hash-table-lock-set!
          &locked-hash-table-lock-set!)
         (%#define-syntax locked-hash-table |[:0:]#locked-hash-table|)
         (%#define-runtime checked-hash-table::t checked-hash-table::t)
         (%#define-runtime checked-hash-table? checked-hash-table?)
         (%#define-runtime make-checked-hash-table make-checked-hash-table)
         (%#define-runtime checked-hash-table-table checked-hash-table-table)
         (%#define-runtime
          checked-hash-table-key-check
          checked-hash-table-key-check)
         (%#define-runtime
          checked-hash-table-table-set!
          checked-hash-table-table-set!)
         (%#define-runtime
          checked-hash-table-key-check-set!
          checked-hash-table-key-check-set!)
         (%#define-runtime &checked-hash-table-table &checked-hash-table-table)
         (%#define-runtime
          &checked-hash-table-key-check
          &checked-hash-table-key-check)
         (%#define-runtime
          &checked-hash-table-table-set!
          &checked-hash-table-table-set!)
         (%#define-runtime
          &checked-hash-table-key-check-set!
          &checked-hash-table-key-check-set!)
         (%#define-syntax checked-hash-table |[:0:]#checked-hash-table|)
         (%#define-runtime eq-hash-table::t eq-hash-table::t)
         (%#define-runtime eq-hash-table? eq-hash-table?)
         (%#define-runtime make-eq-hash-table make-eq-hash-table)
         (%#define-runtime eqv-hash-table::t eqv-hash-table::t)
         (%#define-runtime eqv-hash-table? eqv-hash-table?)
         (%#define-runtime make-eqv-hash-table make-eqv-hash-table)
         (%#define-runtime symbol-hash-table::t symbol-hash-table::t)
         (%#define-runtime symbol-hash-table? symbol-hash-table?)
         (%#define-runtime make-symbol-hash-table make-symbol-hash-table)
         (%#define-runtime string-hash-table::t string-hash-table::t)
         (%#define-runtime string-hash-table? string-hash-table?)
         (%#define-runtime make-string-hash-table make-string-hash-table)
         (%#define-runtime immediate-hash-table::t immediate-hash-table::t)
         (%#define-runtime immediate-hash-table? immediate-hash-table?)
         (%#define-runtime make-immediate-hash-table make-immediate-hash-table)
         (%#define-runtime hash-table? hash-table?)
         (%#define-runtime is-hash-table? is-hash-table?)
         (%#define-syntax deflocked-hash-method |[:0:]#deflocked-hash-method|)
         (%#define-runtime
          _%locked-hash-table::ref103842%_
          _%locked-hash-table::ref103841%_)
         (%#define-runtime
          _%locked-hash-table::set!103845%_
          _%locked-hash-table::set!103844%_)
         (%#define-runtime
          _%locked-hash-table::update!103848%_
          _%locked-hash-table::update!103847%_)
         (%#define-runtime
          _%locked-hash-table::delete!103851%_
          _%locked-hash-table::delete!103850%_)
         (%#define-runtime
          _%locked-hash-table::for-each103854%_
          _%locked-hash-table::for-each103853%_)
         (%#define-runtime
          _%locked-hash-table::length103857%_
          _%locked-hash-table::length103856%_)
         (%#define-runtime
          _%locked-hash-table::copy103860%_
          _%locked-hash-table::copy103859%_)
         (%#define-runtime
          _%locked-hash-table::clear!103863%_
          _%locked-hash-table::clear!103862%_)
         (%#define-syntax
          defchecked-hash-method
          |[:0:]#defchecked-hash-method|)
         (%#define-runtime
          _%checked-hash-table::ref104077%_
          _%checked-hash-table::ref104076%_)
         (%#define-runtime
          _%checked-hash-table::set!104080%_
          _%checked-hash-table::set!104079%_)
         (%#define-runtime
          _%checked-hash-table::update!104083%_
          _%checked-hash-table::update!104082%_)
         (%#define-runtime
          _%checked-hash-table::delete!104086%_
          _%checked-hash-table::delete!104085%_)
         (%#define-runtime
          _%checked-hash-table::for-each104089%_
          _%checked-hash-table::for-each104088%_)
         (%#define-runtime
          _%checked-hash-table::length104092%_
          _%checked-hash-table::length104091%_)
         (%#define-runtime
          _%checked-hash-table::copy104095%_
          _%checked-hash-table::copy104094%_)
         (%#define-runtime
          _%checked-hash-table::clear!104098%_
          _%checked-hash-table::clear!104097%_)
         (%#define-runtime make-generic-hash-table make-generic-hash-table)
         (%#begin (%#define-runtime make-hash-table__% make-hash-table__%)
                  (%#define-runtime make-hash-table__@ make-hash-table__@)
                  (%#define-runtime make-hash-table make-hash-table))
         (%#define-runtime make-hash-table-eq make-hash-table-eq)
         (%#define-runtime make-hash-table-eqv make-hash-table-eqv)
         (%#define-runtime make-hash-table-symbolic make-hash-table-symbolic)
         (%#define-runtime make-hash-table-string make-hash-table-string)
         (%#define-runtime make-hash-table-immediate make-hash-table-immediate)
         (%#define-runtime list->hash-table list->hash-table)
         (%#define-runtime list->hash-table-eq list->hash-table-eq)
         (%#define-runtime list->hash-table-eqv list->hash-table-eqv)
         (%#define-runtime list->hash-table-symbolic list->hash-table-symbolic)
         (%#define-runtime list->hash-table-string list->hash-table-string)
         (%#define-runtime
          list->hash-table-immediate
          list->hash-table-immediate)
         (%#define-runtime list->hash-table! list->hash-table!)
         (%#define-runtime plist->hash-table plist->hash-table)
         (%#define-runtime plist->hash-table-eq plist->hash-table-eq)
         (%#define-runtime plist->hash-table-eqv plist->hash-table-eqv)
         (%#define-runtime
          plist->hash-table-symbolic
          plist->hash-table-symbolic)
         (%#define-runtime plist->hash-table-string plist->hash-table-string)
         (%#define-runtime
          plist->hash-table-immediate
          plist->hash-table-immediate)
         (%#define-runtime plist->hash-table! plist->hash-table!)
         (%#define-syntax defhash-method |[:0:]#defhash-method|)
         (%#define-runtime hash-length hash-length)
         (%#define-runtime __hash-length __hash-length)
         (%#begin (%#define-runtime hash-ref__% hash-ref__%)
                  (%#begin (%#define-runtime hash-ref__0 hash-ref__0)
                           (%#define-runtime hash-ref hash-ref)))
         (%#begin (%#define-runtime __hash-ref__% __hash-ref__%)
                  (%#begin (%#define-runtime __hash-ref__0 __hash-ref__0)
                           (%#define-runtime __hash-ref __hash-ref)))
         (%#define-runtime hash-get hash-get)
         (%#define-runtime __hash-get __hash-get)
         (%#define-runtime hash-put! hash-put!)
         (%#define-runtime __hash-put! __hash-put!)
         (%#begin (%#define-runtime hash-update!__% hash-update!__%)
                  (%#begin (%#define-runtime hash-update!__0 hash-update!__0)
                           (%#define-runtime hash-update! hash-update!)))
         (%#begin (%#define-runtime __hash-update!__% __hash-update!__%)
                  (%#begin (%#define-runtime
                            __hash-update!__0
                            __hash-update!__0)
                           (%#define-runtime __hash-update! __hash-update!)))
         (%#define-runtime hash-remove! hash-remove!)
         (%#define-runtime __hash-remove! __hash-remove!)
         (%#define-runtime hash-key? hash-key?)
         (%#define-runtime __hash-key? __hash-key?)
         (%#define-runtime hash->list hash->list)
         (%#define-runtime __hash->list __hash->list)
         (%#define-runtime hash->plist hash->plist)
         (%#define-runtime __hash->plist __hash->plist)
         (%#define-runtime hash-for-each hash-for-each)
         (%#define-runtime __hash-for-each __hash-for-each)
         (%#define-runtime hash-map hash-map)
         (%#define-runtime __hash-map __hash-map)
         (%#define-runtime hash-fold hash-fold)
         (%#define-runtime __hash-fold __hash-fold)
         (%#begin (%#define-runtime hash-find__% hash-find__%)
                  (%#begin (%#define-runtime hash-find__0 hash-find__0)
                           (%#define-runtime hash-find hash-find)))
         (%#begin (%#define-runtime __hash-find__% __hash-find__%)
                  (%#begin (%#define-runtime __hash-find__0 __hash-find__0)
                           (%#define-runtime __hash-find __hash-find)))
         (%#define-runtime hash-keys hash-keys)
         (%#define-runtime __hash-keys __hash-keys)
         (%#define-runtime hash-values hash-values)
         (%#define-runtime __hash-values __hash-values)
         (%#define-runtime hash-copy hash-copy)
         (%#define-runtime __hash-copy __hash-copy)
         (%#define-runtime hash-clear! hash-clear!)
         (%#define-runtime __hash-clear! __hash-clear!)
         (%#define-runtime hash-merge hash-merge)
         (%#define-runtime __hash-merge __hash-merge)
         (%#define-runtime hash-merge! hash-merge!)
         (%#define-runtime __hash-merge! __hash-merge!))
(%#call (%#ref load-module) (%#quote "gerbil/runtime/hash~0"))
