prelude: :gerbil/core
package: gerbil/runtime
namespace: #f

(%#begin (%#export #t)
         (%#import
          :gerbil/runtime/gambit
          :gerbil/runtime/util
          :gerbil/runtime/mop
          :gerbil/runtime/error)
         (%#begin (%#begin-syntax
                   (%#call (%#ref load-module)
                           (%#quote "gerbil/runtime/syntax~1")))
                  (%#define-syntax core-ast-case |[:0:]#core-ast-case|))
         (%#define-syntax core-ast-case% |[:0:]#core-ast-case%|)
         (%#define-runtime SyntaxError::t SyntaxError::t)
         (%#define-runtime SyntaxError? SyntaxError?)
         (%#define-runtime make-SyntaxError make-SyntaxError)
         (%#define-runtime SyntaxError-message SyntaxError-message)
         (%#define-runtime SyntaxError-irritants SyntaxError-irritants)
         (%#define-runtime SyntaxError-where SyntaxError-where)
         (%#define-runtime SyntaxError-context SyntaxError-context)
         (%#define-runtime SyntaxError-phi SyntaxError-phi)
         (%#define-runtime SyntaxError-marks SyntaxError-marks)
         (%#define-runtime SyntaxError-message-set! SyntaxError-message-set!)
         (%#define-runtime
          SyntaxError-irritants-set!
          SyntaxError-irritants-set!)
         (%#define-runtime SyntaxError-where-set! SyntaxError-where-set!)
         (%#define-runtime SyntaxError-context-set! SyntaxError-context-set!)
         (%#define-runtime SyntaxError-phi-set! SyntaxError-phi-set!)
         (%#define-runtime SyntaxError-marks-set! SyntaxError-marks-set!)
         (%#define-runtime &SyntaxError-message &SyntaxError-message)
         (%#define-runtime &SyntaxError-irritants &SyntaxError-irritants)
         (%#define-runtime &SyntaxError-where &SyntaxError-where)
         (%#define-runtime &SyntaxError-context &SyntaxError-context)
         (%#define-runtime &SyntaxError-phi &SyntaxError-phi)
         (%#define-runtime &SyntaxError-marks &SyntaxError-marks)
         (%#define-runtime &SyntaxError-message-set! &SyntaxError-message-set!)
         (%#define-runtime
          &SyntaxError-irritants-set!
          &SyntaxError-irritants-set!)
         (%#define-runtime &SyntaxError-where-set! &SyntaxError-where-set!)
         (%#define-runtime &SyntaxError-context-set! &SyntaxError-context-set!)
         (%#define-runtime &SyntaxError-phi-set! &SyntaxError-phi-set!)
         (%#define-runtime &SyntaxError-marks-set! &SyntaxError-marks-set!)
         (%#define-syntax SyntaxError |[:0:]#SyntaxError|)
         (%#define-runtime
          SyntaxError::display-exception
          SyntaxError::display-exception)
         (%#define-runtime make-syntax-error make-syntax-error)
         (%#define-runtime syntax-error? syntax-error?)
         (%#define-runtime __raise-syntax-error __raise-syntax-error)
         (%#define-runtime AST::t AST::t)
         (%#define-runtime AST? AST?)
         (%#define-runtime make-AST make-AST)
         (%#define-runtime AST-e AST-e)
         (%#define-runtime AST-source AST-source)
         (%#define-runtime AST-e-set! AST-e-set!)
         (%#define-runtime AST-source-set! AST-source-set!)
         (%#define-runtime &AST-e &AST-e)
         (%#define-runtime &AST-source &AST-source)
         (%#define-runtime &AST-e-set! &AST-e-set!)
         (%#define-runtime &AST-source-set! &AST-source-set!)
         (%#define-syntax AST |[:0:]#AST|)
         (%#define-runtime __AST-e __AST-e)
         (%#define-runtime __AST-source __AST-source)
         (%#define-runtime __AST __AST)
         (%#define-runtime __AST-eq? __AST-eq?)
         (%#define-runtime __AST-pair? __AST-pair?)
         (%#define-runtime __AST-null? __AST-null?)
         (%#define-runtime __AST-datum? __AST-datum?)
         (%#define-runtime __AST-id? __AST-id?)
         (%#begin (%#define-runtime __AST-id-list?__% __AST-id-list?__%)
                  (%#begin (%#define-runtime
                            __AST-id-list?__0
                            __AST-id-list?__0)
                           (%#define-runtime __AST-id-list? __AST-id-list?)))
         (%#define-runtime __AST-bind-list? __AST-bind-list?)
         (%#begin (%#define-runtime __AST-list?__% __AST-list?__%)
                  (%#begin (%#define-runtime __AST-list?__0 __AST-list?__0)
                           (%#define-runtime __AST-list? __AST-list?)))
         (%#define-runtime __AST->list __AST->list)
         (%#define-runtime __AST->datum __AST->datum)
         (%#define-runtime get-readenv get-readenv)
         (%#begin (%#define-runtime read-syntax__% read-syntax__%)
                  (%#begin (%#define-runtime read-syntax__0 read-syntax__0)
                           (%#define-runtime read-syntax read-syntax)))
         (%#define-runtime read-syntax-from-file read-syntax-from-file)
         (%#define-runtime __wrap-syntax __wrap-syntax)
         (%#define-runtime __unwrap-syntax __unwrap-syntax)
         (%#define-runtime __pp-syntax __pp-syntax)
         (%#define-runtime __make-readtable __make-readtable)
         (%#define-runtime
          __readtable-bracket-keyword-set!
          __readtable-bracket-keyword-set!)
         (%#define-runtime
          __readtable-brace-keyword-set!
          __readtable-brace-keyword-set!)
         (%#define-runtime __read-sharp-bang __read-sharp-bang)
         (%#define-runtime __*readtable* __*readtable*)
         (%#define-runtime source-location? source-location?)
         (%#define-runtime source-location-path? source-location-path?)
         (%#define-runtime source-location-path source-location-path))
(%#call (%#ref load-module) (%#quote "gerbil/runtime/syntax~0"))
