prelude: :gerbil/core
package: gerbil/runtime
namespace: #f

(%#begin (%#import
          :gerbil/runtime/gambit
          :gerbil/runtime/util
          :gerbil/runtime/error
          :gerbil/runtime/hash)
         (%#export #t)
         (%#define-runtime spawn spawn)
         (%#define-runtime __spawn __spawn)
         (%#define-runtime spawn/name spawn/name)
         (%#define-runtime __spawn/name __spawn/name)
         (%#define-runtime spawn/group spawn/group)
         (%#define-runtime __spawn/group __spawn/group)
         (%#define-runtime spawn-actor spawn-actor)
         (%#begin (%#define-runtime spawn-thread__% spawn-thread__%)
                  (%#begin (%#define-runtime spawn-thread__0 spawn-thread__0)
                           (%#define-runtime spawn-thread__1 spawn-thread__1)
                           (%#define-runtime spawn-thread spawn-thread)))
         (%#begin (%#define-runtime thread-local-ref__% thread-local-ref__%)
                  (%#begin (%#define-runtime
                            thread-local-ref__0
                            thread-local-ref__0)
                           (%#define-runtime
                            thread-local-ref
                            thread-local-ref)))
         (%#define-runtime thread-local-get thread-local-get)
         (%#define-runtime thread-local-set! thread-local-set!)
         (%#define-runtime thread-local-delete! thread-local-delete!)
         (%#define-runtime thread-local-table thread-local-table)
         (%#define-runtime
          __primordial-thread-locals
          __primordial-thread-locals)
         (%#define-runtime __thread-locals __thread-locals)
         (%#define-runtime __thread-locals-mutex __thread-locals-mutex)
         (%#define-runtime
          __unhandled-actor-exception-hook
          __unhandled-actor-exception-hook)
         (%#define-runtime
          unhandled-actor-exception-hook-set!
          unhandled-actor-exception-hook-set!)
         (%#define-runtime current-thread-group current-thread-group)
         (%#define-runtime with-lock with-lock)
         (%#define-runtime __with-lock __with-lock)
         (%#define-runtime with-dynamic-lock with-dynamic-lock)
         (%#define-runtime __with-dynamic-lock __with-dynamic-lock)
         (%#begin (%#define-runtime
                   with-exception-stack-trace__%
                   with-exception-stack-trace__%)
                  (%#begin (%#define-runtime
                            with-exception-stack-trace__0
                            with-exception-stack-trace__0)
                           (%#define-runtime
                            with-exception-stack-trace
                            with-exception-stack-trace)))
         (%#begin (%#define-runtime
                   __with-exception-stack-trace__%
                   __with-exception-stack-trace__%)
                  (%#begin (%#define-runtime
                            __with-exception-stack-trace__0
                            __with-exception-stack-trace__0)
                           (%#define-runtime
                            __with-exception-stack-trace
                            __with-exception-stack-trace)))
         (%#begin (%#define-runtime dump-stack-trace!__% dump-stack-trace!__%)
                  (%#begin (%#define-runtime
                            dump-stack-trace!__0
                            dump-stack-trace!__0)
                           (%#define-runtime
                            dump-stack-trace!
                            dump-stack-trace!)))
         (%#extern
          (actor-thread? actor-thread?)
          (construct-actor-thread construct-actor-thread)
          (actor-thread-locals actor-thread-locals)
          (actor-thread-locals-set! actor-thread-locals-set!)
          (actor-thread-nonce actor-thread-nonce)
          (actor-thread-nonce-set! actor-thread-nonce-set!)))
(%#call (%#ref load-module) (%#quote "gerbil/runtime/thread~0"))
