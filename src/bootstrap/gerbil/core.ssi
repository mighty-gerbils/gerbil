prelude: :<root>
package: gerbil
namespace: gerbil/core

(%#begin (%#import :gerbil/core/module-sugar)
         (%#import
          :gerbil/core/runtime
          :gerbil/core/sugar
          (spec:
           (:gerbil/core/mop)
           (0 MOP-3 0 MOP-3)
           (0 MOP-2 0 MOP-2)
           (0 MOP-1 0 MOP-1)
           (0 MOP-5 0 MOP-5)
           (0 MOP-4 0 MOP-4)
           (0 defclass-type 0 defclass-type)
           (0 defstruct-type 0 defstruct-type)
           (1 module-type-id 1 module-type-id)
           (1 make-class-type-id 1 make-class-type-id)
           (0 define-class 0 define-class)
           (0 @ 0 @)
           (0 defmethod 0 defmethod)
           (0 define-struct 0 define-struct)
           (0 defstruct 0 defstruct)
           (0 @-set! 0 @-set!)
           (0 defclass 0 defclass)
           (0 :directory-port 0 :directory-port)
           (0 :s32vector 0 :s32vector)
           (0 :s8vector 0 :s8vector)
           (0 :symbol 0 :symbol)
           (0 :number 0 :number)
           (0 :thread-group 0 :thread-group)
           (0 :writeenv 0 :writeenv)
           (0 :ratnum 0 :ratnum)
           (0 :object-port 0 :object-port)
           (0 :device-port 0 :device-port)
           (0 :byte-port 0 :byte-port)
           (0 :vector 0 :vector)
           (0 :time 0 :time)
           (0 :false 0 :false)
           (0 :string-port 0 :string-port)
           (0 :promise 0 :promise)
           (0 :file-info 0 :file-info)
           (0 :address-info 0 :address-info)
           (0 :vm 0 :vm)
           (0 :frame 0 :frame)
           (0 :table 0 :table)
           (0 :event-queue-port 0 :event-queue-port)
           (0 :tcp-server-port 0 :tcp-server-port)
           (0 :port 0 :port)
           (0 :fixnum 0 :fixnum)
           (0 :real 0 :real)
           (0 :procedure 0 :procedure)
           (0 :special 0 :special)
           (0 :void 0 :void)
           (0 :values 0 :values)
           (0 :f64vector 0 :f64vector)
           (0 :char 0 :char)
           (0 :class 0 :class)
           (0 :t 0 :t)
           (0 :mutex 0 :mutex)
           (0 defsystem-class-info 0 defsystem-class-info)
           (0 :readenv 0 :readenv)
           (0 :integer 0 :integer)
           (0 :raw-device-port 0 :raw-device-port)
           (0 :u8vector 0 :u8vector)
           (0 :u64vector 0 :u64vector)
           (0 :udp-port 0 :udp-port)
           (0 :condvar 0 :condvar)
           (0 :eof 0 :eof)
           (0 :weak 0 :weak)
           (0 :box 0 :box)
           (0 :u16vector 0 :u16vector)
           (0 :symbolic 0 :symbolic)
           (0 :bignum 0 :bignum)
           (0 :atom 0 :atom)
           (0 :u8vector-port 0 :u8vector-port)
           (0 :continuation 0 :continuation)
           (0 :sequence 0 :sequence)
           (0 :processor 0 :processor)
           (0 :hvector 0 :hvector)
           (0 :socket-info 0 :socket-info)
           (0 :character-port 0 :character-port)
           (0 :f32vector 0 :f32vector)
           (0 :pair 0 :pair)
           (0 :cpxnum 0 :cpxnum)
           (0 :keyword 0 :keyword)
           (0 class 0 class)
           (0 :flonum 0 :flonum)
           (0 :true 0 :true)
           (0 :vector-port 0 :vector-port)
           (0 :foreign 0 :foreign)
           (0 :s64vector 0 :s64vector)
           (0 :object 0 :object)
           (0 :s16vector 0 :s16vector)
           (0 :null 0 :null)
           (0 :immediate 0 :immediate)
           (0 :string 0 :string)
           (0 :u32vector 0 :u32vector)
           (0 :thread 0 :thread)
           (0 :list 0 :list)
           (0 :boolean 0 :boolean)
           (0 :readtable 0 :readtable)
           (1 defclass-type 1 defclass-type)
           (1 defstruct-type 1 defstruct-type)
           (2 module-type-id 2 module-type-id)
           (2 make-class-type-id 2 make-class-type-id)
           (1
            &!class-type-constructor-method-set!
            1
            &!class-type-constructor-method-set!)
           (1 &!class-type-slot-types 1 &!class-type-slot-types)
           (1 &!class-type-predicate-set! 1 &!class-type-predicate-set!)
           (1 &!class-type-slots-set! 1 &!class-type-slots-set!)
           (1 &!class-type-slots 1 &!class-type-slots)
           (1 !class-type-predicate 1 !class-type-predicate)
           (1 !class-type-id-set! 1 !class-type-id-set!)
           (1 &!class-type-slot-contracts 1 &!class-type-slot-contracts)
           (1 !class-type-slot-defaults 1 !class-type-slot-defaults)
           (1 &!class-type-descriptor 1 &!class-type-descriptor)
           (1 &!class-type-slot-defaults 1 &!class-type-slot-defaults)
           (1
            &!class-type-constructor-method
            1
            &!class-type-constructor-method)
           (1 !class-type-id 1 !class-type-id)
           (1 !class-type-super 1 !class-type-super)
           (1 !class-type-system?-set! 1 !class-type-system?-set!)
           (1 !class-type-slots-set! 1 !class-type-slots-set!)
           (1 class-type-info? 1 class-type-info?)
           (1 !class-type-accessors-set! 1 !class-type-accessors-set!)
           (1
            &!class-type-ordered-slots-set!
            1
            &!class-type-ordered-slots-set!)
           (1 !class-type-ordered-slots 1 !class-type-ordered-slots)
           (1
            class-type-info::apply-macro-expander
            1
            class-type-info::apply-macro-expander)
           (1 !class-type-final?-set! 1 !class-type-final?-set!)
           (1 !class-type-ordered-slots-set! 1 !class-type-ordered-slots-set!)
           (1 &!class-type-struct? 1 &!class-type-struct?)
           (1 &!class-type-mutators-set! 1 &!class-type-mutators-set!)
           (1 &!class-type-super 1 &!class-type-super)
           (1 &!class-type-final?-set! 1 &!class-type-final?-set!)
           (1 !class-type-slots 1 !class-type-slots)
           (1
            &!class-type-unchecked-mutators
            1
            &!class-type-unchecked-mutators)
           (1 !class-type-constructor 1 !class-type-constructor)
           (1 !class-type-metaclass-set! 1 !class-type-metaclass-set!)
           (1
            &!class-type-unchecked-accessors
            1
            &!class-type-unchecked-accessors)
           (1 &!class-type-accessors-set! 1 &!class-type-accessors-set!)
           (1 &!class-type-constructor-set! 1 &!class-type-constructor-set!)
           (1 &!class-type-metaclass-set! 1 &!class-type-metaclass-set!)
           (1 &!class-type-struct?-set! 1 &!class-type-struct?-set!)
           (1
            &!class-type-precedence-list-set!
            1
            &!class-type-precedence-list-set!)
           (1 &!class-type-super-set! 1 &!class-type-super-set!)
           (1 &!class-type-name 1 &!class-type-name)
           (1 !class-type-name 1 !class-type-name)
           (1 &!class-type-name-set! 1 &!class-type-name-set!)
           (1 &!class-type-mutators 1 &!class-type-mutators)
           (1 class-type-info::t 1 class-type-info::t)
           (1 &!class-type-accessors 1 &!class-type-accessors)
           (1 !class-type-final? 1 !class-type-final?)
           (1 &!class-type-id-set! 1 &!class-type-id-set!)
           (1
            &!class-type-slot-contracts-set!
            1
            &!class-type-slot-contracts-set!)
           (1 !class-type-slot-defaults-set! 1 !class-type-slot-defaults-set!)
           (1
            !class-type-unchecked-accessors-set!
            1
            !class-type-unchecked-accessors-set!)
           (1 !class-type-accessors 1 !class-type-accessors)
           (1 !class-type-descriptor 1 !class-type-descriptor)
           (1
            !class-type-slot-contracts-set!
            1
            !class-type-slot-contracts-set!)
           (1
            &!class-type-slot-defaults-set!
            1
            &!class-type-slot-defaults-set!)
           (1 &!class-type-slot-types-set! 1 &!class-type-slot-types-set!)
           (1 &!class-type-descriptor-set! 1 &!class-type-descriptor-set!)
           (1
            !class-type-unchecked-mutators-set!
            1
            !class-type-unchecked-mutators-set!)
           (1 !class-type-name-set! 1 !class-type-name-set!)
           (1 &!class-type-constructor 1 &!class-type-constructor)
           (1 &!class-type-system? 1 &!class-type-system?)
           (1 &!class-type-final? 1 &!class-type-final?)
           (1 &!class-type-ordered-slots 1 &!class-type-ordered-slots)
           (1 &!class-type-id 1 &!class-type-id)
           (1 !class-type-unchecked-mutators 1 !class-type-unchecked-mutators)
           (1 !class-type-precedence-list 1 !class-type-precedence-list)
           (1 !class-type-mutators 1 !class-type-mutators)
           (1 !class-type-struct?-set! 1 !class-type-struct?-set!)
           (1 !class-type-predicate-set! 1 !class-type-predicate-set!)
           (1
            !class-type-constructor-method-set!
            1
            !class-type-constructor-method-set!)
           (1 !class-type-slot-types 1 !class-type-slot-types)
           (1 !class-type-constructor-method 1 !class-type-constructor-method)
           (1
            !class-type-unchecked-accessors
            1
            !class-type-unchecked-accessors)
           (1 !class-type-super-set! 1 !class-type-super-set!)
           (1 !class-type-metaclass 1 !class-type-metaclass)
           (1 make-class-type-info 1 make-class-type-info)
           (1 &!class-type-system?-set! 1 &!class-type-system?-set!)
           (1 !class-type-system? 1 !class-type-system?)
           (1 &!class-type-metaclass 1 &!class-type-metaclass)
           (1 !class-type-descriptor-set! 1 !class-type-descriptor-set!)
           (1 !class-type-mutators-set! 1 !class-type-mutators-set!)
           (1
            &!class-type-unchecked-accessors-set!
            1
            &!class-type-unchecked-accessors-set!)
           (1
            &!class-type-unchecked-mutators-set!
            1
            &!class-type-unchecked-mutators-set!)
           (1 &!class-type-predicate 1 &!class-type-predicate)
           (1 !class-type-slot-contracts 1 !class-type-slot-contracts)
           (1 !class-type-slot-types-set! 1 !class-type-slot-types-set!)
           (1 !class-type-constructor-set! 1 !class-type-constructor-set!)
           (1 &!class-type-precedence-list 1 &!class-type-precedence-list)
           (1
            !class-type-precedence-list-set!
            1
            !class-type-precedence-list-set!)
           (1 syntax-local-class-type-info? 1 syntax-local-class-type-info?)
           (1 !class-type-struct? 1 !class-type-struct?)
           (1 class-type-info 1 class-type-info)
           (1 define-class 1 define-class)
           (1 @ 1 @)
           (1 defmethod 1 defmethod)
           (1 define-struct 1 define-struct)
           (1 defstruct 1 defstruct)
           (1 @-set! 1 @-set!)
           (1 defclass 1 defclass)
           (1 :directory-port 1 :directory-port)
           (1 :s32vector 1 :s32vector)
           (1 :s8vector 1 :s8vector)
           (1 :symbol 1 :symbol)
           (1 :number 1 :number)
           (1 :thread-group 1 :thread-group)
           (1 :writeenv 1 :writeenv)
           (1 :ratnum 1 :ratnum)
           (1 :object-port 1 :object-port)
           (1 :device-port 1 :device-port)
           (1 :byte-port 1 :byte-port)
           (1 :vector 1 :vector)
           (1 :time 1 :time)
           (1 :false 1 :false)
           (1 :string-port 1 :string-port)
           (1 :promise 1 :promise)
           (1 :file-info 1 :file-info)
           (1 :address-info 1 :address-info)
           (1 :vm 1 :vm)
           (1 :frame 1 :frame)
           (1 :table 1 :table)
           (1 :event-queue-port 1 :event-queue-port)
           (1 :tcp-server-port 1 :tcp-server-port)
           (1 :port 1 :port)
           (1 :fixnum 1 :fixnum)
           (1 :real 1 :real)
           (1 :procedure 1 :procedure)
           (1 :special 1 :special)
           (1 :void 1 :void)
           (1 :values 1 :values)
           (1 :f64vector 1 :f64vector)
           (1 :char 1 :char)
           (1 :class 1 :class)
           (1 :t 1 :t)
           (1 :mutex 1 :mutex)
           (1 defsystem-class-info 1 defsystem-class-info)
           (1 :readenv 1 :readenv)
           (1 :integer 1 :integer)
           (1 :raw-device-port 1 :raw-device-port)
           (1 :u8vector 1 :u8vector)
           (1 :u64vector 1 :u64vector)
           (1 :udp-port 1 :udp-port)
           (1 :condvar 1 :condvar)
           (1 :eof 1 :eof)
           (1 :weak 1 :weak)
           (1 :box 1 :box)
           (1 :u16vector 1 :u16vector)
           (1 :symbolic 1 :symbolic)
           (1 :bignum 1 :bignum)
           (1 :atom 1 :atom)
           (1 :u8vector-port 1 :u8vector-port)
           (1 :continuation 1 :continuation)
           (1 :sequence 1 :sequence)
           (1 :processor 1 :processor)
           (1 :hvector 1 :hvector)
           (1 :socket-info 1 :socket-info)
           (1 :character-port 1 :character-port)
           (1 :f32vector 1 :f32vector)
           (1 :pair 1 :pair)
           (1 :cpxnum 1 :cpxnum)
           (1 :keyword 1 :keyword)
           (1 class 1 class)
           (1 :flonum 1 :flonum)
           (1 :true 1 :true)
           (1 :vector-port 1 :vector-port)
           (1 :foreign 1 :foreign)
           (1 :s64vector 1 :s64vector)
           (1 :object 1 :object)
           (1 :s16vector 1 :s16vector)
           (1 :null 1 :null)
           (1 :immediate 1 :immediate)
           (1 :string 1 :string)
           (1 :u32vector 1 :u32vector)
           (1 :thread 1 :thread)
           (1 :list 1 :list)
           (1 :boolean 1 :boolean)
           (1 :readtable 1 :readtable))
          :gerbil/core/match
          :gerbil/core/more-sugar
          :gerbil/core/contract
          (phi: 1 :gerbil/core/runtime)
          (phi: 1 :gerbil/core/sugar)
          (spec:
           (:gerbil/core/mop)
           (1 MOP-3 0 MOP-3)
           (1 MOP-2 0 MOP-2)
           (1 MOP-1 0 MOP-1)
           (1 MOP-5 0 MOP-5)
           (1 MOP-4 0 MOP-4)
           (1 defclass-type 0 defclass-type)
           (1 defstruct-type 0 defstruct-type)
           (2 module-type-id 1 module-type-id)
           (2 make-class-type-id 1 make-class-type-id)
           (1 define-class 0 define-class)
           (1 @ 0 @)
           (1 defmethod 0 defmethod)
           (1 define-struct 0 define-struct)
           (1 defstruct 0 defstruct)
           (1 @-set! 0 @-set!)
           (1 defclass 0 defclass)
           (1 :directory-port 0 :directory-port)
           (1 :s32vector 0 :s32vector)
           (1 :s8vector 0 :s8vector)
           (1 :symbol 0 :symbol)
           (1 :number 0 :number)
           (1 :thread-group 0 :thread-group)
           (1 :writeenv 0 :writeenv)
           (1 :ratnum 0 :ratnum)
           (1 :object-port 0 :object-port)
           (1 :device-port 0 :device-port)
           (1 :byte-port 0 :byte-port)
           (1 :vector 0 :vector)
           (1 :time 0 :time)
           (1 :false 0 :false)
           (1 :string-port 0 :string-port)
           (1 :promise 0 :promise)
           (1 :file-info 0 :file-info)
           (1 :address-info 0 :address-info)
           (1 :vm 0 :vm)
           (1 :frame 0 :frame)
           (1 :table 0 :table)
           (1 :event-queue-port 0 :event-queue-port)
           (1 :tcp-server-port 0 :tcp-server-port)
           (1 :port 0 :port)
           (1 :fixnum 0 :fixnum)
           (1 :real 0 :real)
           (1 :procedure 0 :procedure)
           (1 :special 0 :special)
           (1 :void 0 :void)
           (1 :values 0 :values)
           (1 :f64vector 0 :f64vector)
           (1 :char 0 :char)
           (1 :class 0 :class)
           (1 :t 0 :t)
           (1 :mutex 0 :mutex)
           (1 defsystem-class-info 0 defsystem-class-info)
           (1 :readenv 0 :readenv)
           (1 :integer 0 :integer)
           (1 :raw-device-port 0 :raw-device-port)
           (1 :u8vector 0 :u8vector)
           (1 :u64vector 0 :u64vector)
           (1 :udp-port 0 :udp-port)
           (1 :condvar 0 :condvar)
           (1 :eof 0 :eof)
           (1 :weak 0 :weak)
           (1 :box 0 :box)
           (1 :u16vector 0 :u16vector)
           (1 :symbolic 0 :symbolic)
           (1 :bignum 0 :bignum)
           (1 :atom 0 :atom)
           (1 :u8vector-port 0 :u8vector-port)
           (1 :continuation 0 :continuation)
           (1 :sequence 0 :sequence)
           (1 :processor 0 :processor)
           (1 :hvector 0 :hvector)
           (1 :socket-info 0 :socket-info)
           (1 :character-port 0 :character-port)
           (1 :f32vector 0 :f32vector)
           (1 :pair 0 :pair)
           (1 :cpxnum 0 :cpxnum)
           (1 :keyword 0 :keyword)
           (1 class 0 class)
           (1 :flonum 0 :flonum)
           (1 :true 0 :true)
           (1 :vector-port 0 :vector-port)
           (1 :foreign 0 :foreign)
           (1 :s64vector 0 :s64vector)
           (1 :object 0 :object)
           (1 :s16vector 0 :s16vector)
           (1 :null 0 :null)
           (1 :immediate 0 :immediate)
           (1 :string 0 :string)
           (1 :u32vector 0 :u32vector)
           (1 :thread 0 :thread)
           (1 :list 0 :list)
           (1 :boolean 0 :boolean)
           (1 :readtable 0 :readtable)
           (2 defclass-type 1 defclass-type)
           (2 defstruct-type 1 defstruct-type)
           (3 module-type-id 2 module-type-id)
           (3 make-class-type-id 2 make-class-type-id)
           (2
            &!class-type-constructor-method-set!
            1
            &!class-type-constructor-method-set!)
           (2 &!class-type-slot-types 1 &!class-type-slot-types)
           (2 &!class-type-predicate-set! 1 &!class-type-predicate-set!)
           (2 &!class-type-slots-set! 1 &!class-type-slots-set!)
           (2 &!class-type-slots 1 &!class-type-slots)
           (2 !class-type-predicate 1 !class-type-predicate)
           (2 !class-type-id-set! 1 !class-type-id-set!)
           (2 &!class-type-slot-contracts 1 &!class-type-slot-contracts)
           (2 !class-type-slot-defaults 1 !class-type-slot-defaults)
           (2 &!class-type-descriptor 1 &!class-type-descriptor)
           (2 &!class-type-slot-defaults 1 &!class-type-slot-defaults)
           (2
            &!class-type-constructor-method
            1
            &!class-type-constructor-method)
           (2 !class-type-id 1 !class-type-id)
           (2 !class-type-super 1 !class-type-super)
           (2 !class-type-system?-set! 1 !class-type-system?-set!)
           (2 !class-type-slots-set! 1 !class-type-slots-set!)
           (2 class-type-info? 1 class-type-info?)
           (2 !class-type-accessors-set! 1 !class-type-accessors-set!)
           (2
            &!class-type-ordered-slots-set!
            1
            &!class-type-ordered-slots-set!)
           (2 !class-type-ordered-slots 1 !class-type-ordered-slots)
           (2
            class-type-info::apply-macro-expander
            1
            class-type-info::apply-macro-expander)
           (2 !class-type-final?-set! 1 !class-type-final?-set!)
           (2 !class-type-ordered-slots-set! 1 !class-type-ordered-slots-set!)
           (2 &!class-type-struct? 1 &!class-type-struct?)
           (2 &!class-type-mutators-set! 1 &!class-type-mutators-set!)
           (2 &!class-type-super 1 &!class-type-super)
           (2 &!class-type-final?-set! 1 &!class-type-final?-set!)
           (2 !class-type-slots 1 !class-type-slots)
           (2
            &!class-type-unchecked-mutators
            1
            &!class-type-unchecked-mutators)
           (2 !class-type-constructor 1 !class-type-constructor)
           (2 !class-type-metaclass-set! 1 !class-type-metaclass-set!)
           (2
            &!class-type-unchecked-accessors
            1
            &!class-type-unchecked-accessors)
           (2 &!class-type-accessors-set! 1 &!class-type-accessors-set!)
           (2 &!class-type-constructor-set! 1 &!class-type-constructor-set!)
           (2 &!class-type-metaclass-set! 1 &!class-type-metaclass-set!)
           (2 &!class-type-struct?-set! 1 &!class-type-struct?-set!)
           (2
            &!class-type-precedence-list-set!
            1
            &!class-type-precedence-list-set!)
           (2 &!class-type-super-set! 1 &!class-type-super-set!)
           (2 &!class-type-name 1 &!class-type-name)
           (2 !class-type-name 1 !class-type-name)
           (2 &!class-type-name-set! 1 &!class-type-name-set!)
           (2 &!class-type-mutators 1 &!class-type-mutators)
           (2 class-type-info::t 1 class-type-info::t)
           (2 &!class-type-accessors 1 &!class-type-accessors)
           (2 !class-type-final? 1 !class-type-final?)
           (2 &!class-type-id-set! 1 &!class-type-id-set!)
           (2
            &!class-type-slot-contracts-set!
            1
            &!class-type-slot-contracts-set!)
           (2 !class-type-slot-defaults-set! 1 !class-type-slot-defaults-set!)
           (2
            !class-type-unchecked-accessors-set!
            1
            !class-type-unchecked-accessors-set!)
           (2 !class-type-accessors 1 !class-type-accessors)
           (2 !class-type-descriptor 1 !class-type-descriptor)
           (2
            !class-type-slot-contracts-set!
            1
            !class-type-slot-contracts-set!)
           (2
            &!class-type-slot-defaults-set!
            1
            &!class-type-slot-defaults-set!)
           (2 &!class-type-slot-types-set! 1 &!class-type-slot-types-set!)
           (2 &!class-type-descriptor-set! 1 &!class-type-descriptor-set!)
           (2
            !class-type-unchecked-mutators-set!
            1
            !class-type-unchecked-mutators-set!)
           (2 !class-type-name-set! 1 !class-type-name-set!)
           (2 &!class-type-constructor 1 &!class-type-constructor)
           (2 &!class-type-system? 1 &!class-type-system?)
           (2 &!class-type-final? 1 &!class-type-final?)
           (2 &!class-type-ordered-slots 1 &!class-type-ordered-slots)
           (2 &!class-type-id 1 &!class-type-id)
           (2 !class-type-unchecked-mutators 1 !class-type-unchecked-mutators)
           (2 !class-type-precedence-list 1 !class-type-precedence-list)
           (2 !class-type-mutators 1 !class-type-mutators)
           (2 !class-type-struct?-set! 1 !class-type-struct?-set!)
           (2 !class-type-predicate-set! 1 !class-type-predicate-set!)
           (2
            !class-type-constructor-method-set!
            1
            !class-type-constructor-method-set!)
           (2 !class-type-slot-types 1 !class-type-slot-types)
           (2 !class-type-constructor-method 1 !class-type-constructor-method)
           (2
            !class-type-unchecked-accessors
            1
            !class-type-unchecked-accessors)
           (2 !class-type-super-set! 1 !class-type-super-set!)
           (2 !class-type-metaclass 1 !class-type-metaclass)
           (2 make-class-type-info 1 make-class-type-info)
           (2 &!class-type-system?-set! 1 &!class-type-system?-set!)
           (2 !class-type-system? 1 !class-type-system?)
           (2 &!class-type-metaclass 1 &!class-type-metaclass)
           (2 !class-type-descriptor-set! 1 !class-type-descriptor-set!)
           (2 !class-type-mutators-set! 1 !class-type-mutators-set!)
           (2
            &!class-type-unchecked-accessors-set!
            1
            &!class-type-unchecked-accessors-set!)
           (2
            &!class-type-unchecked-mutators-set!
            1
            &!class-type-unchecked-mutators-set!)
           (2 &!class-type-predicate 1 &!class-type-predicate)
           (2 !class-type-slot-contracts 1 !class-type-slot-contracts)
           (2 !class-type-slot-types-set! 1 !class-type-slot-types-set!)
           (2 !class-type-constructor-set! 1 !class-type-constructor-set!)
           (2 &!class-type-precedence-list 1 &!class-type-precedence-list)
           (2
            !class-type-precedence-list-set!
            1
            !class-type-precedence-list-set!)
           (2 syntax-local-class-type-info? 1 syntax-local-class-type-info?)
           (2 !class-type-struct? 1 !class-type-struct?)
           (2 class-type-info 1 class-type-info)
           (2 define-class 1 define-class)
           (2 @ 1 @)
           (2 defmethod 1 defmethod)
           (2 define-struct 1 define-struct)
           (2 defstruct 1 defstruct)
           (2 @-set! 1 @-set!)
           (2 defclass 1 defclass)
           (2 :directory-port 1 :directory-port)
           (2 :s32vector 1 :s32vector)
           (2 :s8vector 1 :s8vector)
           (2 :symbol 1 :symbol)
           (2 :number 1 :number)
           (2 :thread-group 1 :thread-group)
           (2 :writeenv 1 :writeenv)
           (2 :ratnum 1 :ratnum)
           (2 :object-port 1 :object-port)
           (2 :device-port 1 :device-port)
           (2 :byte-port 1 :byte-port)
           (2 :vector 1 :vector)
           (2 :time 1 :time)
           (2 :false 1 :false)
           (2 :string-port 1 :string-port)
           (2 :promise 1 :promise)
           (2 :file-info 1 :file-info)
           (2 :address-info 1 :address-info)
           (2 :vm 1 :vm)
           (2 :frame 1 :frame)
           (2 :table 1 :table)
           (2 :event-queue-port 1 :event-queue-port)
           (2 :tcp-server-port 1 :tcp-server-port)
           (2 :port 1 :port)
           (2 :fixnum 1 :fixnum)
           (2 :real 1 :real)
           (2 :procedure 1 :procedure)
           (2 :special 1 :special)
           (2 :void 1 :void)
           (2 :values 1 :values)
           (2 :f64vector 1 :f64vector)
           (2 :char 1 :char)
           (2 :class 1 :class)
           (2 :t 1 :t)
           (2 :mutex 1 :mutex)
           (2 defsystem-class-info 1 defsystem-class-info)
           (2 :readenv 1 :readenv)
           (2 :integer 1 :integer)
           (2 :raw-device-port 1 :raw-device-port)
           (2 :u8vector 1 :u8vector)
           (2 :u64vector 1 :u64vector)
           (2 :udp-port 1 :udp-port)
           (2 :condvar 1 :condvar)
           (2 :eof 1 :eof)
           (2 :weak 1 :weak)
           (2 :box 1 :box)
           (2 :u16vector 1 :u16vector)
           (2 :symbolic 1 :symbolic)
           (2 :bignum 1 :bignum)
           (2 :atom 1 :atom)
           (2 :u8vector-port 1 :u8vector-port)
           (2 :continuation 1 :continuation)
           (2 :sequence 1 :sequence)
           (2 :processor 1 :processor)
           (2 :hvector 1 :hvector)
           (2 :socket-info 1 :socket-info)
           (2 :character-port 1 :character-port)
           (2 :f32vector 1 :f32vector)
           (2 :pair 1 :pair)
           (2 :cpxnum 1 :cpxnum)
           (2 :keyword 1 :keyword)
           (2 class 1 class)
           (2 :flonum 1 :flonum)
           (2 :true 1 :true)
           (2 :vector-port 1 :vector-port)
           (2 :foreign 1 :foreign)
           (2 :s64vector 1 :s64vector)
           (2 :object 1 :object)
           (2 :s16vector 1 :s16vector)
           (2 :null 1 :null)
           (2 :immediate 1 :immediate)
           (2 :string 1 :string)
           (2 :u32vector 1 :u32vector)
           (2 :thread 1 :thread)
           (2 :list 1 :list)
           (2 :boolean 1 :boolean)
           (2 :readtable 1 :readtable))
          (phi: 1 :gerbil/core/match)
          (phi: 1 :gerbil/core/more-sugar)
          (phi: 1 :gerbil/core/contract)
          (phi: 1 :gerbil/core/expander)
          (phi: 1 :gerbil/core/macro-object)
          (phi: 1 :gerbil/core/more-syntax-sugar)
          (phi: 2 :gerbil/core/runtime)
          (phi: 2 :gerbil/core/expander))
         (%#export
          (spec: 1 !class-precedence-list !class-precedence-list)
          (spec: 1 type-env-type type-env-type)
          (spec: 1 current-type-env current-type-env)
          (spec: 1 type-env-super type-env-super)
          (spec: 1 type-env? type-env?)
          (spec: 1 &type-env-super-set! &type-env-super-set!)
          (spec: 1 &type-env-super &type-env-super)
          (spec: 1 &type-env-checked? &type-env-checked?)
          (spec: 1 type-env::t type-env::t)
          (spec: 1 type-env-checked?-set! type-env-checked?-set!)
          (spec: 1 &type-env-var-set! &type-env-var-set!)
          (spec: 1 type-env-type-set! type-env-type-set!)
          (spec: 1 type-env-var-set! type-env-var-set!)
          (spec: 1 type-env type-env)
          (spec: 1 type-env-checked? type-env-checked?)
          (spec: 1 &type-env-checked?-set! &type-env-checked?-set!)
          (spec: 1 type-env-var type-env-var)
          (spec: 1 type-env-lookup type-env-lookup)
          (spec: 1 type-env-super-set! type-env-super-set!)
          (spec: 1 &type-env-type-set! &type-env-type-set!)
          (spec: 1 &type-env-type &type-env-type)
          (spec: 1 make-type-env make-type-env)
          (spec: 1 &type-env-var &type-env-var)
          (spec:
           1
           interface-info::apply-macro-expander
           interface-info::apply-macro-expander)
          (spec:
           1
           interface-info-instance-satisfies-predicate
           interface-info-instance-satisfies-predicate)
          (spec:
           1
           interface-info-instance-try-constructor-set!
           interface-info-instance-try-constructor-set!)
          (spec:
           1
           interface-info-interface-methods
           interface-info-interface-methods)
          (spec:
           1
           &interface-info-interface-descriptor-set!
           &interface-info-interface-descriptor-set!)
          (spec: 1 interface-info::t interface-info::t)
          (spec:
           1
           &interface-info-implementation-methods-set!
           &interface-info-implementation-methods-set!)
          (spec:
           1
           &interface-info-instance-try-constructor
           &interface-info-instance-try-constructor)
          (spec: 1 interface-info-name-set! interface-info-name-set!)
          (spec:
           1
           &interface-info-unchecked-implementation-methods
           &interface-info-unchecked-implementation-methods)
          (spec: 1 interface-info-flatten-mixin interface-info-flatten-mixin)
          (spec: 1 &interface-info-instance-type &interface-info-instance-type)
          (spec:
           1
           &interface-info-interface-descriptor
           &interface-info-interface-descriptor)
          (spec:
           1
           &interface-info-instance-constructor-set!
           &interface-info-instance-constructor-set!)
          (spec:
           1
           interface-info-unchecked-implementation-methods
           interface-info-unchecked-implementation-methods)
          (spec:
           1
           interface-info-instance-predicate-set!
           interface-info-instance-predicate-set!)
          (spec: 1 interface-info-name interface-info-name)
          (spec:
           1
           interface-info-instance-try-constructor
           interface-info-instance-try-constructor)
          (spec:
           1
           &interface-info-instance-constructor
           &interface-info-instance-constructor)
          (spec:
           1
           interface-info-instance-constructor-set!
           interface-info-instance-constructor-set!)
          (spec:
           1
           &interface-info-instance-predicate
           &interface-info-instance-predicate)
          (spec: 1 interface-info interface-info)
          (spec:
           1
           interface-info-interface-methods-set!
           interface-info-interface-methods-set!)
          (spec:
           1
           interface-info-instance-type-set!
           interface-info-instance-type-set!)
          (spec:
           1
           interface-info-instance-constructor
           interface-info-instance-constructor)
          (spec: 1 syntax-local-interface-info? syntax-local-interface-info?)
          (spec:
           1
           interface-info-instance-satisfies-predicate-set!
           interface-info-instance-satisfies-predicate-set!)
          (spec:
           1
           interface-info-interface-descriptor-set!
           interface-info-interface-descriptor-set!)
          (spec: 1 make-interface-info make-interface-info)
          (spec:
           1
           interface-info-unchecked-implementation-methods-set!
           interface-info-unchecked-implementation-methods-set!)
          (spec:
           1
           interface-info-instance-predicate
           interface-info-instance-predicate)
          (spec:
           1
           &interface-info-implementation-methods
           &interface-info-implementation-methods)
          (spec:
           1
           &interface-info-unchecked-implementation-methods-set!
           &interface-info-unchecked-implementation-methods-set!)
          (spec:
           1
           interface-info-interface-descriptor
           interface-info-interface-descriptor)
          (spec:
           1
           interface-info-interface-mixin-set!
           interface-info-interface-mixin-set!)
          (spec: 1 interface-info? interface-info?)
          (spec:
           1
           &interface-info-interface-methods-set!
           &interface-info-interface-methods-set!)
          (spec:
           1
           interface-info-implementation-methods-set!
           interface-info-implementation-methods-set!)
          (spec:
           1
           &interface-info-instance-satisfies-predicate-set!
           &interface-info-instance-satisfies-predicate-set!)
          (spec: 1 interface-info-instance-type interface-info-instance-type)
          (spec:
           1
           interface-info-implementation-methods
           interface-info-implementation-methods)
          (spec:
           1
           &interface-info-interface-mixin
           &interface-info-interface-mixin)
          (spec:
           1
           &interface-info-instance-satisfies-predicate
           &interface-info-instance-satisfies-predicate)
          (spec:
           1
           &interface-info-instance-predicate-set!
           &interface-info-instance-predicate-set!)
          (spec: 1 &interface-info-name &interface-info-name)
          (spec:
           1
           &interface-info-instance-try-constructor-set!
           &interface-info-instance-try-constructor-set!)
          (spec:
           1
           interface-info-interface-mixin
           interface-info-interface-mixin)
          (spec:
           1
           &interface-info-interface-methods
           &interface-info-interface-methods)
          (spec: 1 &interface-info-name-set! &interface-info-name-set!)
          (spec:
           1
           &interface-info-instance-type-set!
           &interface-info-instance-type-set!)
          (spec:
           1
           &interface-info-interface-mixin-set!
           &interface-info-interface-mixin-set!)
          (spec: 1 is-signature? is-signature?)
          (spec: 0 with-procedure-signature with-procedure-signature)
          (spec: 0 @method @method)
          (spec: 0 defmethod/c defmethod/c)
          (spec: 0 lambda/c lambda/c)
          (spec: 0 defstruct/c defstruct/c)
          (spec: 0 def*/c def*/c)
          (spec: 0 def/c def/c)
          (spec: 0 let/c let/c)
          (spec: 0 defmutable defmutable)
          (spec: 0 case-lambda/c case-lambda/c)
          (spec: 0 with-procedure-contract with-procedure-contract)
          (spec:
           0
           with-procedure-unchecked-contract
           with-procedure-unchecked-contract)
          (spec: 0 with-receiver with-receiver)
          (spec: 0 defclass/c defclass/c)
          (spec: 1 contract-type-subtype? contract-type-subtype?)
          (spec: 1 check-valid-type! check-valid-type!)
          (spec: 1 signature-arguments-out signature-arguments-out)
          (spec:
           1
           make-interface-method-lambda-signature
           make-interface-method-lambda-signature)
          (spec: 1 signature-has-keywords? signature-has-keywords?)
          (spec: 1 signature-keywords signature-keywords)
          (spec: 1 signature-arguments-in signature-arguments-in)
          (spec:
           1
           check-signature-contract-types!
           check-signature-contract-types!)
          (spec: 1 compatible-signatures? compatible-signatures?)
          (spec: 1 check-signature! check-signature!)
          (spec:
           1
           make-interface-method-contract
           make-interface-method-contract)
          (spec: 1 compatible-type-contract? compatible-type-contract?)
          (spec:
           1
           make-procedure-lambda-signature
           make-procedure-lambda-signature)
          (spec:
           1
           compatible-signature-type-contract?
           compatible-signature-type-contract?)
          (spec: 1 keyword<? keyword<?)
          (spec: 1 check-signature-spec! check-signature-spec!)
          (spec: 1 signature-arity signature-arity)
          (spec: 1 make-procedure-contract make-procedure-contract)
          (spec: 1 signature-contract? signature-contract?)
          (spec: 1 symbol<? symbol<?)
          (spec: 1 signature-type-contract signature-type-contract)
          (spec: 0 interface interface)
          (spec:
           0
           with-interface-unchecked-method
           with-interface-unchecked-method)
          (spec: 0 interface-out interface-out)
          (spec: 0 with-interface-checked-method with-interface-checked-method)
          (spec: 0 definterface-method definterface-method)
          (spec: 0 with-interface-method with-interface-method)
          (spec: 0 in-range-inclusive? in-range-inclusive?)
          (spec: 0 list-of? list-of?)
          (spec: 0 maybe maybe)
          (spec: 0 in-range? in-range?)
          (spec: 1 !class-slot-default !class-slot-default)
          (spec: 1 split-dotted-identifier split-dotted-identifier)
          (spec: 1 get-slot-accessor get-slot-accessor)
          (spec: 1 !class-slot-type !class-slot-type)
          (spec: 1 get-slot-mutator get-slot-mutator)
          (spec:
           1
           !class-slot-checked-mutator-contract?
           !class-slot-checked-mutator-contract?)
          (spec: 1 dotted-identifier? dotted-identifier?)
          (spec:
           1
           !class-slot-checked-method-contract?
           !class-slot-checked-method-contract?)
          (spec: 1 !class-slot-contract !class-slot-contract)
          (spec: 0 with-contract with-contract)
          (spec: 0 with-interface with-interface)
          (spec: 0 %%set-dotted! %%set-dotted!)
          (spec: 0 with-class with-class)
          (spec: 0 using using)
          (spec: 0 %%ref-dotted %%ref-dotted)
          (spec: 0 %%app-dotted %%app-dotted)
          (spec: 0 := :=)
          (spec: 0 ::- ::-)
          (spec: 0 contract-violation! contract-violation!)
          (spec: 0 :~ :~)
          (spec: 0 :- :-)
          (spec: 0 check-nil! check-nil!)
          (spec: 0 abort! abort!)
          (spec: 0 nil-dereference! nil-dereference!)
          (spec: 0 :? :?)
          (spec: 0 : :)
          (spec: 1 type-reference-identifier type-reference-identifier)
          (spec: 1 type-reference type-reference)
          (spec: 1 resolve-type->type-descriptor resolve-type->type-descriptor)
          (spec:
           1
           type-reference-identifier-set!
           type-reference-identifier-set!)
          (spec: 1 &type-reference-identifier &type-reference-identifier)
          (spec: 1 type-reference::t type-reference::t)
          (spec:
           1
           &type-reference-identifier-set!
           &type-reference-identifier-set!)
          (spec: 1 type-identifier? type-identifier?)
          (spec: 1 resolve-type resolve-type)
          (spec: 1 resolve-type->identifier resolve-type->identifier)
          (spec: 1 type-reference? type-reference?)
          (spec: 1 make-type-reference make-type-reference)
          (spec: 0 deftype deftype)
          (spec: 0 Using Using)
          (spec: 0 TypeEnv TypeEnv)
          (spec: 0 TypedDefinitions TypedDefinitions)
          (spec: 0 Interface Interface)
          (spec: 0 InterfaceInfo InterfaceInfo)
          (spec: 0 ClassMeta ClassMeta)
          (spec: 0 TypeReference TypeReference)
          (spec: 0 ContractRules ContractRules)
          (spec: 0 TypeCast TypeCast)
          (spec: 0 rename-in rename-in)
          (spec: 0 except-in except-in)
          (spec: 0 defsyntax-for-export defsyntax-for-export)
          (spec: 0 require require)
          (spec: 0 prefix-out prefix-out)
          (spec: 0 except-out except-out)
          (spec: 0 for-syntax for-syntax)
          (spec: 0 only-in only-in)
          (spec: 0 for-template for-template)
          (spec: 0 group-in group-in)
          (spec: 0 prefix-in prefix-in)
          (spec: 0 struct-out struct-out)
          (spec: 0 defsyntax-for-import-export defsyntax-for-import-export)
          (spec: 0 rename-out rename-out)
          (spec: 0 defsyntax-for-import defsyntax-for-import)
          (spec: 1 setf-macro-macro setf-macro-macro)
          (spec: 1 &setf-macro-macro-set! &setf-macro-macro-set!)
          (spec: 1 &setq-macro-macro-set! &setq-macro-macro-set!)
          (spec: 1 syntax-local-setq-macro? syntax-local-setq-macro?)
          (spec: 1 setq-macro? setq-macro?)
          (spec: 1 setq-macro setq-macro)
          (spec: 1 expand-set! expand-set!)
          (spec: 1 setf-macro? setf-macro?)
          (spec: 1 &setq-macro-macro &setq-macro-macro)
          (spec: 1 make-setf-macro make-setf-macro)
          (spec: 1 setf-macro setf-macro)
          (spec: 1 syntax-local-setf-macro? syntax-local-setf-macro?)
          (spec: 1 setq-macro::t setq-macro::t)
          (spec: 1 &setf-macro-macro &setf-macro-macro)
          (spec: 1 setf-macro::t setf-macro::t)
          (spec: 1 setq-macro-macro setq-macro-macro)
          (spec: 1 setf-macro-macro-set! setf-macro-macro-set!)
          (spec: 1 setq-macro-macro-set! setq-macro-macro-set!)
          (spec: 1 make-setq-macro make-setq-macro)
          (spec: 0 values-set! values-set!)
          (spec: 0 parameterize parameterize)
          (spec: 0 let/cc let/cc)
          (spec: 0 unwind-protect unwind-protect)
          (spec: 0 @bytes @bytes)
          (spec: 0 eval-when-compile eval-when-compile)
          (spec: 1 match-pattern? match-pattern?)
          (spec: 1 syntax-local-match-macro? syntax-local-match-macro?)
          (spec: 1 match-macro? match-macro?)
          (spec: 1 make-match-macro make-match-macro)
          (spec: 1 match-macro::t match-macro::t)
          (spec: 1 match-macro match-macro)
          (spec: 0 defsyntax-for-match defsyntax-for-match)
          (spec: 0 match* match*)
          (spec: 0 defrules-for-match defrules-for-match)
          (spec: 0 ? ?)
          (spec: 0 with* with*)
          (spec: 0 match match)
          (spec: 0 with with)
          (spec: 0 :readtable :readtable)
          (spec: 0 :boolean :boolean)
          (spec: 0 :list :list)
          (spec: 0 :thread :thread)
          (spec: 0 :u32vector :u32vector)
          (spec: 0 :string :string)
          (spec: 0 :immediate :immediate)
          (spec: 0 :null :null)
          (spec: 0 :s16vector :s16vector)
          (spec: 0 :object :object)
          (spec: 0 :s64vector :s64vector)
          (spec: 0 :foreign :foreign)
          (spec: 0 :vector-port :vector-port)
          (spec: 0 :true :true)
          (spec: 0 :flonum :flonum)
          (spec: 0 class class)
          (spec: 0 :keyword :keyword)
          (spec: 0 :cpxnum :cpxnum)
          (spec: 0 :pair :pair)
          (spec: 0 :f32vector :f32vector)
          (spec: 0 :character-port :character-port)
          (spec: 0 :socket-info :socket-info)
          (spec: 0 :hvector :hvector)
          (spec: 0 :processor :processor)
          (spec: 0 :sequence :sequence)
          (spec: 0 :continuation :continuation)
          (spec: 0 :u8vector-port :u8vector-port)
          (spec: 0 :atom :atom)
          (spec: 0 :bignum :bignum)
          (spec: 0 :symbolic :symbolic)
          (spec: 0 :u16vector :u16vector)
          (spec: 0 :box :box)
          (spec: 0 :weak :weak)
          (spec: 0 :eof :eof)
          (spec: 0 :condvar :condvar)
          (spec: 0 :udp-port :udp-port)
          (spec: 0 :u64vector :u64vector)
          (spec: 0 :u8vector :u8vector)
          (spec: 0 :raw-device-port :raw-device-port)
          (spec: 0 :integer :integer)
          (spec: 0 :readenv :readenv)
          (spec: 0 defsystem-class-info defsystem-class-info)
          (spec: 0 :mutex :mutex)
          (spec: 0 :t :t)
          (spec: 0 :class :class)
          (spec: 0 :char :char)
          (spec: 0 :f64vector :f64vector)
          (spec: 0 :values :values)
          (spec: 0 :void :void)
          (spec: 0 :special :special)
          (spec: 0 :procedure :procedure)
          (spec: 0 :real :real)
          (spec: 0 :fixnum :fixnum)
          (spec: 0 :port :port)
          (spec: 0 :tcp-server-port :tcp-server-port)
          (spec: 0 :event-queue-port :event-queue-port)
          (spec: 0 :table :table)
          (spec: 0 :frame :frame)
          (spec: 0 :vm :vm)
          (spec: 0 :address-info :address-info)
          (spec: 0 :file-info :file-info)
          (spec: 0 :promise :promise)
          (spec: 0 :string-port :string-port)
          (spec: 0 :false :false)
          (spec: 0 :time :time)
          (spec: 0 :vector :vector)
          (spec: 0 :byte-port :byte-port)
          (spec: 0 :device-port :device-port)
          (spec: 0 :object-port :object-port)
          (spec: 0 :ratnum :ratnum)
          (spec: 0 :writeenv :writeenv)
          (spec: 0 :thread-group :thread-group)
          (spec: 0 :number :number)
          (spec: 0 :symbol :symbol)
          (spec: 0 :s8vector :s8vector)
          (spec: 0 :s32vector :s32vector)
          (spec: 0 :directory-port :directory-port)
          (spec: 0 @-set! @-set!)
          (spec: 0 define-struct define-struct)
          (spec: 0 @ @)
          (spec: 0 define-class define-class)
          (spec: 0 defstruct-type defstruct-type)
          (spec: 0 defclass-type defclass-type)
          (spec: 0 MOP-4 MOP-4)
          (spec: 0 MOP-5 MOP-5)
          (spec: 0 MOP-1 MOP-1)
          (spec: 0 MOP-2 MOP-2)
          (spec: 0 MOP-3 MOP-3)
          (spec: 0 defconst defconst)
          (spec: 0 defsyntax defsyntax)
          (spec: 0 definline definline)
          (spec: 0 quasiquote quasiquote)
          (spec: 0 ~case-test ~case-test)
          (spec: 0 ~case-dispatch* ~case-dispatch*)
          (spec: 0 alet alet)
          (spec: 0 <> <>)
          (spec: 0 ~case-dispatch ~case-dispatch)
          (spec: 0 do do)
          (spec: 0 begin0 begin0)
          (spec: 0 and-let* and-let*)
          (spec: 0 do-while do-while)
          (spec: 0 rec rec)
          (spec: 0 case case)
          (spec: 0 defvalues defvalues)
          (spec: 0 ~case-dispatch-bsearch ~case-dispatch-bsearch)
          (spec: 0 delay delay)
          (spec: 0 ~case ~case)
          (spec: 0 alet* alet*)
          (spec: 0 <...> <...>)
          (spec: 0 cut cut)
          (spec: 0 @list @list)
          (spec: 0 defrules defrules)
          (spec: 0 let*-values let*-values)
          (spec: 0 defalias defalias)
          (spec: 0 let* let*)
          (spec: 0 cond cond)
          (spec: 0 ~let ~let)
          (spec: 0 letrec* letrec*)
          (spec: 0 syntax-error syntax-error)
          (spec: 0 letrec letrec)
          (spec: 0 unless unless)
          (spec: 0 defsyntax% defsyntax%)
          (spec: 0 defrule defrule)
          (spec: 0 define-rules define-rules)
          (spec: 0 and and)
          (spec: 0 or or)
          (spec: 0 when when)
          (spec: 0 define define)
          (spec: 0 string-ref-set! string-ref-set!)
          (spec: 0 s32vector-ref-set! s32vector-ref-set!)
          (spec: 0 cdr-set! cdr-set!)
          (spec: 0 u8vector-ref-set! u8vector-ref-set!)
          (spec: 0 f32vector-ref-set! f32vector-ref-set!)
          (spec: 0 s8vector-ref-set! s8vector-ref-set!)
          (spec: 0 box-set! box-set!)
          (spec: 0 s64vector-ref-set! s64vector-ref-set!)
          (spec: 0 u16vector-ref-set! u16vector-ref-set!)
          (spec: 0 random-bytes random-bytes)
          (spec: 0 vector-ref-set! vector-ref-set!)
          (spec: 0 f64vector-ref-set! f64vector-ref-set!)
          (spec: 0 random-source-make-bytes random-source-make-bytes)
          (spec: 0 s16vector-ref-set! s16vector-ref-set!)
          (spec: 0 call/parameters call/parameters)
          (spec: 0 u32vector-ref-set! u32vector-ref-set!)
          (spec: 0 car-set! car-set!)
          (spec: 0 u64vector-ref-set! u64vector-ref-set!)
          (spec: 0 call/values call/values)
          (spec: 0 make-instance make-instance)
          (spec: 0 symblic-hash symblic-hash)
          (spec: 0 string-port? string-port?)
          (spec: 0 thread-local-ref thread-local-ref)
          (spec: 0 class-type-field-count class-type-field-count)
          (spec: 0 read-syntax read-syntax)
          (spec: 0 error-object? error-object?)
          (spec: 0 object-port::t object-port::t)
          (spec: 0 hash-keys hash-keys)
          (spec: 0 make-class-type make-class-type)
          (spec: 0 add-load-path! add-load-path!)
          (spec: 0 procedure-hash procedure-hash)
          (spec: 0 u8vector-port::t u8vector-port::t)
          (spec: 0 values->list values->list)
          (spec: 0 string-rindex string-rindex)
          (spec: 0 make-symbolic-table make-symbolic-table)
          (spec: 0 eof::t eof::t)
          (spec: 0 error-message error-message)
          (spec: 0 class-type-name class-type-name)
          (spec: 0 &class-type-properties &class-type-properties)
          (spec: 0 class-type-system? class-type-system?)
          (spec: 0 atom::t atom::t)
          (spec: 0 return::t return::t)
          (spec: 0 true? true?)
          (spec: 0 &interface-instance-object &interface-instance-object)
          (spec: 0 make-hash-table make-hash-table)
          (spec: 0 string-port::t string-port::t)
          (spec: 0 plist->hash-table plist->hash-table)
          (spec: 0 checked-method-ref checked-method-ref)
          (spec: 0 hash-values hash-values)
          (spec: 0 thread-local-get thread-local-get)
          (spec: 0 symbol->keyword symbol->keyword)
          (spec: 0 f64vector::t f64vector::t)
          (spec: 0 object-fill! object-fill!)
          (spec: 0 flonum::t flonum::t)
          (spec: 0 with-exception-stack-trace with-exception-stack-trace)
          (spec: 0 spawn spawn)
          (spec: 0 immediate::t immediate::t)
          (spec: 0 udp-port::t udp-port::t)
          (spec: 0 interface-cast-error? interface-cast-error?)
          (spec: 0 call-with-parameters call-with-parameters)
          (spec: 0 string-split string-split)
          (spec: 0 gerbil-path gerbil-path)
          (spec: 0 eof-object eof-object)
          (spec: 0 values::t values::t)
          (spec: 0 event-queue-port::t event-queue-port::t)
          (spec: 0 remf remf)
          (spec: 0 class::t class::t)
          (spec: 0 fx1- fx1-)
          (spec: 0 bind-method! bind-method!)
          (spec: 0 make-promise make-promise)
          (spec: 0 try-cast try-cast)
          (spec: 0 make-keyword make-keyword)
          (spec: 0 hash-merge hash-merge)
          (spec: 0 interned-symbol? interned-symbol?)
          (spec: 0 class->list class->list)
          (spec: 0 with-dynamic-lock with-dynamic-lock)
          (spec: 0 aget aget)
          (spec: 0 substruct? substruct?)
          (spec: 0 f32vector::t f32vector::t)
          (spec: 0 fixnum::t fixnum::t)
          (spec: 0 actor-thread? actor-thread?)
          (spec: 0 create-directory* create-directory*)
          (spec: 0 slot-ref slot-ref)
          (spec: 0 build-manifest/layer build-manifest/layer)
          (spec: 0 integer::t integer::t)
          (spec: 0 values-ref values-ref)
          (spec: 0 u8vector::t u8vector::t)
          (spec: 0 processor::t processor::t)
          (spec: 0 &class-type-slot-table &class-type-slot-table)
          (spec: 0 class-type-precedence-list class-type-precedence-list)
          (spec: 0 class-type? class-type?)
          (spec: 0 object-type object-type)
          (spec: 0 fx1+ fx1+)
          (spec: 0 bind-specializer! bind-specializer!)
          (spec: 0 pair::t pair::t)
          (spec: 0 error? error?)
          (spec: 0 cast cast)
          (spec: 0 make-hash-table-eqv make-hash-table-eqv)
          (spec:
           0
           raise-contract-violation-error
           raise-contract-violation-error)
          (spec: 0 plist->hash-table-eq plist->hash-table-eq)
          (spec: 0 &class-type-constructor &class-type-constructor)
          (spec: 0 class-type-fields class-type-fields)
          (spec: 0 address-info::t address-info::t)
          (spec: 0 mutex::t mutex::t)
          (spec: 0 list->hash-table list->hash-table)
          (spec: 0 hash->list hash->list)
          (spec: 0 cpxnum::t cpxnum::t)
          (spec: 0 hash-map hash-map)
          (spec: 0 build-manifest/head build-manifest/head)
          (spec: 0 gerbil-runtime-smp? gerbil-runtime-smp?)
          (spec: 0 cons* cons*)
          (spec: 0 fx<=0? fx<=0?)
          (spec: 0 procedure::t procedure::t)
          (spec: 0 vector-port::t vector-port::t)
          (spec: 0 interface-descriptor-methods interface-descriptor-methods)
          (spec: 0 read-u8vector read-u8vector)
          (spec: 0 unbound-key-error? unbound-key-error?)
          (spec: 0 remove1 remove1)
          (spec: 0 object-port? object-port?)
          (spec: 0 hash-put! hash-put!)
          (spec: 0 hvector? hvector?)
          (spec: 0 make-hash-table-eq make-hash-table-eq)
          (spec: 0 syntax-error? syntax-error?)
          (spec: 0 displayln displayln)
          (spec: 0 string->bytes string->bytes)
          (spec: 0 class-instance? class-instance?)
          (spec: 0 make-AST make-AST)
          (spec: 0 AST-e AST-e)
          (spec: 0 foldl foldl)
          (spec: 0 read-syntax-from-file read-syntax-from-file)
          (spec: 0 new-instance new-instance)
          (spec: 0 s16vector::t s16vector::t)
          (spec: 0 condvar::t condvar::t)
          (spec: 0 false::t false::t)
          (spec: 0 immediate? immediate?)
          (spec: 0 udp-port? udp-port?)
          (spec: 0 fx<0? fx<0?)
          (spec: 0 character-port::t character-port::t)
          (spec: 0 event-queue-port? event-queue-port?)
          (spec: 0 plist->hash-table-immediate plist->hash-table-immediate)
          (spec: 0 make-syntax-error make-syntax-error)
          (spec: 0 class-type-properties class-type-properties)
          (spec: 0 &class-type-slot-vector &class-type-slot-vector)
          (spec: 0 set-load-path! set-load-path!)
          (spec: 0 object? object?)
          (spec: 0 hash-merge! hash-merge!)
          (spec: 0 pget pget)
          (spec: 0 hvector::t hvector::t)
          (spec: 0 make-hash-table-string make-hash-table-string)
          (spec: 0 thread-local-set! thread-local-set!)
          (spec: 0 reload-module! reload-module!)
          (spec: 0 with-unwind-protect with-unwind-protect)
          (spec: 0 class-instance-init! class-instance-init!)
          (spec: 0 class-type-final? class-type-final?)
          (spec: 0 &class-type-fields &class-type-fields)
          (spec: 0 symbol::t symbol::t)
          (spec: 0 t::t t::t)
          (spec: 0 make-class-predicate make-class-predicate)
          (spec: 0 1- 1-)
          (spec: 0 file-info::t file-info::t)
          (spec: 0 with-exception-catcher with-exception-catcher)
          (spec: 0 gerbil-system gerbil-system)
          (spec: 0 promise::t promise::t)
          (spec: 0 char::t char::t)
          (spec: 0 vector::t vector::t)
          (spec: 0 interface-descriptor-type interface-descriptor-type)
          (spec: 0 raise-unbound-key-error raise-unbound-key-error)
          (spec: 0 is-hash-table? is-hash-table?)
          (spec: 0 list->hash-table-eq list->hash-table-eq)
          (spec: 0 plist->hash-table-eqv plist->hash-table-eqv)
          (spec: 0 fx>0? fx>0?)
          (spec: 0 object::t object::t)
          (spec: 0 class-type-sealed? class-type-sealed?)
          (spec: 0 thread::t thread::t)
          (spec: 0 dssl-key-object? dssl-key-object?)
          (spec: 0 make-hash-table-immediate make-hash-table-immediate)
          (spec: 0 hash-clear! hash-clear!)
          (spec: 0 raw-device-port::t raw-device-port::t)
          (spec: 0 spawn/name spawn/name)
          (spec: 0 device-port? device-port?)
          (spec: 0 with-lock with-lock)
          (spec: 0 AST? AST?)
          (spec: 0 hash->plist hash->plist)
          (spec: 0 s64vector::t s64vector::t)
          (spec: 0 1+ 1+)
          (spec: 0 remq remq)
          (spec: 0 AST-source AST-source)
          (spec: 0 plist->hash-table-symbolic plist->hash-table-symbolic)
          (spec: 0 gerbil-load-expander! gerbil-load-expander!)
          (spec: 0 vector-port? vector-port?)
          (spec: 0 absent-value absent-value)
          (spec: 0 class-of class-of)
          (spec: 0 fx=0? fx=0?)
          (spec: 0 hash-ref hash-ref)
          (spec: 0 &class-type-super &class-type-super)
          (spec: 0 class-type-seal! class-type-seal!)
          (spec: 0 spawn/group spawn/group)
          (spec: 0 &class-type-flags &class-type-flags)
          (spec: 0 ratnum::t ratnum::t)
          (spec: 0 filter-map filter-map)
          (spec: 0 device-port::t device-port::t)
          (spec: 0 list->hash-table-immediate list->hash-table-immediate)
          (spec: 0 struct->list struct->list)
          (spec: 0 next-method next-method)
          (spec: 0 make-class-slot-mutator make-class-slot-mutator)
          (spec: 0 slot-set! slot-set!)
          (spec: 0 agetq agetq)
          (spec: 0 s32vector::t s32vector::t)
          (spec: 0 gerbil-system-version-string gerbil-system-version-string)
          (spec: 0 vm::t vm::t)
          (spec: 0 character-port? character-port?)
          (spec: 0 absent-obj absent-obj)
          (spec: 0 unchecked-slot-ref unchecked-slot-ref)
          (spec: 0 class-type-slot-table class-type-slot-table)
          (spec: 0 byte-port::t byte-port::t)
          (spec: 0 plist->hash-table-string plist->hash-table-string)
          (spec: 0 fxshift fxshift)
          (spec: 0 hash-remove! hash-remove!)
          (spec: 0 hash-find hash-find)
          (spec: 0 direct-method-ref direct-method-ref)
          (spec: 0 make-hash-table-symbolic make-hash-table-symbolic)
          (spec: 0 dssl-optional-object? dssl-optional-object?)
          (spec: 0 string-hash string-hash)
          (spec: 0 replx replx)
          (spec: 0 class-type-flags class-type-flags)
          (spec: 0 list->hash-table-eqv list->hash-table-eqv)
          (spec: 0 file-newer? file-newer?)
          (spec: 0 foldr foldr)
          (spec: 0 agetv agetv)
          (spec: 0 as-string as-string)
          (spec: 0 make-class-slot-accessor make-class-slot-accessor)
          (spec: 0 constructor-init! constructor-init!)
          (spec: 0 string::t string::t)
          (spec: 0 table::t table::t)
          (spec: 0 false false)
          (spec: 0 gerbil-system-manifest gerbil-system-manifest)
          (spec: 0 eqv-hash eqv-hash)
          (spec: 0 time::t time::t)
          (spec: 0 satisfies? satisfies?)
          (spec: 0 class-type-slot-list class-type-slot-list)
          (spec: 0 writenv? writenv?)
          (spec: 0 hash-copy hash-copy)
          (spec: 0 keyword->symbol keyword->symbol)
          (spec: 0 fx>=0? fx>=0?)
          (spec: 0 boolean::t boolean::t)
          (spec: 0 with-exception-handler with-exception-handler)
          (spec: 0 direct-instance? direct-instance?)
          (spec: 0 dssl-object? dssl-object?)
          (spec: 0 string-empty? string-empty?)
          (spec:
           0
           make-class-slot-unchecked-mutator
           make-class-slot-unchecked-mutator)
          (spec: 0 &class-type-id &class-type-id)
          (spec: 0 raw-device-port? raw-device-port?)
          (spec: 0 symbolic-table-ref symbolic-table-ref)
          (spec: 0 HashTableLock::interface HashTableLock::interface)
          (spec: 0 tcp-server-port::t tcp-server-port::t)
          (spec: 0 nonnegative-fixnum? nonnegative-fixnum?)
          (spec: 0 s8vector::t s8vector::t)
          (spec: 0 display-exception display-exception)
          (spec: 0 list->hash-table-symbolic list->hash-table-symbolic)
          (spec: 0 bytes->string bytes->string)
          (spec: 0 checked-bound-method-ref checked-bound-method-ref)
          (spec: 0 void::t void::t)
          (spec: 0 struct-instance-init! struct-instance-init!)
          (spec: 0 current-thread-group current-thread-group)
          (spec: 0 max-char-code max-char-code)
          (spec: 0 class-type-slot-vector class-type-slot-vector)
          (spec: 0 immediate-hash immediate-hash)
          (spec: 0 pgetq pgetq)
          (spec: 0 directory-port? directory-port?)
          (spec: 0 make-object make-object)
          (spec:
           0
           make-class-slot-unchecked-accessor
           make-class-slot-unchecked-accessor)
          (spec: 0 readenv? readenv?)
          (spec: 0 class-type-id class-type-id)
          (spec: 0 list->hash-table-string list->hash-table-string)
          (spec: 0 symbolic-table-delete! symbolic-table-delete!)
          (spec: 0 special? special?)
          (spec: 0 dump-stack-trace! dump-stack-trace!)
          (spec: 0 continuation::t continuation::t)
          (spec: 0 c4-linearize c4-linearize)
          (spec: 0 unchecked-slot-set! unchecked-slot-set!)
          (spec: 0 gerbil-version-string gerbil-version-string)
          (spec: 0 struct-copy struct-copy)
          (spec: 0 vm? vm?)
          (spec: 0 interface-descriptor? interface-descriptor?)
          (spec: 0 port::t port::t)
          (spec: 0 bignum::t bignum::t)
          (spec: 0 pgetv pgetv)
          (spec: 0 box::t box::t)
          (spec: 0 directory-port::t directory-port::t)
          (spec: 0 dssl-rest-object? dssl-rest-object?)
          (spec: 0 seal-class! seal-class!)
          (spec: 0 keyword-rest keyword-rest)
          (spec: 0 readenv::t readenv::t)
          (spec: 0 raise raise)
          (spec: 0 special::t special::t)
          (spec: 0 HashTableLock::t HashTableLock::t)
          (spec: 0 hash-for-each hash-for-each)
          (spec: 0 load-module load-module)
          (spec:
           0
           datum-parsing-exception-filepos
           datum-parsing-exception-filepos)
          (spec: 0 gerbil-greeting gerbil-greeting)
          (spec: 0 memf memf)
          (spec: 0 error error)
          (spec: 0 class-type-struct? class-type-struct?)
          (spec: 0 foreign::t foreign::t)
          (spec: 0 bound-method-ref bound-method-ref)
          (spec: 0 u16vector::t u16vector::t)
          (spec: 0 display* display*)
          (spec: 0 exception? exception?)
          (spec: 0 hash-update! hash-update!)
          (spec: 0 write-u8vector write-u8vector)
          (spec: 0 keyword-dispatch keyword-dispatch)
          (spec: 0 class-type-metaclass? class-type-metaclass?)
          (spec: 0 symbolic-table-set! symbolic-table-set!)
          (spec: 0 list::t list::t)
          (spec: 0 null::t null::t)
          (spec: 0 assget assget)
          (spec: 0 tcp-server-port? tcp-server-port?)
          (spec: 0 hash-fold hash-fold)
          (spec: 0 source-location-path source-location-path)
          (spec:
           0
           unhandled-actor-exception-hook-set!
           unhandled-actor-exception-hook-set!)
          (spec: 0 void? void?)
          (spec: 0 make-symbol make-symbol)
          (spec: 0 struct-instance? struct-instance?)
          (spec: 0 subclass? subclass?)
          (spec: 0 dump-stack-trace? dump-stack-trace?)
          (spec: 0 readtable::t readtable::t)
          (spec: 0 interface-instance-object interface-instance-object)
          (spec: 0 ormap ormap)
          (spec: 0 hash-table? hash-table?)
          (spec: 0 build-manifest build-manifest)
          (spec: 0 string-index string-index)
          (spec: 0 &class-type-name &class-type-name)
          (spec: 0 symbolic? symbolic?)
          (spec: 0 hash-key? hash-key?)
          (spec: 0 find-method find-method)
          (spec: 0 thread-local-delete! thread-local-delete!)
          (spec: 0 socket-info::t socket-info::t)
          (spec: 0 weak? weak?)
          (spec: 0 gerbil-home gerbil-home)
          (spec: 0 interface-instance? interface-instance?)
          (spec: 0 substring->bytes substring->bytes)
          (spec: 0 error-irritants error-irritants)
          (spec: 0 true::t true::t)
          (spec: 0 u64vector::t u64vector::t)
          (spec: 0 string-join string-join)
          (spec: 0 display-build-manifest display-build-manifest)
          (spec: 0 keyword::t keyword::t)
          (spec: 0 class-type-constructor class-type-constructor)
          (spec: 0 load-path load-path)
          (spec: 0 symbolic::t symbolic::t)
          (spec: 0 hash-get hash-get)
          (spec: 0 find find)
          (spec: 0 thread-group::t thread-group::t)
          (spec: 0 sequence? sequence?)
          (spec: 0 byte-port? byte-port?)
          (spec: 0 source-location? source-location?)
          (spec: 0 build-manifest-string build-manifest-string)
          (spec: 0 call-next-method call-next-method)
          (spec: 0 gerbil-greeting-set! gerbil-greeting-set!)
          (spec: 0 weak::t weak::t)
          (spec: 0 interface-instance::t interface-instance::t)
          (spec: 0 class-type-methods class-type-methods)
          (spec: 0 &class-type-precedence-list &class-type-precedence-list)
          (spec: 0 class-type-super class-type-super)
          (spec: 0 assgetv assgetv)
          (spec: 0 true true)
          (spec: 0 immediate-instance-of? immediate-instance-of?)
          (spec: 0 real::t real::t)
          (spec: 0 u32vector::t u32vector::t)
          (spec: 0 frame::t frame::t)
          (spec: 0 display-as-string display-as-string)
          (spec: 0 with-catch with-catch)
          (spec: 0 make-interface-descriptor make-interface-descriptor)
          (spec: 0 writeenv::t writeenv::t)
          (spec: 0 HashTable::t HashTable::t)
          (spec: 0 andmap andmap)
          (spec: 0 remv remv)
          (spec: 0 number::t number::t)
          (spec: 0 sequence::t sequence::t)
          (spec: 0 hash-length hash-length)
          (spec: 0 build-manifest-set! build-manifest-set!)
          (spec: 0 u8vector-port? u8vector-port?)
          (spec: 0 call-method call-method)
          (spec: 0 interned-keyword? interned-keyword?)
          (spec: 0 method-ref method-ref)
          (spec: 0 eq-hash eq-hash)
          (spec: 0 values-count values-count)
          (spec: 0 error-trace error-trace)
          (spec: 0 source-location-path? source-location-path?)
          (spec: 0 class-type=? class-type=?)
          (spec: 0 assgetq assgetq)
          (spec: 0 fx/ fx/)
          (spec: 0 HashTable::interface HashTable::interface)
          (spec: 0 write-file-string-list write-file-string-list)
          (spec: 0 keyword->string keyword->string)
          (spec: 0 open-event-queue open-event-queue)
          (spec:
           0
           repl-result-history-max-length-set!
           repl-result-history-max-length-set!)
          (spec: 0 user-info-gid user-info-gid)
          (spec:
           0
           cfun-conversion-exception-procedure
           cfun-conversion-exception-procedure)
          (spec: 0 open-string open-string)
          (spec: 0 fold fold)
          (spec: 0 take take)
          (spec: 0 uninterned-keyword? uninterned-keyword?)
          (spec: 0 bitwise-for-each bitwise-for-each)
          (spec: 0 module-search-order-add! module-search-order-add!)
          (spec: 0 copy-bit-field copy-bit-field)
          (spec: 0 file-attributes file-attributes)
          (spec: 0 random-real random-real)
          (spec: 0 u8vector-set! u8vector-set!)
          (spec: 0 mutex? mutex?)
          (spec: 0 file-info-last-access-time file-info-last-access-time)
          (spec: 0 range-exception-arguments range-exception-arguments)
          (spec: 0 thread-base-priority thread-base-priority)
          (spec: 0 char-set-intersection! char-set-intersection!)
          (spec: 0 partition partition)
          (spec: 0 fxnegative? fxnegative?)
          (spec: 0 s64vector-set s64vector-set)
          (spec: 0 fxwraplogical-shift-right fxwraplogical-shift-right)
          (spec: 0 flacosh flacosh)
          (spec: 0 tenth tenth)
          (spec: 0 readtable-sharing-allowed? readtable-sharing-allowed?)
          (spec:
           0
           number-of-arguments-limit-exception?
           number-of-arguments-limit-exception?)
          (spec: 0 flhypot flhypot)
          (spec: 0 s32vector-set! s32vector-set!)
          (spec: 0 vector-swap! vector-swap!)
          (spec: 0 u32vector-copy! u32vector-copy!)
          (spec: 0 f32vector-length f32vector-length)
          (spec: 0 host-info? host-info?)
          (spec: 0 make-u8vector make-u8vector)
          (spec: 0 subf32vector-fill! subf32vector-fill!)
          (spec: 0 u64vector-copy u64vector-copy)
          (spec: 0 f64vector-length f64vector-length)
          (spec: 0 bit-field-replace-same bit-field-replace-same)
          (spec: 0 s8vector-ref s8vector-ref)
          (spec: 0 subs8vector-move! subs8vector-move!)
          (spec: 0 thread-state thread-state)
          (spec: 0 with-output-to-port with-output-to-port)
          (spec: 0 os-exception-message os-exception-message)
          (spec: 0 s16vector-swap! s16vector-swap!)
          (spec: 0 thread-state-waiting-timeout thread-state-waiting-timeout)
          (spec: 0 char-set-count char-set-count)
          (spec: 0 fxandc2 fxandc2)
          (spec: 0 list->bits list->bits)
          (spec: 0 set-box! set-box!)
          (spec:
           0
           wrong-number-of-values-exception-code
           wrong-number-of-values-exception-code)
          (spec: 0 datum-parsing-exception-kind datum-parsing-exception-kind)
          (spec: 0 file-number-of-links file-number-of-links)
          (spec: 0 network-info-number network-info-number)
          (spec:
           0
           readtable-case-conversion?-set
           readtable-case-conversion?-set)
          (spec:
           0
           noncontinuable-exception-reason
           noncontinuable-exception-reason)
          (spec: 0 random-source-make-integers random-source-make-integers)
          (spec: 0 any-bit-set? any-bit-set?)
          (spec: 0 write-file-string write-file-string)
          (spec: 0 main main)
          (spec: 0 u16vector-fill! u16vector-fill!)
          (spec: 0 circular-list? circular-list?)
          (spec:
           0
           expression-parsing-exception-kind
           expression-parsing-exception-kind)
          (spec: 0 print print)
          (spec: 0 make-random-source make-random-source)
          (spec: 0 string-shrink! string-shrink!)
          (spec: 0 udp-write-subu8vector udp-write-subu8vector)
          (spec: 0 divide-by-zero-exception? divide-by-zero-exception?)
          (spec: 0 flonum? flonum?)
          (spec:
           0
           keyword-expected-exception-procedure
           keyword-expected-exception-procedure)
          (spec: 0 open-dummy open-dummy)
          (spec:
           0
           cfun-conversion-exception-message
           cfun-conversion-exception-message)
          (spec: 0 open-process open-process)
          (spec: 0 flzero? flzero?)
          (spec: 0 last-pair last-pair)
          (spec: 0 readtable-start-syntax-set readtable-start-syntax-set)
          (spec: 0 thread-join! thread-join!)
          (spec: 0 bitwise-fold bitwise-fold)
          (spec: 0 cosh cosh)
          (spec: 0 fifth fifth)
          (spec: 0 sinh sinh)
          (spec: 0 u8vector-set u8vector-set)
          (spec: 0 user-info user-info)
          (spec: 0 current-exception-handler current-exception-handler)
          (spec: 0 file-info-inode file-info-inode)
          (spec: 0 mutex-unlock! mutex-unlock!)
          (spec: 0 fxodd? fxodd?)
          (spec: 0 char-set-size char-set-size)
          (spec: 0 path-directory path-directory)
          (spec: 0 s64vector-ref s64vector-ref)
          (spec: 0 fxxor fxxor)
          (spec: 0 acosh acosh)
          (spec: 0 flacos flacos)
          (spec:
           0
           invalid-hash-number-exception-procedure
           invalid-hash-number-exception-procedure)
          (spec:
           0
           terminated-thread-exception-procedure
           terminated-thread-exception-procedure)
          (spec:
           0
           number-of-arguments-limit-exception-procedure
           number-of-arguments-limit-exception-procedure)
          (spec: 0 flfloor flfloor)
          (spec: 0 s32vector-set s32vector-set)
          (spec: 0 step-level-set! step-level-set!)
          (spec: 0 u32vector-copy u32vector-copy)
          (spec:
           0
           wrong-number-of-values-exception?
           wrong-number-of-values-exception?)
          (spec: 0 f32vector-fill! f32vector-fill!)
          (spec: 0 concatenate concatenate)
          (spec: 0 make-u64vector make-u64vector)
          (spec: 0 substring-move! substring-move!)
          (spec: 0 u64vector-concatenate u64vector-concatenate)
          (spec: 0 f64vector-fill! f64vector-fill!)
          (spec: 0 conjugate conjugate)
          (spec: 0 bit-field-replace bit-field-replace)
          (spec: 0 thread-start! thread-start!)
          (spec: 0 s16vector-shrink! s16vector-shrink!)
          (spec: 0 length-mismatch-exception? length-mismatch-exception?)
          (spec: 0 thread-state-waiting-for thread-state-waiting-for)
          (spec: 0 fxarithmetic-shift-right fxarithmetic-shift-right)
          (spec: 0 char-set-delete char-set-delete)
          (spec: 0 subf64vector-fill! subf64vector-fill!)
          (spec: 0 file-size file-size)
          (spec: 0 readtable-case-conversion? readtable-case-conversion?)
          (spec:
           0
           unbound-serial-number-exception?
           unbound-serial-number-exception?)
          (spec: 0 fixnum-overflow-exception? fixnum-overflow-exception?)
          (spec: 0 random-source-make-f64vectors random-source-make-f64vectors)
          (spec: 0 with-output-to-u8vector with-output-to-u8vector)
          (spec: 0 any any)
          (spec:
           0
           mailbox-receive-timeout-exception?
           mailbox-receive-timeout-exception?)
          (spec: 0 port-settings-set! port-settings-set!)
          (spec: 0 script-file script-file)
          (spec: 0 string-suffix-length-ci string-suffix-length-ci)
          (spec: 0 u16vector-copy! u16vector-copy!)
          (spec:
           0
           divide-by-zero-exception-procedure
           divide-by-zero-exception-procedure)
          (spec:
           0
           keyword-expected-exception-arguments
           keyword-expected-exception-arguments)
          (spec: 0 thread-interrupt! thread-interrupt!)
          (spec: 0 user-info-name user-info-name)
          (spec: 0 readtable-start-syntax readtable-start-syntax)
          (spec: 0 open-tcp-client open-tcp-client)
          (spec: 0 u8vector->object u8vector->object)
          (spec: 0 bitwise-ior bitwise-ior)
          (spec: 0 file-device file-device)
          (spec: 0 module-whitelist-add! module-whitelist-add!)
          (spec: 0 range-exception? range-exception?)
          (spec: 0 u8vector-swap! u8vector-swap!)
          (spec:
           0
           file-info-last-modification-time
           file-info-last-modification-time)
          (spec: 0 replace-bit-field replace-bit-field)
          (spec: 0 s32vector-swap! s32vector-swap!)
          (spec: 0 vector-unfold-right vector-unfold-right)
          (spec: 0 fxnot fxnot)
          (spec: 0 char-set-ref char-set-ref)
          (spec: 0 s64vector-shrink! s64vector-shrink!)
          (spec: 0 address-info-family address-info-family)
          (spec: 0 fxwrapsquare fxwrapsquare)
          (spec: 0 take-right take-right)
          (spec: 0 flasin flasin)
          (spec:
           0
           invalid-hash-number-exception-arguments
           invalid-hash-number-exception-arguments)
          (spec:
           0
           not-in-compilation-context-exception-procedure
           not-in-compilation-context-exception-procedure)
          (spec:
           0
           terminated-thread-exception-arguments
           terminated-thread-exception-arguments)
          (spec: 0 flinfinite? flinfinite?)
          (spec: 0 directory-files directory-files)
          (spec: 0 step step)
          (spec: 0 u32vector-length u32vector-length)
          (spec:
           0
           unterminated-process-exception-procedure
           unterminated-process-exception-procedure)
          (spec:
           0
           wrong-number-of-values-exception-vals
           wrong-number-of-values-exception-vals)
          (spec: 0 substring-fill! substring-fill!)
          (spec: 0 f32vector-ref f32vector-ref)
          (spec: 0 proper-list? proper-list?)
          (spec: 0 u64vector-fill! u64vector-fill!)
          (spec: 0 bit-field-rotate bit-field-rotate)
          (spec: 0 f64vector-ref f64vector-ref)
          (spec:
           0
           thread-state-abnormally-terminated-reason
           thread-state-abnormally-terminated-reason)
          (spec: 0 list->char-set! list->char-set!)
          (spec: 0 os-exception? os-exception?)
          (spec: 0 thread-suspend! thread-suspend!)
          (spec: 0 vector-fold-right vector-fold-right)
          (spec: 0 fxarithmetic-shift-left fxarithmetic-shift-left)
          (spec: 0 char-set-cursor-next char-set-cursor-next)
          (spec: 0 subf64vector subf64vector)
          (spec:
           0
           datum-parsing-exception-readenv
           datum-parsing-exception-readenv)
          (spec: 0 readtable-comment-handler-set readtable-comment-handler-set)
          (spec: 0 table->list table->list)
          (spec:
           0
           unbound-serial-number-exception-procedure
           unbound-serial-number-exception-procedure)
          (spec:
           0
           fixnum-overflow-exception-procedure
           fixnum-overflow-exception-procedure)
          (spec:
           0
           inactive-thread-exception-arguments
           inactive-thread-exception-arguments)
          (spec: 0 type-exception-arguments type-exception-arguments)
          (spec: 0 s8vector-set! s8vector-set!)
          (spec: 0 with-output-to-string with-output-to-string)
          (spec: 0 string-suffix-length string-suffix-length)
          (spec: 0 seconds->time seconds->time)
          (spec: 0 write-file-u8vector write-file-u8vector)
          (spec: 0 input-port-byte-position input-port-byte-position)
          (spec:
           0
           expression-parsing-exception-source
           expression-parsing-exception-source)
          (spec:
           0
           thread-group->thread-group-vector
           thread-group->thread-group-vector)
          (spec: 0 open-file open-file)
          (spec: 0 thread-mailbox-next thread-mailbox-next)
          (spec: 0 user-info-home user-info-home)
          (spec: 0 cfun-conversion-exception? cfun-conversion-exception?)
          (spec: 0 fold-right fold-right)
          (spec: 0 open-string-pipe open-string-pipe)
          (spec: 0 random-source-make-u8vectors random-source-make-u8vectors)
          (spec: 0 u8vector->list u8vector->list)
          (spec: 0 file-creation-time file-creation-time)
          (spec: 0 bitwise-if bitwise-if)
          (spec: 0 module-search-order-reset! module-search-order-reset!)
          (spec: 0 u8vector-shrink! u8vector-shrink!)
          (spec: 0 file-info-last-change-time file-info-last-change-time)
          (spec: 0 keyword-hash keyword-hash)
          (spec: 0 void void)
          (spec: 0 s32vector-shrink! s32vector-shrink!)
          (spec: 0 char-set-unfold! char-set-unfold!)
          (spec: 0 fxorc2 fxorc2)
          (spec: 0 will-testator will-testator)
          (spec: 0 s64vector-set! s64vector-set!)
          (spec:
           0
           readtable-write-cdr-read-macros?-set
           readtable-write-cdr-read-macros?-set)
          (spec: 0 uninterned-symbol? uninterned-symbol?)
          (spec:
           0
           not-in-compilation-context-exception-arguments
           not-in-compilation-context-exception-arguments)
          (spec: 0 remove! remove!)
          (spec:
           0
           unterminated-process-exception-arguments
           unterminated-process-exception-arguments)
          (spec: 0 call/cc call/cc)
          (spec: 0 flilogb flilogb)
          (spec: 0 path-expand path-expand)
          (spec: 0 subs16vector subs16vector)
          (spec: 0 u32vector-fill! u32vector-fill!)
          (spec:
           0
           wrong-processor-c-return-exception?
           wrong-processor-c-return-exception?)
          (spec: 0 subu16vector-fill! subu16vector-fill!)
          (spec: 0 u64vector-copy! u64vector-copy!)
          (spec: 0 cons* cons*)
          (spec: 0 bit-field-reverse bit-field-reverse)
          (spec: 0 vector->bits vector->bits)
          (spec: 0 list->char-set list->char-set)
          (spec: 0 fx* fx*)
          (spec: 0 thread-state-waiting? thread-state-waiting?)
          (spec: 0 s16vector? s16vector?)
          (spec: 0 char-set-diff+intersection char-set-diff+intersection)
          (spec: 0 fxbit-set? fxbit-set?)
          (spec: 0 unbound-global-exception-rte unbound-global-exception-rte)
          (spec:
           0
           nonempty-input-port-character-buffer-exception-procedure
           nonempty-input-port-character-buffer-exception-procedure)
          (spec:
           0
           datum-parsing-exception-parameters
           datum-parsing-exception-parameters)
          (spec: 0 unbreak unbreak)
          (spec: 0 readtable-comment-handler readtable-comment-handler)
          (spec: 0 fl* fl*)
          (spec: 0 type-exception-arg-id type-exception-arg-id)
          (spec: 0 s8vector-set s8vector-set)
          (spec: 0 any-bits-set? any-bits-set?)
          (spec: 0 get-output-u8vector get-output-u8vector)
          (spec: 0 string-swap! string-swap!)
          (spec: 0 second second)
          (spec: 0 u16vector-length u16vector-length)
          (spec: 0 heap-overflow-exception? heap-overflow-exception?)
          (spec:
           0
           expression-parsing-exception-parameters
           expression-parsing-exception-parameters)
          (spec:
           0
           thread-group->thread-group-list
           thread-group->thread-group-list)
          (spec: 0 open-u8vector open-u8vector)
          (spec: 0 flpositive? flpositive?)
          (spec: 0 split-at split-at)
          (spec:
           0
           thread-mailbox-extract-and-rewind
           thread-mailbox-extract-and-rewind)
          (spec: 0 user-info-uid user-info-uid)
          (spec:
           0
           invalid-hash-number-exception?
           invalid-hash-number-exception?)
          (spec: 0 u8vector-concatenate u8vector-concatenate)
          (spec: 0 random-source-make-reals random-source-make-reals)
          (spec: 0 bitwise-nand bitwise-nand)
          (spec: 0 ucs-range->char-set ucs-range->char-set)
          (spec: 0 box box)
          (spec: 0 file-info-number-of-links file-info-number-of-links)
          (spec: 0 keyword-expected-exception? keyword-expected-exception?)
          (spec: 0 list-set list-set)
          (spec: 0 open-input-process open-input-process)
          (spec: 0 char-set-unfold char-set-unfold)
          (spec: 0 fxorc1 fxorc1)
          (spec: 0 s64vector? s64vector?)
          (spec: 0 string-ci=?-hash string-ci=?-hash)
          (spec: 0 will-execute! will-execute!)
          (spec: 0 address-info-socket-info address-info-socket-info)
          (spec: 0 fxzero? fxzero?)
          (spec:
           0
           readtable-write-cdr-read-macros?
           readtable-write-cdr-read-macros?)
          (spec: 0 tanh tanh)
          (spec:
           0
           unknown-keyword-argument-exception-arguments
           unknown-keyword-argument-exception-arguments)
          (spec: 0 flatan flatan)
          (spec: 0 terminated-thread-exception? terminated-thread-exception?)
          (spec: 0 remove remove)
          (spec: 0 car+cdr car+cdr)
          (spec: 0 untrace untrace)
          (spec: 0 subf64vector-move! subf64vector-move!)
          (spec: 0 u32vector-ref u32vector-ref)
          (spec: 0 concatenate! concatenate!)
          (spec: 0 f64vector-set! f64vector-set!)
          (spec: 0 subu16vector subu16vector)
          (spec: 0 bit-set? bit-set?)
          (spec: 0 s16vector->list s16vector->list)
          (spec: 0 list->f64vector list->f64vector)
          (spec: 0 vector-inc! vector-inc!)
          (spec: 0 thread-thread-group thread-thread-group)
          (spec: 0 char-set-delete! char-set-delete!)
          (spec: 0 f32vector-set! f32vector-set!)
          (spec: 0 fxbit-count fxbit-count)
          (spec: 0 input-port-char-position input-port-char-position)
          (spec: 0 unbound-global-exception-code unbound-global-exception-code)
          (spec: 0 file-type file-type)
          (spec: 0 integer-nth-root integer-nth-root)
          (spec:
           0
           nonempty-input-port-character-buffer-exception-arguments
           nonempty-input-port-character-buffer-exception-arguments)
          (spec: 0 readtable-eval-allowed?-set readtable-eval-allowed?-set)
          (spec: 0 table-for-each table-for-each)
          (spec: 0 module-whitelist-reset! module-whitelist-reset!)
          (spec: 0 fixnum? fixnum?)
          (spec: 0 s8vector-swap! s8vector-swap!)
          (spec: 0 type-exception-type-id type-exception-type-id)
          (spec: 0 unbox unbox)
          (spec: 0 with-output-to-vector with-output-to-vector)
          (spec: 0 append-reverse append-reverse)
          (spec: 0 make-s16vector make-s16vector)
          (spec: 0 string-suffix? string-suffix?)
          (spec: 0 u16vector-set u16vector-set)
          (spec: 0 dead-end dead-end)
          (spec: 0 thread-group->thread-vector thread-group->thread-vector)
          (spec: 0 open-tcp-server open-tcp-server)
          (spec: 0 user-info-shell user-info-shell)
          (spec: 0 thread-name thread-name)
          (spec:
           0
           not-in-compilation-context-exception?
           not-in-compilation-context-exception?)
          (spec: 0 random-source-randomize! random-source-randomize!)
          (spec: 0 inactive-thread-exception? inactive-thread-exception?)
          (spec: 0 symbol-hash symbol-hash)
          (spec: 0 bitwise-merge bitwise-merge)
          (spec: 0 current-processor current-processor)
          (spec: 0 u8vector-append u8vector-append)
          (spec: 0 u8vector? u8vector?)
          (spec: 0 file-info-mode file-info-mode)
          (spec: 0 path-normalize path-normalize)
          (spec: 0 s32vector? s32vector?)
          (spec: 0 string->char-set! string->char-set!)
          (spec: 0 char-set-union! char-set-union!)
          (spec:
           0
           permission-denied-exception-procedure
           permission-denied-exception-procedure)
          (spec: 0 s64vector-swap! s64vector-swap!)
          (spec: 0 string-concatenate string-concatenate)
          (spec: 0 with-exception-catcher with-exception-catcher)
          (spec: 0 fx- fx-)
          (spec: 0 address-info-protocol address-info-protocol)
          (spec:
           0
           readtable-write-extended-read-macros?-set
           readtable-write-extended-read-macros?-set)
          (spec: 0 tcp-client-peer-socket-info tcp-client-peer-socket-info)
          (spec: 0 flasinh flasinh)
          (spec: 0 rename-file rename-file)
          (spec:
           0
           unterminated-process-exception?
           unterminated-process-exception?)
          (spec: 0 fxquotient fxquotient)
          (spec: 0 flinteger? flinteger?)
          (spec: 0 make-will make-will)
          (spec: 0 protocol-info-aliases protocol-info-aliases)
          (spec: 0 subs16vector-move! subs16vector-move!)
          (spec: 0 f64vector-set f64vector-set)
          (spec: 0 subu32vector subu32vector)
          (spec: 0 u64vector-length u64vector-length)
          (spec: 0 getenv getenv)
          (spec: 0 bit-field-set bit-field-set)
          (spec: 0 console-port console-port)
          (spec: 0 output-port-char-position output-port-char-position)
          (spec: 0 s16vector s16vector)
          (spec: 0 fxeven? fxeven?)
          (spec: 0 char-set->list char-set->list)
          (spec: 0 eq?-hash eq?-hash)
          (spec: 0 list->f32vector list->f32vector)
          (spec:
           0
           started-thread-exception-arguments
           started-thread-exception-arguments)
          (spec:
           0
           thread-state-abnormally-terminated?
           thread-state-abnormally-terminated?)
          (spec: 0 char-set-difference char-set-difference)
          (spec: 0 f32vector-set f32vector-set)
          (spec: 0 input-port-bytes-buffered input-port-bytes-buffered)
          (spec: 0 ninth ninth)
          (spec: 0 thread-terminate! thread-terminate!)
          (spec: 0 fl+* fl+*)
          (spec: 0 unbound-global-exception? unbound-global-exception?)
          (spec: 0 readtable-eval-allowed? readtable-eval-allowed?)
          (spec: 0 integer-length integer-length)
          (spec: 0 table-copy table-copy)
          (spec: 0 uncaught-exception-arguments uncaught-exception-arguments)
          (spec:
           0
           file-exists-exception-procedure
           file-exists-exception-procedure)
          (spec: 0 cpu-time cpu-time)
          (spec: 0 make-bitwise-generator make-bitwise-generator)
          (spec: 0 pp pp)
          (spec: 0 s8vector-shrink! s8vector-shrink!)
          (spec: 0 help-browser help-browser)
          (spec: 0 append! append!)
          (spec: 0 expression-parsing-exception? expression-parsing-exception?)
          (spec: 0 make-root-thread make-root-thread)
          (spec: 0 type-exception-procedure type-exception-procedure)
          (spec: 0 u16vector-ref u16vector-ref)
          (spec: 0 datum-parsing-exception? datum-parsing-exception?)
          (spec: 0 arithmetic-shift arithmetic-shift)
          (spec: 0 keyword? keyword?)
          (spec: 0 open-input-u8vector open-input-u8vector)
          (spec: 0 thread-group->thread-list thread-group->thread-list)
          (spec: 0 write-substring write-substring)
          (spec: 0 open-udp open-udp)
          (spec: 0 thread-mailbox-rewind thread-mailbox-rewind)
          (spec: 0 user-name user-name)
          (spec: 0 flceiling flceiling)
          (spec:
           0
           random-source-pseudo-randomize!
           random-source-pseudo-randomize!)
          (spec:
           0
           inactive-thread-exception-procedure
           inactive-thread-exception-procedure)
          (spec: 0 u8vector-copy! u8vector-copy!)
          (spec: 0 file-info-size file-info-size)
          (spec: 0 bitwise-not bitwise-not)
          (spec: 0 flscalbn flscalbn)
          (spec: 0 list-sort list-sort)
          (spec: 0 path-extension path-extension)
          (spec: 0 s64vector s64vector)
          (spec: 0 link-flat link-flat)
          (spec: 0 address-info? address-info?)
          (spec: 0 char-set-union char-set-union)
          (spec: 0 string->char-set string->char-set)
          (spec:
           0
           permission-denied-exception-arguments
           permission-denied-exception-arguments)
          (spec: 0 thread? thread?)
          (spec: 0 will? will?)
          (spec: 0 fx+ fx+)
          (spec:
           0
           readtable-write-extended-read-macros?
           readtable-write-extended-read-macros?)
          (spec:
           0
           unknown-keyword-argument-exception?
           unknown-keyword-argument-exception?)
          (spec: 0 tcp-client-local-socket-info tcp-client-local-socket-info)
          (spec: 0 fllog1p fllog1p)
          (spec: 0 call-with-input-process call-with-input-process)
          (spec: 0 object->string object->string)
          (spec: 0 remq remq)
          (spec: 0 test-bit-field? test-bit-field?)
          (spec: 0 fxpositive? fxpositive?)
          (spec: 0 f32vector-swap! f32vector-swap!)
          (spec: 0 protocol-info protocol-info)
          (spec: 0 setenv setenv)
          (spec: 0 bits bits)
          (spec: 0 subs16vector-fill! subs16vector-fill!)
          (spec: 0 f64vector-swap! f64vector-swap!)
          (spec: 0 subu16vector-move! subu16vector-move!)
          (spec: 0 u16vector-shrink! u16vector-shrink!)
          (spec: 0 u32vector-set! u32vector-set!)
          (spec: 0 get-output-vector get-output-vector)
          (spec: 0 thread-priority-set! thread-priority-set!)
          (spec: 0 output-port-byte-position output-port-byte-position)
          (spec: 0 s16vector-concatenate s16vector-concatenate)
          (spec: 0 thread-priority-boost-set! thread-priority-boost-set!)
          (spec: 0 fxeqv fxeqv)
          (spec: 0 char-set char-set)
          (spec: 0 list->s32vector list->s32vector)
          (spec: 0 s32vector->list s32vector->list)
          (spec: 0 identity identity)
          (spec: 0 char-set-diff+intersection! char-set-diff+intersection!)
          (spec: 0 deadlock-exception? deadlock-exception?)
          (spec: 0 input-port-column input-port-column)
          (spec: 0 read-file-string-list read-file-string-list)
          (spec:
           0
           unbound-global-exception-variable
           unbound-global-exception-variable)
          (spec: 0 fl+ fl+)
          (spec:
           0
           nonempty-input-port-character-buffer-exception?
           nonempty-input-port-character-buffer-exception?)
          (spec:
           0
           readtable-keywords-allowed?-set
           readtable-keywords-allowed?-set)
          (spec:
           0
           file-exists-exception-arguments
           file-exists-exception-arguments)
          (spec: 0 tty-history tty-history)
          (spec: 0 asinh asinh)
          (spec: 0 help help)
          (spec: 0 extract-bit-field extract-bit-field)
          (spec: 0 make-s64vector make-s64vector)
          (spec: 0 process-pid process-pid)
          (spec: 0 drop drop)
          (spec: 0 force-output force-output)
          (spec: 0 split-at! split-at!)
          (spec: 0 open-u8vector-pipe open-u8vector-pipe)
          (spec: 0 thread-group-parent thread-group-parent)
          (spec: 0 user-info? user-info?)
          (spec: 0 flatanh flatanh)
          (spec: 0 subu64vector-fill! subu64vector-fill!)
          (spec: 0 random-source-state-ref random-source-state-ref)
          (spec: 0 u8vector-copy u8vector-copy)
          (spec: 0 file-info-owner file-info-owner)
          (spec: 0 bitwise-nor bitwise-nor)
          (spec: 0 ucs-range->char-set! ucs-range->char-set!)
          (spec: 0 flround flround)
          (spec: 0 box? box?)
          (spec: 0 fxsquare fxsquare)
          (spec: 0 path-strip-directory path-strip-directory)
          (spec: 0 thread-yield! thread-yield!)
          (spec: 0 address-info-socket-type address-info-socket-type)
          (spec: 0 gc-report-set! gc-report-set!)
          (spec: 0 string-contains-ci string-contains-ci)
          (spec: 0 char-set-adjoin char-set-adjoin)
          (spec: 0 not-pair? not-pair?)
          (spec: 0 table-merge table-merge)
          (spec:
           0
           unknown-keyword-argument-exception-procedure
           unknown-keyword-argument-exception-procedure)
          (spec: 0 fllog fllog)
          (spec:
           0
           join-timeout-exception-procedure
           join-timeout-exception-procedure)
          (spec:
           0
           display-continuation-dynamic-environment
           display-continuation-dynamic-environment)
          (spec: 0 object->serial-number object->serial-number)
          (spec: 0 tcp-client-self-socket-info tcp-client-self-socket-info)
          (spec: 0 char-set-xor! char-set-xor!)
          (spec: 0 protocol-info-number protocol-info-number)
          (spec: 0 f32vector-shrink! f32vector-shrink!)
          (spec: 0 subs32vector-fill! subs32vector-fill!)
          (spec: 0 u16vector-set! u16vector-set!)
          (spec: 0 bit-swap bit-swap)
          (spec: 0 f64vector-shrink! f64vector-shrink!)
          (spec: 0 subu32vector-move! subu32vector-move!)
          (spec: 0 u32vector-set u32vector-set)
          (spec: 0 append-reverse! append-reverse!)
          (spec: 0 output-port-line output-port-line)
          (spec: 0 fx<= fx<=)
          (spec: 0 thread-priority-boost thread-priority-boost)
          (spec: 0 s16vector-append s16vector-append)
          (spec: 0 char-set-every char-set-every)
          (spec: 0 xcons xcons)
          (spec: 0 fxif fxif)
          (spec: 0 equal?-hash equal?-hash)
          (spec: 0 list->s16vector list->s16vector)
          (spec: 0 s32vector s32vector)
          (spec: 0 condition-variable-name condition-variable-name)
          (spec: 0 started-thread-exception? started-thread-exception?)
          (spec:
           0
           input-port-characters-buffered
           input-port-characters-buffered)
          (spec: 0 filter! filter!)
          (spec: 0 read-file-string read-file-string)
          (spec: 0 thread-state-initialized? thread-state-initialized?)
          (spec: 0 fl/ fl/)
          (spec: 0 integer-sqrt integer-sqrt)
          (spec:
           0
           nonprocedure-operator-exception-arguments
           nonprocedure-operator-exception-arguments)
          (spec: 0 readtable-keywords-allowed? readtable-keywords-allowed?)
          (spec: 0 bitwise-orc2 bitwise-orc2)
          (spec:
           0
           unbound-key-exception-arguments
           unbound-key-exception-arguments)
          (spec: 0 make-condition-variable make-condition-variable)
          (spec: 0 string-prefix-ci? string-prefix-ci?)
          (spec: 0 s8vector? s8vector?)
          (spec: 0 process-times process-times)
          (spec: 0 make-s32vector make-s32vector)
          (spec: 0 serial-number->object serial-number->object)
          (spec: 0 type-exception? type-exception?)
          (spec: 0 open-output-bytevector open-output-bytevector)
          (spec: 0 flsinh flsinh)
          (spec: 0 dotted-list? dotted-list?)
          (spec: 0 foreign-address foreign-address)
          (spec: 0 eighth eighth)
          (spec: 0 open-vector-pipe open-vector-pipe)
          (spec: 0 thread-group-name thread-group-name)
          (spec: 0 call-with-input-u8vector call-with-input-u8vector)
          (spec: 0 subu64vector subu64vector)
          (spec: 0 u64vector-set u64vector-set)
          (spec: 0 break break)
          (spec: 0 file-info? file-info?)
          (spec: 0 current-readtable current-readtable)
          (spec: 0 fxremainder fxremainder)
          (spec: 0 list-tabulate list-tabulate)
          (spec: 0 s32vector-concatenate s32vector-concatenate)
          (spec: 0 string->keyword string->keyword)
          (spec: 0 permission-denied-exception? permission-denied-exception?)
          (spec: 0 s64vector-append s64vector-append)
          (spec: 0 string-contains string-contains)
          (spec: 0 char-set->string char-set->string)
          (spec: 0 flcosh flcosh)
          (spec: 0 table-length table-length)
          (spec: 0 readtable? readtable?)
          (spec: 0 uncaught-exception-reason uncaught-exception-reason)
          (spec: 0 flmin flmin)
          (spec:
           0
           display-continuation-backtrace
           display-continuation-backtrace)
          (spec:
           0
           join-timeout-exception-arguments
           join-timeout-exception-arguments)
          (spec: 0 repl-backtrace-detail-level repl-backtrace-detail-level)
          (spec: 0 char-set-xor char-set-xor)
          (spec: 0 protocol-info-name protocol-info-name)
          (spec: 0 write-subu8vector write-subu8vector)
          (spec: 0 subs32vector subs32vector)
          (spec: 0 u16vector? u16vector?)
          (spec: 0 bits->vector bits->vector)
          (spec: 0 seventh seventh)
          (spec: 0 subu32vector-fill! subu32vector-fill!)
          (spec: 0 thread-priority thread-priority)
          (spec: 0 u32vector-swap! u32vector-swap!)
          (spec: 0 output-port-column output-port-column)
          (spec: 0 fx< fx<)
          (spec:
           0
           rpc-remote-error-exception-arguments
           rpc-remote-error-exception-arguments)
          (spec: 0 thread-quantum-set! thread-quantum-set!)
          (spec: 0 char-set-difference! char-set-difference!)
          (spec: 0 err-code->string err-code->string)
          (spec: 0 fxfirst-set-bit fxfirst-set-bit)
          (spec: 0 list->s8vector list->s8vector)
          (spec: 0 s16vector-copy! s16vector-copy!)
          (spec: 0 condition-variable-broadcast! condition-variable-broadcast!)
          (spec:
           0
           started-thread-exception-procedure
           started-thread-exception-procedure)
          (spec: 0 filter filter)
          (spec:
           0
           thread-state-normally-terminated?
           thread-state-normally-terminated?)
          (spec: 0 udp-destination-set! udp-destination-set!)
          (spec: 0 vector-any vector-any)
          (spec: 0 fl- fl-)
          (spec: 0 bitwise-orc1 bitwise-orc1)
          (spec: 0 make-f64vector make-f64vector)
          (spec: 0 s8vector->list s8vector->list)
          (spec: 0 tty-history-set! tty-history-set!)
          (spec: 0 with-exception-handler with-exception-handler)
          (spec: 0 process-status process-status)
          (spec: 0 scheduler-exception-reason scheduler-exception-reason)
          (spec: 0 drop-right! drop-right!)
          (spec: 0 flsin flsin)
          (spec: 0 open-input-vector open-input-vector)
          (spec: 0 sixth sixth)
          (spec: 0 open-vector open-vector)
          (spec: 0 thread-group-specific thread-group-specific)
          (spec: 0 call-with-input-string call-with-input-string)
          (spec: 0 create-fifo create-fifo)
          (spec: 0 file-exists-exception? file-exists-exception?)
          (spec: 0 multiple-c-return-exception? multiple-c-return-exception?)
          (spec: 0 r7rs-raise-continuable r7rs-raise-continuable)
          (spec: 0 subu8vector subu8vector)
          (spec: 0 u64vector-ref u64vector-ref)
          (spec: 0 current-time current-time)
          (spec: 0 file-info-type file-info-type)
          (spec: 0 random-source? random-source?)
          (spec: 0 u8vector-fill! u8vector-fill!)
          (spec: 0 fxwrap+ fxwrap+)
          (spec:
           0
           path-strip-trailing-directory-separator
           path-strip-trailing-directory-separator)
          (spec: 0 list-sort! list-sort!)
          (spec: 0 s32vector-append s32vector-append)
          (spec: 0 address-infos address-infos)
          (spec: 0 s64vector->list s64vector->list)
          (spec: 0 top top)
          (spec: 0 flcos flcos)
          (spec:
           0
           readtable-max-unescaped-char-set
           readtable-max-unescaped-char-set)
          (spec: 0 uncaught-exception-procedure uncaught-exception-procedure)
          (spec: 0 table-ref table-ref)
          (spec: 0 display-exception display-exception)
          (spec: 0 flmax flmax)
          (spec: 0 object->u8vector object->u8vector)
          (spec: 0 real-time real-time)
          (spec: 0 f32vector? f32vector?)
          (spec: 0 condition-variable-specific condition-variable-specific)
          (spec: 0 u16vector-swap! u16vector-swap!)
          (spec: 0 f64vector? f64vector?)
          (spec: 0 bits->list bits->list)
          (spec: 0 continuation-capture continuation-capture)
          (spec: 0 subs64vector subs64vector)
          (spec: 0 u32vector-shrink! u32vector-shrink!)
          (spec: 0 fx> fx>)
          (spec: 0 char-set-any char-set-any)
          (spec: 0 output-port-readtable output-port-readtable)
          (spec: 0 thread-quantum thread-quantum)
          (spec: 0 eqv?-hash eqv?-hash)
          (spec: 0 char-set-filter! char-set-filter!)
          (spec: 0 fxlength fxlength)
          (spec: 0 list->s64vector list->s64vector)
          (spec: 0 s16vector-copy s16vector-copy)
          (spec:
           0
           thread-state-normally-terminated-result
           thread-state-normally-terminated-result)
          (spec: 0 vector-concatenate vector-concatenate)
          (spec: 0 input-port-line input-port-line)
          (spec: 0 fl<= fl<=)
          (spec:
           0
           nonprocedure-operator-exception-operator
           nonprocedure-operator-exception-operator)
          (spec: 0 read-file-u8vector read-file-u8vector)
          (spec: 0 unbound-key-exception? unbound-key-exception?)
          (spec: 0 group-info group-info)
          (spec: 0 apropos apropos)
          (spec: 0 s8vector s8vector)
          (spec: 0 make-f32vector make-f32vector)
          (spec: 0 ->char-set ->char-set)
          (spec: 0 tty-history-max-length-set! tty-history-max-length-set!)
          (spec: 0 with-input-from-process with-input-from-process)
          (spec: 0 string-prefix-length-ci string-prefix-length-ci)
          (spec: 0 make-s8vector make-s8vector)
          (spec: 0 flsquare flsquare)
          (spec: 0 drop-right drop-right)
          (spec: 0 open-output-process open-output-process)
          (spec: 0 foreign-released? foreign-released?)
          (spec: 0 thread-group-resume! thread-group-resume!)
          (spec: 0 file-info file-info)
          (spec: 0 create-directory create-directory)
          (spec: 0 bitwise-xor bitwise-xor)
          (spec: 0 mutex-lock! mutex-lock!)
          (spec: 0 r7rs-raise r7rs-raise)
          (spec: 0 shell-command shell-command)
          (spec:
           0
           file-last-access-and-modification-times-set!
           file-last-access-and-modification-times-set!)
          (spec: 0 current-thread current-thread)
          (spec: 0 initial-current-directory initial-current-directory)
          (spec: 0 random-source-state-set! random-source-state-set!)
          (spec: 0 subu64vector-move! subu64vector-move!)
          (spec: 0 abort abort)
          (spec: 0 fxwrap* fxwrap*)
          (spec: 0 list->table list->table)
          (spec: 0 path-strip-extension path-strip-extension)
          (spec: 0 s32vector-copy! s32vector-copy!)
          (spec: 0 u64vector-shrink! u64vector-shrink!)
          (spec: 0 s64vector-copy s64vector-copy)
          (spec: 0 fleven? fleven?)
          (spec: 0 readtable-max-unescaped-char readtable-max-unescaped-char)
          (spec: 0 table-merge! table-merge!)
          (spec:
           0
           display-continuation-environment
           display-continuation-environment)
          (spec: 0 flnegative? flnegative?)
          (spec: 0 join-timeout-exception? join-timeout-exception?)
          (spec: 0 bit-count bit-count)
          (spec: 0 condition-variable-signal! condition-variable-signal!)
          (spec: 0 make-thread make-thread)
          (spec: 0 f64vector->list f64vector->list)
          (spec: 0 protocol-info? protocol-info?)
          (spec: 0 service-info-aliases service-info-aliases)
          (spec: 0 bitwise-andc1 bitwise-andc1)
          (spec: 0 string=?-hash string=?-hash)
          (spec: 0 subs32vector-move! subs32vector-move!)
          (spec:
           0
           sfun-conversion-exception-arguments
           sfun-conversion-exception-arguments)
          (spec: 0 fx= fx=)
          (spec: 0 char-set-adjoin! char-set-adjoin!)
          (spec: 0 end-of-char-set? end-of-char-set?)
          (spec: 0 length+ length+)
          (spec:
           0
           rpc-remote-error-exception-procedure
           rpc-remote-error-exception-procedure)
          (spec: 0 fxior fxior)
          (spec: 0 char-set-filter char-set-filter)
          (spec: 0 thread-resume! thread-resume!)
          (spec: 0 s16vector-length s16vector-length)
          (spec:
           0
           thread-state-running-processor
           thread-state-running-processor)
          (spec: 0 vector-cas! vector-cas!)
          (spec:
           0
           initialized-thread-exception-procedure
           initialized-thread-exception-procedure)
          (spec: 0 default-random-source default-random-source)
          (spec: 0 udp-local-socket-info udp-local-socket-info)
          (spec: 0 fl< fl<)
          (spec: 0 input-port-readtable-set! input-port-readtable-set!)
          (spec: 0 delete delete)
          (spec:
           0
           nonprocedure-operator-exception-code
           nonprocedure-operator-exception-code)
          (spec: 0 read-substring read-substring)
          (spec: 0 system-type system-type)
          (spec:
           0
           unbound-key-exception-procedure
           unbound-key-exception-procedure)
          (spec: 0 pretty-print pretty-print)
          (spec: 0 s8vector-concatenate s8vector-concatenate)
          (spec:
           0
           tty-paren-balance-duration-set!
           tty-paren-balance-duration-set!)
          (spec: 0 with-input-from-port with-input-from-port)
          (spec: 0 f32vector->list f32vector->list)
          (spec: 0 string-prefix-length string-prefix-length)
          (spec: 0 u16vector u16vector)
          (spec: 0 flsqrt flsqrt)
          (spec: 0 third third)
          (spec: 0 repl-highlight-source-level repl-highlight-source-level)
          (spec: 0 foreign-release! foreign-release!)
          (spec: 0 thread-group-suspend! thread-group-suspend!)
          (spec: 0 file-group file-group)
          (spec: 0 bitwise-unfold bitwise-unfold)
          (spec: 0 create-symbolic-link create-symbolic-link)
          (spec: 0 raise raise)
          (spec: 0 subu8vector-move! subu8vector-move!)
          (spec: 0 file-inode file-inode)
          (spec: 0 u64vector-set! u64vector-set!)
          (spec: 0 u8vector-length u8vector-length)
          (spec: 0 abandoned-mutex-exception? abandoned-mutex-exception?)
          (spec: 0 fxwrapabs fxwrapabs)
          (spec: 0 s32vector-copy s32vector-copy)
          (spec: 0 vector-set vector-set)
          (spec: 0 char-set= char-set=)
          (spec: 0 path-volume path-volume)
          (spec: 0 string->uninterned-symbol string->uninterned-symbol)
          (spec: 0 s64vector-concatenate s64vector-concatenate)
          (spec: 0 fldenominator fldenominator)
          (spec: 0 call-with-input-vector call-with-input-vector)
          (spec: 0 link-incremental link-incremental)
          (spec: 0 null-list? null-list?)
          (spec:
           0
           readtable-max-write-length-set
           readtable-max-write-length-set)
          (spec: 0 flnan? flnan?)
          (spec:
           0
           invalid-utf8-encoding-exception-arguments
           invalid-utf8-encoding-exception-arguments)
          (spec: 0 table-set! table-set!)
          (spec: 0 uncaught-exception? uncaught-exception?)
          (spec: 0 condition-variable? condition-variable?)
          (spec: 0 make-table make-table)
          (spec: 0 f64vector f64vector)
          (spec: 0 processor-id processor-id)
          (spec: 0 service-info service-info)
          (spec: 0 continuation-return continuation-return)
          (spec: 0 bitwise-and bitwise-and)
          (spec:
           0
           wrong-number-of-arguments-exception-procedure
           wrong-number-of-arguments-exception-procedure)
          (spec: 0 subs64vector-move! subs64vector-move!)
          (spec: 0 u32vector? u32vector?)
          (spec: 0 char-set-complement! char-set-complement!)
          (spec: 0 fxabs fxabs)
          (spec:
           0
           rpc-remote-error-exception-message
           rpc-remote-error-exception-message)
          (spec: 0 thread-receive thread-receive)
          (spec: 0 char-set-for-each char-set-for-each)
          (spec: 0 output-port-timeout-set! output-port-timeout-set!)
          (spec: 0 fxmin fxmin)
          (spec: 0 error error)
          (spec: 0 s16vector-fill! s16vector-fill!)
          (spec:
           0
           initialized-thread-exception-arguments
           initialized-thread-exception-arguments)
          (spec: 0 first-set-bit first-set-bit)
          (spec: 0 network-info network-info)
          (spec: 0 udp-read-subu8vector udp-read-subu8vector)
          (spec:
           0
           no-such-file-or-directory-exception-procedure
           no-such-file-or-directory-exception-procedure)
          (spec: 0 compile-file compile-file)
          (spec: 0 fl> fl>)
          (spec: 0 input-port-readtable input-port-readtable)
          (spec: 0 system-stamp system-stamp)
          (spec:
           0
           unbound-os-environment-variable-exception-arguments
           unbound-os-environment-variable-exception-arguments)
          (spec: 0 group-info-members group-info-members)
          (spec: 0 s8vector-append s8vector-append)
          (spec: 0 tty-mode-set! tty-mode-set!)
          (spec: 0 with-input-from-u8vector with-input-from-u8vector)
          (spec: 0 f32vector f32vector)
          (spec: 0 host-info-addresses host-info-addresses)
          (spec: 0 scheduler-exception? scheduler-exception?)
          (spec: 0 fltanh fltanh)
          (spec: 0 repl-error-port repl-error-port)
          (spec: 0 open-output-u8vector open-output-u8vector)
          (spec: 0 socket-info-family socket-info-family)
          (spec: 0 thread-group-specific-set! thread-group-specific-set!)
          (spec:
           0
           module-not-found-exception-arguments
           module-not-found-exception-arguments)
          (spec: 0 create-link create-link)
          (spec: 0 file-info-creation-time file-info-creation-time)
          (spec: 0 r7rs-with-exception-handler r7rs-with-exception-handler)
          (spec: 0 subu8vector-fill! subu8vector-fill!)
          (spec: 0 mutex-specific mutex-specific)
          (spec:
           0
           current-user-interrupt-handler
           current-user-interrupt-handler)
          (spec: 0 file-last-change-time file-last-change-time)
          (spec: 0 random-u8vector random-u8vector)
          (spec: 0 u64vector? u64vector?)
          (spec: 0 error-exception-parameters error-exception-parameters)
          (spec: 0 fxwrap- fxwrap-)
          (spec: 0 list->u32vector list->u32vector)
          (spec: 0 s32vector-length s32vector-length)
          (spec: 0 char-set<= char-set<=)
          (spec: 0 time? time?)
          (spec: 0 path-strip-volume path-strip-volume)
          (spec: 0 s64vector-fill! s64vector-fill!)
          (spec: 0 string->uninterned-keyword string->uninterned-keyword)
          (spec: 0 call-with-output-string call-with-output-string)
          (spec:
           0
           nonprocedure-operator-exception?
           nonprocedure-operator-exception?)
          (spec: 0 flexpm1 flexpm1)
          (spec: 0 readtable-max-write-length readtable-max-write-length)
          (spec: 0 table-search table-search)
          (spec:
           0
           uninitialized-thread-exception-arguments
           uninitialized-thread-exception-arguments)
          (spec: 0 display-exception-in-context display-exception-in-context)
          (spec: 0 tcp-server-socket-info tcp-server-socket-info)
          (spec:
           0
           condition-variable-specific-set!
           condition-variable-specific-set!)
          (spec: 0 f32vector-concatenate f32vector-concatenate)
          (spec: 0 bit-field-any? bit-field-any?)
          (spec: 0 make-tls-context make-tls-context)
          (spec: 0 service-info-port-number service-info-port-number)
          (spec: 0 continuation-graft continuation-graft)
          (spec: 0 f64vector-concatenate f64vector-concatenate)
          (spec: 0 bitwise-eqv bitwise-eqv)
          (spec:
           0
           sfun-conversion-exception-message
           sfun-conversion-exception-message)
          (spec: 0 subs64vector-fill! subs64vector-fill!)
          (spec: 0 u32vector->list u32vector->list)
          (spec: 0 char-set-complement char-set-complement)
          (spec: 0 u64vector u64vector)
          (spec: 0 fx>= fx>=)
          (spec:
           0
           length-mismatch-exception-arg-id
           length-mismatch-exception-arg-id)
          (spec: 0 thread-sleep! thread-sleep!)
          (spec: 0 char-set-fold char-set-fold)
          (spec:
           0
           wrong-number-of-arguments-exception-arguments
           wrong-number-of-arguments-exception-arguments)
          (spec: 0 fxmax fxmax)
          (spec: 0 output-port-readtable-set! output-port-readtable-set!)
          (spec: 0 s16vector-ref s16vector-ref)
          (spec: 0 first first)
          (spec: 0 read-all read-all)
          (spec: 0 defer-user-interrupts defer-user-interrupts)
          (spec: 0 fl= fl=)
          (spec:
           0
           no-such-file-or-directory-exception-arguments
           no-such-file-or-directory-exception-arguments)
          (spec: 0 system-version system-version)
          (spec: 0 group-info-gid group-info-gid)
          (spec: 0 s8vector-copy! s8vector-copy!)
          (spec: 0 tty-text-attributes-set! tty-text-attributes-set!)
          (spec: 0 command-args command-args)
          (spec: 0 with-input-from-string with-input-from-string)
          (spec: 0 host-info host-info)
          (spec: 0 make-mutex make-mutex)
          (spec: 0 string-prefix? string-prefix?)
          (spec: 0 u16vector-append u16vector-append)
          (spec: 0 display-procedure-environment display-procedure-environment)
          (spec: 0 fltan fltan)
          (spec: 0 repl-output-port repl-output-port)
          (spec: 0 thread thread)
          (spec: 0 foreign-tags foreign-tags)
          (spec: 0 reverse! reverse!)
          (spec: 0 socket-info-address socket-info-address)
          (spec: 0 thread-group? thread-group?)
          (spec: 0 copy-bit copy-bit)
          (spec: 0 file-info-attributes file-info-attributes)
          (spec: 0 random-integer random-integer)
          (spec: 0 subvector-fill! subvector-fill!)
          (spec: 0 u64vector-swap! u64vector-swap!)
          (spec: 0 mutex-name mutex-name)
          (spec: 0 file-last-access-time file-last-access-time)
          (spec: 0 range-exception-arg-id range-exception-arg-id)
          (spec: 0 fxnand fxnand)
          (spec: 0 error-exception-message error-exception-message)
          (spec: 0 list->u16vector list->u16vector)
          (spec: 0 s32vector-fill! s32vector-fill!)
          (spec: 0 time->seconds time->seconds)
          (spec: 0 fxwraparithmetic-shift-left fxwraparithmetic-shift-left)
          (spec: 0 all-bits-set? all-bits-set?)
          (spec: 0 s64vector-copy! s64vector-copy!)
          (spec: 0 list= list=)
          (spec: 0 vector-shrink! vector-shrink!)
          (spec: 0 call-with-output-process call-with-output-process)
          (spec: 0 delete-directory delete-directory)
          (spec: 0 flexp flexp)
          (spec:
           0
           nonprocedure-operator-exception-rte
           nonprocedure-operator-exception-rte)
          (spec: 0 readtable-max-write-level-set readtable-max-write-level-set)
          (spec: 0 flnumerator flnumerator)
          (spec:
           0
           invalid-utf8-encoding-exception?
           invalid-utf8-encoding-exception?)
          (spec: 0 tcp-service-unregister! tcp-service-unregister!)
          (spec: 0 f32vector-append f32vector-append)
          (spec: 0 bit-field bit-field)
          (spec: 0 host-info-name host-info-name)
          (spec: 0 make-thread-group make-thread-group)
          (spec: 0 service-info-name service-info-name)
          (spec: 0 subf32vector subf32vector)
          (spec: 0 bitwise-andc2 bitwise-andc2)
          (spec: 0 f64vector-append f64vector-append)
          (spec:
           0
           sfun-conversion-exception-code
           sfun-conversion-exception-code)
          (spec: 0 subs8vector-fill! subs8vector-fill!)
          (spec: 0 u32vector u32vector)
          (spec: 0 fourth fourth)
          (spec: 0 char-set-copy char-set-copy)
          (spec: 0 os-exception-code os-exception-code)
          (spec: 0 rpc-remote-error-exception? rpc-remote-error-exception?)
          (spec: 0 thread-send thread-send)
          (spec: 0 char-set-intersection char-set-intersection)
          (spec: 0 fxandc1 fxandc1)
          (spec: 0 thread-state-running? thread-state-running?)
          (spec: 0 vector-every vector-every)
          (spec: 0 file-mode file-mode)
          (spec: 0 initialized-thread-exception? initialized-thread-exception?)
          (spec: 0 network-info-name network-info-name)
          (spec: 0 udp-source-socket-info udp-source-socket-info)
          (spec: 0 fixnum->flonum fixnum->flonum)
          (spec:
           0
           default-user-interrupt-handler
           default-user-interrupt-handler)
          (spec: 0 input-port-timeout-set! input-port-timeout-set!)
          (spec: 0 read-subu8vector read-subu8vector)
          (spec: 0 system-type-string system-type-string)
          (spec: 0 gensym gensym)
          (spec: 0 circular-list circular-list)
          (spec: 0 poll-point poll-point)
          (spec: 0 s8vector-copy s8vector-copy)
          (spec:
           0
           unbound-os-environment-variable-exception?
           unbound-os-environment-variable-exception?)
          (spec: 0 executable-path executable-path)
          (spec: 0 group-info? group-info?)
          (spec: 0 primordial-exception-handler primordial-exception-handler)
          (spec: 0 u16vector->list u16vector->list)
          (spec:
           0
           cfun-conversion-exception-code
           cfun-conversion-exception-code)
          (spec: 0 open-directory open-directory)
          (spec: 0 repl-input-port repl-input-port)
          (spec: 0 socket-info? socket-info?)
          (spec: 0 last last)
          (spec: 0 thread-group-terminate! thread-group-terminate!)
          (spec: 0 module-not-found-exception? module-not-found-exception?)
          (spec: 0 random-f64vector random-f64vector)
          (spec: 0 subvector subvector)
          (spec: 0 create-temporary-directory create-temporary-directory)
          (spec: 0 file-info-group file-info-group)
          (spec: 0 mutex-state mutex-state)
          (spec: 0 compile-file-to-target compile-file-to-target)
          (spec: 0 u8vector-ref u8vector-ref)
          (spec: 0 fxmodulo fxmodulo)
          (spec: 0 list->u8vector list->u8vector)
          (spec: 0 s32vector-ref s32vector-ref)
          (spec: 0 trace trace)
          (spec: 0 fxwraparithmetic-shift fxwraparithmetic-shift)
          (spec: 0 char-set? char-set?)
          (spec: 0 every-bit-set? every-bit-set?)
          (spec: 0 thread-specific-set! thread-specific-set!)
          (spec: 0 flabs flabs)
          (spec: 0 call-with-output-vector call-with-output-vector)
          (spec: 0 delete! delete!)
          (spec: 0 readtable-max-write-level readtable-max-write-level)
          (spec: 0 table? table?)
          (spec:
           0
           uninitialized-thread-exception?
           uninitialized-thread-exception?)
          (spec: 0 flfinite? flfinite?)
          (spec:
           0
           invalid-utf8-encoding-exception-procedure
           invalid-utf8-encoding-exception-procedure)
          (spec:
           0
           number-of-arguments-limit-exception-arguments
           number-of-arguments-limit-exception-arguments)
          (spec: 0 tcp-service-register! tcp-service-register!)
          (spec: 0 host-info-aliases host-info-aliases)
          (spec: 0 make-u32vector make-u32vector)
          (spec: 0 f32vector-copy! f32vector-copy!)
          (spec: 0 processor? processor?)
          (spec: 0 service-info? service-info?)
          (spec: 0 timeout->time timeout->time)
          (spec: 0 bit-field-every? bit-field-every?)
          (spec: 0 continuation? continuation?)
          (spec: 0 f64vector-copy! f64vector-copy!)
          (spec: 0 sfun-conversion-exception? sfun-conversion-exception?)
          (spec: 0 subs8vector subs8vector)
          (spec: 0 foreign? foreign?)
          (spec: 0 char-set-contains? char-set-contains?)
          (spec:
           0
           length-mismatch-exception-procedure
           length-mismatch-exception-procedure)
          (spec: 0 os-exception-arguments os-exception-arguments)
          (spec: 0 tty? tty?)
          (spec: 0 u64vector-append u64vector-append)
          (spec: 0 fxand fxand)
          (spec: 0 char-set-hash char-set-hash)
          (spec: 0 output-port-width output-port-width)
          (spec: 0 s16vector-set! s16vector-set!)
          (spec: 0 u32vector-concatenate u32vector-concatenate)
          (spec: 0 file-last-modification-time file-last-modification-time)
          (spec: 0 vector-cumulate vector-cumulate)
          (spec: 0 network-info-aliases network-info-aliases)
          (spec:
           0
           wrong-number-of-arguments-exception?
           wrong-number-of-arguments-exception?)
          (spec: 0 udp-read-u8vector udp-read-u8vector)
          (spec:
           0
           no-such-file-or-directory-exception?
           no-such-file-or-directory-exception?)
          (spec:
           0
           unbound-os-environment-variable-exception-procedure
           unbound-os-environment-variable-exception-procedure)
          (spec: 0 generate-proper-tail-calls generate-proper-tail-calls)
          (spec:
           0
           mailbox-receive-timeout-exception-procedure
           mailbox-receive-timeout-exception-procedure)
          (spec: 0 u16vector-copy u16vector-copy)
          (spec: 0 s8vector-length s8vector-length)
          (spec: 0 with-input-from-vector with-input-from-vector)
          (spec: 0 group-info-name group-info-name)
          (spec: 0 command-name command-name)
          (spec: 0 string-set string-set)
          (spec: 0 script-directory script-directory)
          (spec: 0 flodd? flodd?)
          (spec:
           0
           cfun-conversion-exception-arguments
           cfun-conversion-exception-arguments)
          (spec:
           0
           divide-by-zero-exception-arguments
           divide-by-zero-exception-arguments)
          (spec: 0 thread-init! thread-init!)
          (spec: 0 repl-result-history-ref repl-result-history-ref)
          (spec: 0 fltruncate fltruncate)
          (spec: 0 socket-info-port-number socket-info-port-number)
          (spec: 0 open-output-vector open-output-vector)
          (spec: 0 take! take!)
          (spec: 0 copy-file copy-file)
          (spec:
           0
           module-not-found-exception-procedure
           module-not-found-exception-procedure)
          (spec: 0 file-info-device file-info-device)
          (spec: 0 current-directory current-directory)
          (spec: 0 mutex-specific-set! mutex-specific-set!)
          (spec: 0 range-exception-procedure range-exception-procedure)
          (spec: 0 char-set-map char-set-map)
          (spec: 0 partition! partition!)
          (spec: 0 fxnor fxnor)
          (spec: 0 error-exception? error-exception?)
          (spec: 0 list->u64vector list->u64vector)
          (spec: 0 thread-base-priority-set! thread-base-priority-set!)
          (spec: 0 touch touch)
          (spec: 0 fxwrapquotient fxwrapquotient)
          (spec: 0 every every)
          (spec: 0 s64vector-length s64vector-length)
          (spec: 0 fl>= fl>=)
          (spec: 0 call-with-output-u8vector call-with-output-u8vector)
          (spec: 0 delete-file-or-directory delete-file-or-directory)
          (spec: 0 thread-specific thread-specific)
          (spec:
           0
           readtable-sharing-allowed?-set
           readtable-sharing-allowed?-set)
          (spec:
           0
           uninitialized-thread-exception-procedure
           uninitialized-thread-exception-procedure)
          (spec: 0 flexpt flexpt)
          (spec: 0 iota iota)
          (spec: 0 vector-unfold vector-unfold)
          (spec: 0 compilation-target compilation-target)
          (spec: 0 atanh atanh)
          (spec: 0 host-name host-name)
          (spec: 0 f32vector-copy f32vector-copy)
          (spec: 0 make-u16vector make-u16vector)
          (spec: 0 service-info-protocol service-info-protocol)
          (spec: 0 bit-field-clear bit-field-clear)
          (spec: 0 configure-command-string configure-command-string)
          (spec: 0 f64vector-copy f64vector-copy)
          (spec:
           0
           sfun-conversion-exception-procedure
           sfun-conversion-exception-procedure)
          (spec: 0 subf32vector-move! subf32vector-move!)
          (spec: 0 tty-type-set! tty-type-set!)
          (spec: 0 u64vector->list u64vector->list)
          (spec: 0 os-exception-procedure os-exception-procedure)
          (spec:
           0
           length-mismatch-exception-arguments
           length-mismatch-exception-arguments)
          (spec: 0 thread-state-uninitialized? thread-state-uninitialized?)
          (spec: 0 vector-fold vector-fold)
          (spec: 0 char-set-cursor char-set-cursor)
          (spec: 0 with-output-to-process with-output-to-process)
          (spec: 0 fxarithmetic-shift fxarithmetic-shift)
          (spec: 0 s16vector-set s16vector-set)
          (spec: 0 stack-overflow-exception? stack-overflow-exception?)
          (spec: 0 u32vector-append u32vector-append)
          (spec:
           0
           wrong-number-of-values-exception-rte
           wrong-number-of-values-exception-rte)
          (spec: 0 network-info? network-info?)
          (spec: 0 file-owner file-owner)
          (spec: 0 system-version-string system-version-string)
          (spec:
           0
           unbound-serial-number-exception-arguments
           unbound-serial-number-exception-arguments)
          (spec: 0 noncontinuable-exception? noncontinuable-exception?)
          (spec:
           0
           fixnum-overflow-exception-arguments
           fixnum-overflow-exception-arguments)
          (spec: 0 subvector-move! subvector-move!)
          (spec: 0 u8vector u8vector)
          (spec:
           0
           mailbox-receive-timeout-exception-arguments
           mailbox-receive-timeout-exception-arguments)
          (spec:
           0
           port-io-exception-handler-set!
           port-io-exception-handler-set!)
          (spec: 0 s8vector-fill! s8vector-fill!)
          (spec: 0 u16vector-concatenate u16vector-concatenate)
          (spec: 0 clear-bit-field clear-bit-field)
          (spec: 0 println println)
          (spec: 0 udp-write-u8vector udp-write-u8vector)
          (spec: 0 string-suffix-ci? string-suffix-ci?)
          (spec: 0 make-parameter make-parameter)
          (spec: 0 boolean=? boolean=?)
          (spec: 0 error-object? error-object?)
          (spec: 0 delete-file delete-file)
          (spec: 0 inexact inexact)
          (spec: 0 char-foldcase char-foldcase)
          (spec: 0 bytevector? bytevector?)
          (spec: 0 get-environment-variable get-environment-variable)
          (spec: 0 list-copy list-copy)
          (spec: 0 promise? promise?)
          (spec: 0 error-object-message error-object-message)
          (spec: 0 call-with-port call-with-port)
          (spec: 0 exact exact)
          (spec: 0 eof-object eof-object)
          (spec: 0 get-environment-variables get-environment-variables)
          (spec: 0 get-output-bytevector get-output-bytevector)
          (spec: 0 floor-remainder floor-remainder)
          (spec: 0 current-error-port current-error-port)
          (spec: 0 make-promise make-promise)
          (spec: 0 open-input-bytevector open-input-bytevector)
          (spec: 0 balanced-quotient balanced-quotient)
          (spec: 0 peek-u8 peek-u8)
          (spec: 0 string-map string-map)
          (spec: 0 floor-quotient floor-quotient)
          (spec: 0 current-jiffy current-jiffy)
          (spec: 0 truncate-quotient truncate-quotient)
          (spec: 0 vector-for-each vector-for-each)
          (spec: 0 write-simple write-simple)
          (spec: 0 truncate/ truncate/)
          (spec: 0 euclidean-quotient euclidean-quotient)
          (spec: 0 balanced/ balanced/)
          (spec: 0 port? port?)
          (spec: 0 make-bytevector make-bytevector)
          (spec: 0 get-output-string get-output-string)
          (spec: 0 floor/ floor/)
          (spec: 0 file-error? file-error?)
          (spec: 0 round-remainder round-remainder)
          (spec: 0 truncate-remainder truncate-remainder)
          (spec: 0 balanced-remainder balanced-remainder)
          (spec: 0 read-error? read-error?)
          (spec: 0 vector->string vector->string)
          (spec: 0 write-shared write-shared)
          (spec: 0 round-quotient round-quotient)
          (spec: 0 euclidean/ euclidean/)
          (spec: 0 exact-integer? exact-integer?)
          (spec: 0 infinite? infinite?)
          (spec: 0 jiffies-per-second jiffies-per-second)
          (spec: 0 open-input-string open-input-string)
          (spec: 0 string-upcase string-upcase)
          (spec: 0 current-second current-second)
          (spec: 0 euclidean-remainder euclidean-remainder)
          (spec: 0 exact-integer-sqrt exact-integer-sqrt)
          (spec: 0 list-set! list-set!)
          (spec: 0 utf8->string utf8->string)
          (spec: 0 close-port close-port)
          (spec: 0 bytevector bytevector)
          (spec: 0 file-exists? file-exists?)
          (spec: 0 open-output-bytevector open-output-bytevector)
          (spec: 0 round/ round/)
          (spec: 0 symbol=? symbol=?)
          (spec: 0 textual-port? textual-port?)
          (spec: 0 input-port-open? input-port-open?)
          (spec: 0 read-line read-line)
          (spec: 0 vector-append vector-append)
          (spec: 0 nan? nan?)
          (spec: 0 square square)
          (spec: 0 vector-map vector-map)
          (spec: 0 write-string write-string)
          (spec: 0 write-u8 write-u8)
          (spec: 0 bytevector-copy bytevector-copy)
          (spec: 0 finite? finite?)
          (spec: 0 ceiling-remainder ceiling-remainder)
          (spec: 0 string-copy! string-copy!)
          (spec: 0 write-bytevector write-bytevector)
          (spec: 0 features features)
          (spec: 0 bytevector-append bytevector-append)
          (spec: 0 output-port-open? output-port-open?)
          (spec: 0 ceiling-quotient ceiling-quotient)
          (spec: 0 binary-port? binary-port?)
          (spec: 0 bytevector-length bytevector-length)
          (spec: 0 command-line command-line)
          (spec: 0 emergency-exit emergency-exit)
          (spec: 0 open-binary-input-file open-binary-input-file)
          (spec: 0 read-string read-string)
          (spec: 0 vector-copy! vector-copy!)
          (spec: 0 bytevector-copy! bytevector-copy!)
          (spec: 0 read-u8 read-u8)
          (spec: 0 ceiling/ ceiling/)
          (spec: 0 open-output-string open-output-string)
          (spec: 0 string->vector string->vector)
          (spec: 0 string-downcase string-downcase)
          (spec: 0 vector-copy vector-copy)
          (spec: 0 bytevector-u8-set! bytevector-u8-set!)
          (spec: 0 make-list make-list)
          (spec: 0 flush-output-port flush-output-port)
          (spec: 0 string-for-each string-for-each)
          (spec: 0 error-object-irritants error-object-irritants)
          (spec: 0 digit-value digit-value)
          (spec: 0 string->utf8 string->utf8)
          (spec: 0 u8-ready? u8-ready?)
          (spec: 0 bytevector-u8-ref bytevector-u8-ref)
          (spec: 0 read-bytevector! read-bytevector!)
          (spec: 0 open-binary-output-file open-binary-output-file)
          (spec: 0 string-foldcase string-foldcase)
          (spec: 0 read-bytevector read-bytevector)
          (spec: 0 exit exit)
          (spec: 0 cddaar cddaar)
          (spec: 0 floor floor)
          (spec: 0 imag-part imag-part)
          (spec: 0 char-upper-case? char-upper-case?)
          (spec: 0 angle angle)
          (spec: 0 transcript-on transcript-on)
          (spec: 0 exact->inexact exact->inexact)
          (spec: 0 caddar caddar)
          (spec: 0 peek-char peek-char)
          (spec: 0 string-append string-append)
          (spec: 0 call-with-values call-with-values)
          (spec: 0 memv memv)
          (spec: 0 vector-fill! vector-fill!)
          (spec: 0 eof-object? eof-object?)
          (spec: 0 char-upcase char-upcase)
          (spec: 0 cdar cdar)
          (spec: 0 string-ci=? string-ci=?)
          (spec: 0 list->vector list->vector)
          (spec: 0 cadar cadar)
          (spec: 0 remainder remainder)
          (spec: 0 <= <=)
          (spec: 0 tan tan)
          (spec: 0 memq memq)
          (spec: 0 char-lower-case? char-lower-case?)
          (spec: 0 transcript-off transcript-off)
          (spec: 0 list list)
          (spec: 0 vector? vector?)
          (spec: 0 char-whitespace? char-whitespace?)
          (spec: 0 read-char read-char)
          (spec: 0 cddar cddar)
          (spec: 0 cos cos)
          (spec: 0 string-ci<? string-ci<?)
          (spec: 0 caddr caddr)
          (spec: 0 denominator denominator)
          (spec: 0 < <)
          (spec: 0 complex? complex?)
          (spec: 0 number? number?)
          (spec: 0 eq? eq?)
          (spec: 0 integer->char integer->char)
          (spec: 0 make-vector make-vector)
          (spec: 0 append append)
          (spec: 0 make-rectangular make-rectangular)
          (spec: 0 cddadr cddadr)
          (spec: 0 round round)
          (spec: 0 set-cdr! set-cdr!)
          (spec: 0 inexact? inexact?)
          (spec: 0 boolean? boolean?)
          (spec: 0 rationalize rationalize)
          (spec: 0 string string)
          (spec: 0 cadddr cadddr)
          (spec: 0 string-ci>=? string-ci>=?)
          (spec: 0 set-car! set-car!)
          (spec: 0 truncate truncate)
          (spec: 0 dynamic-wind dynamic-wind)
          (spec: 0 char-ready? char-ready?)
          (spec: 0 modulo modulo)
          (spec: 0 char<? char<?)
          (spec: 0 cddddr cddddr)
          (spec: 0 char->integer char->integer)
          (spec: 0 force force)
          (spec: 0 current-input-port current-input-port)
          (spec: 0 rational? rational?)
          (spec: 0 log log)
          (spec:
           0
           call-with-current-continuation
           call-with-current-continuation)
          (spec: 0 map map)
          (spec: 0 = =)
          (spec: 0 cons cons)
          (spec: 0 char-numeric? char-numeric?)
          (spec: 0 equal? equal?)
          (spec: 0 vector vector)
          (spec: 0 char<=? char<=?)
          (spec: 0 expt expt)
          (spec: 0 procedure? procedure?)
          (spec: 0 cdddar cdddar)
          (spec: 0 for-each for-each)
          (spec: 0 open-input-file open-input-file)
          (spec: 0 list-ref list-ref)
          (spec: 0 cadr cadr)
          (spec: 0 car car)
          (spec: 0 >= >=)
          (spec: 0 min min)
          (spec: 0 numerator numerator)
          (spec: 0 pair? pair?)
          (spec: 0 caaaar caaaar)
          (spec: 0 char>=? char>=?)
          (spec: 0 close-output-port close-output-port)
          (spec: 0 cddr cddr)
          (spec: 0 lcm lcm)
          (spec: 0 char-ci<=? char-ci<=?)
          (spec: 0 current-output-port current-output-port)
          (spec: 0 sqrt sqrt)
          (spec: 0 string-ci>? string-ci>?)
          (spec: 0 string<=? string<=?)
          (spec: 0 display display)
          (spec: 0 symbol->string symbol->string)
          (spec: 0 > >)
          (spec: 0 quotient quotient)
          (spec: 0 apply apply)
          (spec: 0 eqv? eqv?)
          (spec: 0 newline newline)
          (spec: 0 integer? integer?)
          (spec: 0 vector->list vector->list)
          (spec: 0 positive? positive?)
          (spec: 0 char=? char=?)
          (spec: 0 close-input-port close-input-port)
          (spec: 0 cdddr cdddr)
          (spec: 0 char-alphabetic? char-alphabetic?)
          (spec: 0 symbol? symbol?)
          (spec: 0 vector-length vector-length)
          (spec: 0 string->list string->list)
          (spec: 0 call-with-input-file call-with-input-file)
          (spec: 0 char? char?)
          (spec: 0 caaar caaar)
          (spec: 0 with-input-from-file with-input-from-file)
          (spec: 0 asin asin)
          (spec: 0 + +)
          (spec: 0 char-ci=? char-ci=?)
          (spec: 0 string=? string=?)
          (spec: 0 ceiling ceiling)
          (spec: 0 null-environment null-environment)
          (spec: 0 max max)
          (spec: 0 char>? char>?)
          (spec: 0 caaadr caaadr)
          (spec: 0 assoc assoc)
          (spec: 0 * *)
          (spec: 0 char-ci<? char-ci<?)
          (spec: 0 make-string make-string)
          (spec: 0 string<? string<?)
          (spec: 0 cdr cdr)
          (spec: 0 string->symbol string->symbol)
          (spec: 0 eval eval)
          (spec: 0 string>=? string>=?)
          (spec: 0 caaddr caaddr)
          (spec: 0 exact? exact?)
          (spec: 0 interaction-environment interaction-environment)
          (spec: 0 char-ci>? char-ci>?)
          (spec: 0 negative? negative?)
          (spec: 0 string->number string->number)
          (spec: 0 call-with-output-file call-with-output-file)
          (spec: 0 cdaadr cdaadr)
          (spec: 0 null? null?)
          (spec: 0 real-part real-part)
          (spec: 0 caadar caadar)
          (spec: 0 magnitude magnitude)
          (spec: 0 - -)
          (spec: 0 assv assv)
          (spec: 0 char-ci>=? char-ci>=?)
          (spec: 0 open-output-file open-output-file)
          (spec: 0 string-copy string-copy)
          (spec: 0 write write)
          (spec: 0 even? even?)
          (spec: 0 list->string list->string)
          (spec: 0 list-tail list-tail)
          (spec: 0 cdaaar cdaaar)
          (spec: 0 scheme-report-environment scheme-report-environment)
          (spec: 0 string? string?)
          (spec: 0 zero? zero?)
          (spec: 0 length length)
          (spec: 0 caar caar)
          (spec: 0 assq assq)
          (spec: 0 string-fill! string-fill!)
          (spec: 0 char-downcase char-downcase)
          (spec: 0 string-ref string-ref)
          (spec: 0 write-char write-char)
          (spec: 0 vector-ref vector-ref)
          (spec: 0 gcd gcd)
          (spec: 0 cdadar cdadar)
          (spec: 0 list? list?)
          (spec: 0 number->string number->string)
          (spec: 0 real? real?)
          (spec: 0 string>? string>?)
          (spec: 0 caadr caadr)
          (spec: 0 input-port? input-port?)
          (spec: 0 atan atan)
          (spec: 0 odd? odd?)
          (spec: 0 abs abs)
          (spec: 0 cdaar cdaar)
          (spec: 0 output-port? output-port?)
          (spec: 0 read read)
          (spec: 0 cadadr cadadr)
          (spec: 0 string-set! string-set!)
          (spec: 0 with-output-to-file with-output-to-file)
          (spec: 0 reverse reverse)
          (spec: 0 sin sin)
          (spec: 0 acos acos)
          (spec: 0 vector-set! vector-set!)
          (spec: 0 cdadr cdadr)
          (spec: 0 values values)
          (spec: 0 cadaar cadaar)
          (spec: 0 exp exp)
          (spec: 0 make-polar make-polar)
          (spec: 0 inexact->exact inexact->exact)
          (spec: 0 load load)
          (spec: 0 not not)
          (spec: 0 cdaddr cdaddr)
          (spec: 0 string-ci<=? string-ci<=?)
          (spec: 0 member member)
          (spec: 0 substring substring)
          (spec: 0 string-length string-length)
          (spec: 0 / /)
          (spec: 0 RuntimeAliases RuntimeAliases)
          (spec: 0 R5RSRuntime R5RSRuntime)
          (spec: 0 GerbilRuntime GerbilRuntime)
          (spec: 0 GambitRuntime GambitRuntime)
          (spec: 0 Runtime Runtime)
          (spec: 0 R7RSRuntime R7RSRuntime)
          (spec: 0 %%app-dotted %%app)
          (spec: 0 %%ref-dotted %%ref)
          (spec: 0 %%set-dotted! set!)
          (spec: 0 lambda/c lambda)
          (spec: 0 case-lambda/c case-lambda)
          (spec: 0 let/c let)
          (spec: 0 def/c def)
          (spec: 0 def*/c def*)
          (spec: 0 defmethod/c defmethod)
          (spec: 0 defclass/c defclass)
          (spec: 0 defstruct/c defstruct)
          (spec: 1 quasisyntax quasisyntax)
          (spec: 1 identifier-rules identifier-rules)
          (spec: 1 make-macro-object make-macro-object)
          (spec: 1 macro-object macro-object)
          (spec: 1 macro-object-macro-set! macro-object-macro-set!)
          (spec: 1 macro-object? macro-object?)
          (spec: 1 &macro-object-macro &macro-object-macro)
          (spec: 1 macro-object::t macro-object::t)
          (spec: 1 &macro-object-macro-set! &macro-object-macro-set!)
          (spec: 1 macro-object-macro macro-object-macro)
          (spec:
           1
           macro-object::apply-macro-expander
           macro-object::apply-macro-expander)
          (spec: 1 with-syntax with-syntax)
          (spec: 1 syntax-rules syntax-rules)
          (spec: 1 syntax/loc syntax/loc)
          (spec: 1 with-syntax* with-syntax*)
          (spec: 1 syntax syntax)
          (spec: 1 syntax-case syntax-case)
          (spec: 1 stx-last-pair stx-last-pair)
          (spec: 1 make-local-context make-local-context)
          (spec: 1 core-quote-syntax core-quote-syntax)
          (spec: 1 stx-for-each stx-for-each)
          (spec: 1 stx-boolean? stx-boolean?)
          (spec: 1 syntax-binding? syntax-binding?)
          (spec: 1 user-expander? user-expander?)
          (spec: 1 core-expand core-expand)
          (spec: 1 free-identifier=? free-identifier=?)
          (spec: 1 current-expander-marks current-expander-marks)
          (spec: 1 core-apply-expander core-apply-expander)
          (spec: 1 gentemps gentemps)
          (spec: 1 core-identifier-key core-identifier-key)
          (spec: 1 core-module-export->import core-module-export->import)
          (spec: 1 syntax-error? syntax-error?)
          (spec: 1 export-expander? export-expander?)
          (spec: 1 expander-context-id expander-context-id)
          (spec: 1 stx-eq? stx-eq?)
          (spec: 1 current-module-reader-args current-module-reader-args)
          (spec: 1 stx-map stx-map)
          (spec: 1 raise-syntax-error raise-syntax-error)
          (spec: 1 stx-string? stx-string?)
          (spec: 1 syntax-e syntax-e)
          (spec: 1 core-resolve-module-path core-resolve-module-path)
          (spec: 1 syntax-binding-e syntax-binding-e)
          (spec: 1 syntax->datum syntax->datum)
          (spec: 1 stx-e stx-e)
          (spec: 1 local-context? local-context?)
          (spec: 1 stx-number? stx-number?)
          (spec: 1 core-resolve-identifier core-resolve-identifier)
          (spec: 1 alias-binding? alias-binding?)
          (spec: 1 module-context-ns module-context-ns)
          (spec: 1 syntax-split-splice syntax-split-splice)
          (spec: 1 stx-source stx-source)
          (spec: 1 module-import-phi module-import-phi)
          (spec: 1 check-duplicate-identifiers check-duplicate-identifiers)
          (spec: 1 binding-id binding-id)
          (spec: 1 stx-cdr stx-cdr)
          (spec: 1 syntax-pattern-depth syntax-pattern-depth)
          (spec: 1 extern-binding? extern-binding?)
          (spec: 1 current-expander-compiling? current-expander-compiling?)
          (spec: 1 import-binding? import-binding?)
          (spec: 1 syntax-local-pattern? syntax-local-pattern?)
          (spec: 1 prelude-context? prelude-context?)
          (spec: 1 stx-getq stx-getq)
          (spec: 1 import-module import-module)
          (spec: 1 module-binding? module-binding?)
          (spec: 1 module-export-name module-export-name)
          (spec: 1 module-export-weak? module-export-weak?)
          (spec: 1 stx-length stx-length)
          (spec: 1 stx-list-ref stx-list-ref)
          (spec: 1 underscore? underscore?)
          (spec: 1 import-set-imports import-set-imports)
          (spec: 1 stx-list-tail stx-list-tail)
          (spec: 1 export-set-phi export-set-phi)
          (spec: 1 module-import-weak? module-import-weak?)
          (spec: 1 core-expand-import-source core-expand-import-source)
          (spec: 1 module-context? module-context?)
          (spec: 1 user-expander-context user-expander-context)
          (spec: 1 stx-plist? stx-plist?)
          (spec: 1 syntax->list syntax->list)
          (spec: 1 make-module-import make-module-import)
          (spec: 1 identifier? identifier?)
          (spec: 1 expander? expander?)
          (spec: 1 current-module-reader-path current-module-reader-path)
          (spec: 1 make-import-expander make-import-expander)
          (spec: 1 stx-fixnum? stx-fixnum?)
          (spec: 1 stx-null? stx-null?)
          (spec: 1 make-module-export make-module-export)
          (spec: 1 current-expander-phi current-expander-phi)
          (spec: 1 module-context-code module-context-code)
          (spec: 1 syntax-pattern? syntax-pattern?)
          (spec: 1 module-import-name module-import-name)
          (spec: 1 stx-pair? stx-pair?)
          (spec: 1 make-syntax-pattern make-syntax-pattern)
          (spec: 1 syntax-local-e syntax-local-e)
          (spec: 1 import-expander? import-expander?)
          (spec: 1 stx-ormap stx-ormap)
          (spec: 1 module-export? module-export?)
          (spec: 1 syntax-local-unwrap syntax-local-unwrap)
          (spec: 1 expander-binding-e expander-binding-e)
          (spec: 1 export-set-exports export-set-exports)
          (spec: 1 stx-foldl stx-foldl)
          (spec: 1 core-expand-head core-expand-head)
          (spec: 1 core-library-module-path? core-library-module-path?)
          (spec: 1 stx-pair/null? stx-pair/null?)
          (spec: 1 stx-reverse stx-reverse)
          (spec: 1 syntax-local-introduce syntax-local-introduce)
          (spec: 1 import-binding-e import-binding-e)
          (spec: 1 stx-false? stx-false?)
          (spec: 1 eval-module eval-module)
          (spec: 1 make-import-export-expander make-import-export-expander)
          (spec: 1 top-context? top-context?)
          (spec: 1 current-expander-path current-expander-path)
          (spec: 1 make-user-expander make-user-expander)
          (spec: 1 import-set-source import-set-source)
          (spec: 1 import-export-expander? import-export-expander?)
          (spec: 1 stx-foldr stx-foldr)
          (spec: 1 stx-vector? stx-vector?)
          (spec: 1 core-expand-export-source core-expand-export-source)
          (spec: 1 core-expand-expression+1 core-expand-expression+1)
          (spec: 1 import-set-phi import-set-phi)
          (spec: 1 macro-expand-syntax-case macro-expand-syntax-case)
          (spec: 1 syntax-local-rewrap syntax-local-rewrap)
          (spec: 1 core-resolve-module-export core-resolve-module-export)
          (spec: 1 module-import? module-import?)
          (spec: 1 core-context-top core-context-top)
          (spec: 1 stx-last stx-last)
          (spec: 1 stx-keyword? stx-keyword?)
          (spec: 1 module-context-export module-context-export)
          (spec: 1 feature-expander? feature-expander?)
          (spec: 1 binding? binding?)
          (spec: 1 stx-list? stx-list?)
          (spec: 1 identifier-list? identifier-list?)
          (spec: 1 alias-binding-e alias-binding-e)
          (spec: 1 stx-wrap-source stx-wrap-source)
          (spec: 1 stx-equal? stx-equal?)
          (spec: 1 module-export-context module-export-context)
          (spec: 1 stx-andmap stx-andmap)
          (spec: 1 expander-e expander-e)
          (spec: 1 export-set? export-set?)
          (spec: 1 macro-expand-syntax macro-expand-syntax)
          (spec: 1 stx-char? stx-char?)
          (spec: 1 datum->syntax datum->syntax)
          (spec: 1 user-expander-phi user-expander-phi)
          (spec: 1 eval-syntax eval-syntax)
          (spec: 1 module-export-phi module-export-phi)
          (spec: 1 import-set? import-set?)
          (spec: 1 top-binding? top-binding?)
          (spec: 1 stx-eqv? stx-eqv?)
          (spec: 1 bound-identifier=? bound-identifier=?)
          (spec: 1 stx-car stx-car)
          (spec: 1 genident genident)
          (spec: 1 stx-identifier stx-identifier)
          (spec: 1 stx-box? stx-box?)
          (spec: 1 ellipsis? ellipsis?)
          (spec: 1 syntax-pattern-id syntax-pattern-id)
          (spec: 1 module-context-import module-context-import)
          (spec: 1 syntax-local-value syntax-local-value)
          (spec: 1 expander-binding? expander-binding?)
          (spec: 1 module-import-source module-import-source)
          (spec: 1 export-set-source export-set-source)
          (spec: 1 runtime-binding? runtime-binding?)
          (spec: 1 core-identifier=? core-identifier=?)
          (spec:
           1
           core-resolve-library-module-path
           core-resolve-library-module-path)
          (spec: 1 make-export-expander make-export-expander)
          (spec: 1 module-export-key module-export-key)
          (spec: 1 syntax-check-splice-targets syntax-check-splice-targets)
          (spec: 1 resolve-identifier resolve-identifier)
          (spec: 1 stx-datum? stx-datum?)
          (spec: 1 current-expander-context current-expander-context)
          (spec: 1 ExpanderRuntime ExpanderRuntime)
          (spec: 1 SyntaxCase SyntaxCase)
          (spec: 1 SyntaxSugar SyntaxSugar)
          (spec: 2 !class-precedence-list !class-precedence-list)
          (spec: 2 type-env-type type-env-type)
          (spec: 2 current-type-env current-type-env)
          (spec: 2 type-env-super type-env-super)
          (spec: 2 type-env? type-env?)
          (spec: 2 &type-env-super-set! &type-env-super-set!)
          (spec: 2 &type-env-super &type-env-super)
          (spec: 2 &type-env-checked? &type-env-checked?)
          (spec: 2 type-env::t type-env::t)
          (spec: 2 type-env-checked?-set! type-env-checked?-set!)
          (spec: 2 &type-env-var-set! &type-env-var-set!)
          (spec: 2 type-env-type-set! type-env-type-set!)
          (spec: 2 type-env-var-set! type-env-var-set!)
          (spec: 2 type-env type-env)
          (spec: 2 type-env-checked? type-env-checked?)
          (spec: 2 &type-env-checked?-set! &type-env-checked?-set!)
          (spec: 2 type-env-var type-env-var)
          (spec: 2 type-env-lookup type-env-lookup)
          (spec: 2 type-env-super-set! type-env-super-set!)
          (spec: 2 &type-env-type-set! &type-env-type-set!)
          (spec: 2 &type-env-type &type-env-type)
          (spec: 2 make-type-env make-type-env)
          (spec: 2 &type-env-var &type-env-var)
          (spec:
           2
           interface-info::apply-macro-expander
           interface-info::apply-macro-expander)
          (spec:
           2
           interface-info-instance-satisfies-predicate
           interface-info-instance-satisfies-predicate)
          (spec:
           2
           interface-info-instance-try-constructor-set!
           interface-info-instance-try-constructor-set!)
          (spec:
           2
           interface-info-interface-methods
           interface-info-interface-methods)
          (spec:
           2
           &interface-info-interface-descriptor-set!
           &interface-info-interface-descriptor-set!)
          (spec: 2 interface-info::t interface-info::t)
          (spec:
           2
           &interface-info-implementation-methods-set!
           &interface-info-implementation-methods-set!)
          (spec:
           2
           &interface-info-instance-try-constructor
           &interface-info-instance-try-constructor)
          (spec: 2 interface-info-name-set! interface-info-name-set!)
          (spec:
           2
           &interface-info-unchecked-implementation-methods
           &interface-info-unchecked-implementation-methods)
          (spec: 2 interface-info-flatten-mixin interface-info-flatten-mixin)
          (spec: 2 &interface-info-instance-type &interface-info-instance-type)
          (spec:
           2
           &interface-info-interface-descriptor
           &interface-info-interface-descriptor)
          (spec:
           2
           &interface-info-instance-constructor-set!
           &interface-info-instance-constructor-set!)
          (spec:
           2
           interface-info-unchecked-implementation-methods
           interface-info-unchecked-implementation-methods)
          (spec:
           2
           interface-info-instance-predicate-set!
           interface-info-instance-predicate-set!)
          (spec: 2 interface-info-name interface-info-name)
          (spec:
           2
           interface-info-instance-try-constructor
           interface-info-instance-try-constructor)
          (spec:
           2
           &interface-info-instance-constructor
           &interface-info-instance-constructor)
          (spec:
           2
           interface-info-instance-constructor-set!
           interface-info-instance-constructor-set!)
          (spec:
           2
           &interface-info-instance-predicate
           &interface-info-instance-predicate)
          (spec: 2 interface-info interface-info)
          (spec:
           2
           interface-info-interface-methods-set!
           interface-info-interface-methods-set!)
          (spec:
           2
           interface-info-instance-type-set!
           interface-info-instance-type-set!)
          (spec:
           2
           interface-info-instance-constructor
           interface-info-instance-constructor)
          (spec: 2 syntax-local-interface-info? syntax-local-interface-info?)
          (spec:
           2
           interface-info-instance-satisfies-predicate-set!
           interface-info-instance-satisfies-predicate-set!)
          (spec:
           2
           interface-info-interface-descriptor-set!
           interface-info-interface-descriptor-set!)
          (spec: 2 make-interface-info make-interface-info)
          (spec:
           2
           interface-info-unchecked-implementation-methods-set!
           interface-info-unchecked-implementation-methods-set!)
          (spec:
           2
           interface-info-instance-predicate
           interface-info-instance-predicate)
          (spec:
           2
           &interface-info-implementation-methods
           &interface-info-implementation-methods)
          (spec:
           2
           &interface-info-unchecked-implementation-methods-set!
           &interface-info-unchecked-implementation-methods-set!)
          (spec:
           2
           interface-info-interface-descriptor
           interface-info-interface-descriptor)
          (spec:
           2
           interface-info-interface-mixin-set!
           interface-info-interface-mixin-set!)
          (spec: 2 interface-info? interface-info?)
          (spec:
           2
           &interface-info-interface-methods-set!
           &interface-info-interface-methods-set!)
          (spec:
           2
           interface-info-implementation-methods-set!
           interface-info-implementation-methods-set!)
          (spec:
           2
           &interface-info-instance-satisfies-predicate-set!
           &interface-info-instance-satisfies-predicate-set!)
          (spec: 2 interface-info-instance-type interface-info-instance-type)
          (spec:
           2
           interface-info-implementation-methods
           interface-info-implementation-methods)
          (spec:
           2
           &interface-info-interface-mixin
           &interface-info-interface-mixin)
          (spec:
           2
           &interface-info-instance-satisfies-predicate
           &interface-info-instance-satisfies-predicate)
          (spec:
           2
           &interface-info-instance-predicate-set!
           &interface-info-instance-predicate-set!)
          (spec: 2 &interface-info-name &interface-info-name)
          (spec:
           2
           &interface-info-instance-try-constructor-set!
           &interface-info-instance-try-constructor-set!)
          (spec:
           2
           interface-info-interface-mixin
           interface-info-interface-mixin)
          (spec:
           2
           &interface-info-interface-methods
           &interface-info-interface-methods)
          (spec: 2 &interface-info-name-set! &interface-info-name-set!)
          (spec:
           2
           &interface-info-instance-type-set!
           &interface-info-instance-type-set!)
          (spec:
           2
           &interface-info-interface-mixin-set!
           &interface-info-interface-mixin-set!)
          (spec: 2 is-signature? is-signature?)
          (spec: 1 with-procedure-signature with-procedure-signature)
          (spec: 1 @method @method)
          (spec: 1 defmethod/c defmethod/c)
          (spec: 1 lambda/c lambda/c)
          (spec: 1 defstruct/c defstruct/c)
          (spec: 1 def*/c def*/c)
          (spec: 1 def/c def/c)
          (spec: 1 let/c let/c)
          (spec: 1 defmutable defmutable)
          (spec: 1 case-lambda/c case-lambda/c)
          (spec: 1 with-procedure-contract with-procedure-contract)
          (spec:
           1
           with-procedure-unchecked-contract
           with-procedure-unchecked-contract)
          (spec: 1 with-receiver with-receiver)
          (spec: 1 defclass/c defclass/c)
          (spec: 2 contract-type-subtype? contract-type-subtype?)
          (spec: 2 check-valid-type! check-valid-type!)
          (spec: 2 signature-arguments-out signature-arguments-out)
          (spec:
           2
           make-interface-method-lambda-signature
           make-interface-method-lambda-signature)
          (spec: 2 signature-has-keywords? signature-has-keywords?)
          (spec: 2 signature-keywords signature-keywords)
          (spec: 2 signature-arguments-in signature-arguments-in)
          (spec:
           2
           check-signature-contract-types!
           check-signature-contract-types!)
          (spec: 2 compatible-signatures? compatible-signatures?)
          (spec: 2 check-signature! check-signature!)
          (spec:
           2
           make-interface-method-contract
           make-interface-method-contract)
          (spec: 2 compatible-type-contract? compatible-type-contract?)
          (spec:
           2
           make-procedure-lambda-signature
           make-procedure-lambda-signature)
          (spec:
           2
           compatible-signature-type-contract?
           compatible-signature-type-contract?)
          (spec: 2 keyword<? keyword<?)
          (spec: 2 check-signature-spec! check-signature-spec!)
          (spec: 2 signature-arity signature-arity)
          (spec: 2 make-procedure-contract make-procedure-contract)
          (spec: 2 signature-contract? signature-contract?)
          (spec: 2 symbol<? symbol<?)
          (spec: 2 signature-type-contract signature-type-contract)
          (spec: 1 interface interface)
          (spec:
           1
           with-interface-unchecked-method
           with-interface-unchecked-method)
          (spec: 1 interface-out interface-out)
          (spec: 1 with-interface-checked-method with-interface-checked-method)
          (spec: 1 definterface-method definterface-method)
          (spec: 1 with-interface-method with-interface-method)
          (spec: 1 in-range-inclusive? in-range-inclusive?)
          (spec: 1 list-of? list-of?)
          (spec: 1 maybe maybe)
          (spec: 1 in-range? in-range?)
          (spec: 2 !class-slot-default !class-slot-default)
          (spec: 2 split-dotted-identifier split-dotted-identifier)
          (spec: 2 get-slot-accessor get-slot-accessor)
          (spec: 2 !class-slot-type !class-slot-type)
          (spec: 2 get-slot-mutator get-slot-mutator)
          (spec:
           2
           !class-slot-checked-mutator-contract?
           !class-slot-checked-mutator-contract?)
          (spec: 2 dotted-identifier? dotted-identifier?)
          (spec:
           2
           !class-slot-checked-method-contract?
           !class-slot-checked-method-contract?)
          (spec: 2 !class-slot-contract !class-slot-contract)
          (spec: 1 with-contract with-contract)
          (spec: 1 with-interface with-interface)
          (spec: 1 %%set-dotted! %%set-dotted!)
          (spec: 1 with-class with-class)
          (spec: 1 using using)
          (spec: 1 %%ref-dotted %%ref-dotted)
          (spec: 1 %%app-dotted %%app-dotted)
          (spec: 1 := :=)
          (spec: 1 ::- ::-)
          (spec: 1 contract-violation! contract-violation!)
          (spec: 1 :~ :~)
          (spec: 1 :- :-)
          (spec: 1 check-nil! check-nil!)
          (spec: 1 abort! abort!)
          (spec: 1 nil-dereference! nil-dereference!)
          (spec: 1 :? :?)
          (spec: 1 : :)
          (spec: 2 type-reference-identifier type-reference-identifier)
          (spec: 2 type-reference type-reference)
          (spec: 2 resolve-type->type-descriptor resolve-type->type-descriptor)
          (spec:
           2
           type-reference-identifier-set!
           type-reference-identifier-set!)
          (spec: 2 &type-reference-identifier &type-reference-identifier)
          (spec: 2 type-reference::t type-reference::t)
          (spec:
           2
           &type-reference-identifier-set!
           &type-reference-identifier-set!)
          (spec: 2 type-identifier? type-identifier?)
          (spec: 2 resolve-type resolve-type)
          (spec: 2 resolve-type->identifier resolve-type->identifier)
          (spec: 2 type-reference? type-reference?)
          (spec: 2 make-type-reference make-type-reference)
          (spec: 1 deftype deftype)
          (spec: 1 Using Using)
          (spec: 1 TypeEnv TypeEnv)
          (spec: 1 TypedDefinitions TypedDefinitions)
          (spec: 1 Interface Interface)
          (spec: 1 InterfaceInfo InterfaceInfo)
          (spec: 1 ClassMeta ClassMeta)
          (spec: 1 TypeReference TypeReference)
          (spec: 1 ContractRules ContractRules)
          (spec: 1 TypeCast TypeCast)
          (spec: 2 setf-macro-macro setf-macro-macro)
          (spec: 2 &setf-macro-macro-set! &setf-macro-macro-set!)
          (spec: 2 &setq-macro-macro-set! &setq-macro-macro-set!)
          (spec: 2 syntax-local-setq-macro? syntax-local-setq-macro?)
          (spec: 2 setq-macro? setq-macro?)
          (spec: 2 setq-macro setq-macro)
          (spec: 2 expand-set! expand-set!)
          (spec: 2 setf-macro? setf-macro?)
          (spec: 2 &setq-macro-macro &setq-macro-macro)
          (spec: 2 make-setf-macro make-setf-macro)
          (spec: 2 setf-macro setf-macro)
          (spec: 2 syntax-local-setf-macro? syntax-local-setf-macro?)
          (spec: 2 setq-macro::t setq-macro::t)
          (spec: 2 &setf-macro-macro &setf-macro-macro)
          (spec: 2 setf-macro::t setf-macro::t)
          (spec: 2 setq-macro-macro setq-macro-macro)
          (spec: 2 setf-macro-macro-set! setf-macro-macro-set!)
          (spec: 2 setq-macro-macro-set! setq-macro-macro-set!)
          (spec: 2 make-setq-macro make-setq-macro)
          (spec: 1 values-set! values-set!)
          (spec: 1 parameterize parameterize)
          (spec: 1 let/cc let/cc)
          (spec: 1 unwind-protect unwind-protect)
          (spec: 1 @bytes @bytes)
          (spec: 1 eval-when-compile eval-when-compile)
          (spec: 2 match-pattern? match-pattern?)
          (spec: 2 syntax-local-match-macro? syntax-local-match-macro?)
          (spec: 2 match-macro? match-macro?)
          (spec: 2 make-match-macro make-match-macro)
          (spec: 2 match-macro::t match-macro::t)
          (spec: 2 match-macro match-macro)
          (spec: 1 defsyntax-for-match defsyntax-for-match)
          (spec: 1 match* match*)
          (spec: 1 defrules-for-match defrules-for-match)
          (spec: 1 ? ?)
          (spec: 1 with* with*)
          (spec: 1 match match)
          (spec: 1 with with)
          (spec: 1 :readtable :readtable)
          (spec: 1 :boolean :boolean)
          (spec: 1 :list :list)
          (spec: 1 :thread :thread)
          (spec: 1 :u32vector :u32vector)
          (spec: 1 :string :string)
          (spec: 1 :immediate :immediate)
          (spec: 1 :null :null)
          (spec: 1 :s16vector :s16vector)
          (spec: 1 :object :object)
          (spec: 1 :s64vector :s64vector)
          (spec: 1 :foreign :foreign)
          (spec: 1 :vector-port :vector-port)
          (spec: 1 :true :true)
          (spec: 1 :flonum :flonum)
          (spec: 1 class class)
          (spec: 1 :keyword :keyword)
          (spec: 1 :cpxnum :cpxnum)
          (spec: 1 :pair :pair)
          (spec: 1 :f32vector :f32vector)
          (spec: 1 :character-port :character-port)
          (spec: 1 :socket-info :socket-info)
          (spec: 1 :hvector :hvector)
          (spec: 1 :processor :processor)
          (spec: 1 :sequence :sequence)
          (spec: 1 :continuation :continuation)
          (spec: 1 :u8vector-port :u8vector-port)
          (spec: 1 :atom :atom)
          (spec: 1 :bignum :bignum)
          (spec: 1 :symbolic :symbolic)
          (spec: 1 :u16vector :u16vector)
          (spec: 1 :box :box)
          (spec: 1 :weak :weak)
          (spec: 1 :eof :eof)
          (spec: 1 :condvar :condvar)
          (spec: 1 :udp-port :udp-port)
          (spec: 1 :u64vector :u64vector)
          (spec: 1 :u8vector :u8vector)
          (spec: 1 :raw-device-port :raw-device-port)
          (spec: 1 :integer :integer)
          (spec: 1 :readenv :readenv)
          (spec: 1 defsystem-class-info defsystem-class-info)
          (spec: 1 :mutex :mutex)
          (spec: 1 :t :t)
          (spec: 1 :class :class)
          (spec: 1 :char :char)
          (spec: 1 :f64vector :f64vector)
          (spec: 1 :values :values)
          (spec: 1 :void :void)
          (spec: 1 :special :special)
          (spec: 1 :procedure :procedure)
          (spec: 1 :real :real)
          (spec: 1 :fixnum :fixnum)
          (spec: 1 :port :port)
          (spec: 1 :tcp-server-port :tcp-server-port)
          (spec: 1 :event-queue-port :event-queue-port)
          (spec: 1 :table :table)
          (spec: 1 :frame :frame)
          (spec: 1 :vm :vm)
          (spec: 1 :address-info :address-info)
          (spec: 1 :file-info :file-info)
          (spec: 1 :promise :promise)
          (spec: 1 :string-port :string-port)
          (spec: 1 :false :false)
          (spec: 1 :time :time)
          (spec: 1 :vector :vector)
          (spec: 1 :byte-port :byte-port)
          (spec: 1 :device-port :device-port)
          (spec: 1 :object-port :object-port)
          (spec: 1 :ratnum :ratnum)
          (spec: 1 :writeenv :writeenv)
          (spec: 1 :thread-group :thread-group)
          (spec: 1 :number :number)
          (spec: 1 :symbol :symbol)
          (spec: 1 :s8vector :s8vector)
          (spec: 1 :s32vector :s32vector)
          (spec: 1 :directory-port :directory-port)
          (spec: 1 @-set! @-set!)
          (spec: 1 define-struct define-struct)
          (spec: 1 @ @)
          (spec: 1 define-class define-class)
          (spec: 1 defstruct-type defstruct-type)
          (spec: 1 defclass-type defclass-type)
          (spec: 1 MOP-4 MOP-4)
          (spec: 1 MOP-5 MOP-5)
          (spec: 1 MOP-1 MOP-1)
          (spec: 1 MOP-2 MOP-2)
          (spec: 1 MOP-3 MOP-3)
          (spec: 1 :readtable :readtable)
          (spec: 1 :boolean :boolean)
          (spec: 1 :list :list)
          (spec: 1 :thread :thread)
          (spec: 1 :u32vector :u32vector)
          (spec: 1 :string :string)
          (spec: 1 :immediate :immediate)
          (spec: 1 :null :null)
          (spec: 1 :s16vector :s16vector)
          (spec: 1 :object :object)
          (spec: 1 :s64vector :s64vector)
          (spec: 1 :foreign :foreign)
          (spec: 1 :vector-port :vector-port)
          (spec: 1 :true :true)
          (spec: 1 :flonum :flonum)
          (spec: 1 class class)
          (spec: 1 :keyword :keyword)
          (spec: 1 :cpxnum :cpxnum)
          (spec: 1 :pair :pair)
          (spec: 1 :f32vector :f32vector)
          (spec: 1 :character-port :character-port)
          (spec: 1 :socket-info :socket-info)
          (spec: 1 :hvector :hvector)
          (spec: 1 :processor :processor)
          (spec: 1 :sequence :sequence)
          (spec: 1 :continuation :continuation)
          (spec: 1 :u8vector-port :u8vector-port)
          (spec: 1 :atom :atom)
          (spec: 1 :bignum :bignum)
          (spec: 1 :symbolic :symbolic)
          (spec: 1 :u16vector :u16vector)
          (spec: 1 :box :box)
          (spec: 1 :weak :weak)
          (spec: 1 :eof :eof)
          (spec: 1 :condvar :condvar)
          (spec: 1 :udp-port :udp-port)
          (spec: 1 :u64vector :u64vector)
          (spec: 1 :u8vector :u8vector)
          (spec: 1 :raw-device-port :raw-device-port)
          (spec: 1 :integer :integer)
          (spec: 1 :readenv :readenv)
          (spec: 1 defsystem-class-info defsystem-class-info)
          (spec: 1 :mutex :mutex)
          (spec: 1 :t :t)
          (spec: 1 :class :class)
          (spec: 1 :char :char)
          (spec: 1 :f64vector :f64vector)
          (spec: 1 :values :values)
          (spec: 1 :void :void)
          (spec: 1 :special :special)
          (spec: 1 :procedure :procedure)
          (spec: 1 :real :real)
          (spec: 1 :fixnum :fixnum)
          (spec: 1 :port :port)
          (spec: 1 :tcp-server-port :tcp-server-port)
          (spec: 1 :event-queue-port :event-queue-port)
          (spec: 1 :table :table)
          (spec: 1 :frame :frame)
          (spec: 1 :vm :vm)
          (spec: 1 :address-info :address-info)
          (spec: 1 :file-info :file-info)
          (spec: 1 :promise :promise)
          (spec: 1 :string-port :string-port)
          (spec: 1 :false :false)
          (spec: 1 :time :time)
          (spec: 1 :vector :vector)
          (spec: 1 :byte-port :byte-port)
          (spec: 1 :device-port :device-port)
          (spec: 1 :object-port :object-port)
          (spec: 1 :ratnum :ratnum)
          (spec: 1 :writeenv :writeenv)
          (spec: 1 :thread-group :thread-group)
          (spec: 1 :number :number)
          (spec: 1 :symbol :symbol)
          (spec: 1 :s8vector :s8vector)
          (spec: 1 :s32vector :s32vector)
          (spec: 1 :directory-port :directory-port)
          (spec: 1 @-set! @-set!)
          (spec: 1 define-struct define-struct)
          (spec: 1 @ @)
          (spec: 1 define-class define-class)
          (spec: 1 class-type-info class-type-info)
          (spec: 1 !class-type-struct? !class-type-struct?)
          (spec: 1 syntax-local-class-type-info? syntax-local-class-type-info?)
          (spec:
           1
           !class-type-precedence-list-set!
           !class-type-precedence-list-set!)
          (spec: 1 &!class-type-precedence-list &!class-type-precedence-list)
          (spec: 1 !class-type-constructor-set! !class-type-constructor-set!)
          (spec: 1 !class-type-slot-types-set! !class-type-slot-types-set!)
          (spec: 1 !class-type-slot-contracts !class-type-slot-contracts)
          (spec: 1 &!class-type-predicate &!class-type-predicate)
          (spec:
           1
           &!class-type-unchecked-mutators-set!
           &!class-type-unchecked-mutators-set!)
          (spec:
           1
           &!class-type-unchecked-accessors-set!
           &!class-type-unchecked-accessors-set!)
          (spec: 1 !class-type-mutators-set! !class-type-mutators-set!)
          (spec: 1 !class-type-descriptor-set! !class-type-descriptor-set!)
          (spec: 1 &!class-type-metaclass &!class-type-metaclass)
          (spec: 1 !class-type-system? !class-type-system?)
          (spec: 1 &!class-type-system?-set! &!class-type-system?-set!)
          (spec: 1 make-class-type-info make-class-type-info)
          (spec: 1 !class-type-metaclass !class-type-metaclass)
          (spec: 1 !class-type-super-set! !class-type-super-set!)
          (spec:
           1
           !class-type-unchecked-accessors
           !class-type-unchecked-accessors)
          (spec:
           1
           !class-type-constructor-method
           !class-type-constructor-method)
          (spec: 1 !class-type-slot-types !class-type-slot-types)
          (spec:
           1
           !class-type-constructor-method-set!
           !class-type-constructor-method-set!)
          (spec: 1 !class-type-predicate-set! !class-type-predicate-set!)
          (spec: 1 !class-type-struct?-set! !class-type-struct?-set!)
          (spec: 1 !class-type-mutators !class-type-mutators)
          (spec: 1 !class-type-precedence-list !class-type-precedence-list)
          (spec:
           1
           !class-type-unchecked-mutators
           !class-type-unchecked-mutators)
          (spec: 1 &!class-type-id &!class-type-id)
          (spec: 1 &!class-type-ordered-slots &!class-type-ordered-slots)
          (spec: 1 &!class-type-final? &!class-type-final?)
          (spec: 1 &!class-type-system? &!class-type-system?)
          (spec: 1 &!class-type-constructor &!class-type-constructor)
          (spec: 1 !class-type-name-set! !class-type-name-set!)
          (spec:
           1
           !class-type-unchecked-mutators-set!
           !class-type-unchecked-mutators-set!)
          (spec: 1 &!class-type-descriptor-set! &!class-type-descriptor-set!)
          (spec: 1 &!class-type-slot-types-set! &!class-type-slot-types-set!)
          (spec:
           1
           &!class-type-slot-defaults-set!
           &!class-type-slot-defaults-set!)
          (spec:
           1
           !class-type-slot-contracts-set!
           !class-type-slot-contracts-set!)
          (spec: 1 !class-type-descriptor !class-type-descriptor)
          (spec: 1 !class-type-accessors !class-type-accessors)
          (spec:
           1
           !class-type-unchecked-accessors-set!
           !class-type-unchecked-accessors-set!)
          (spec:
           1
           !class-type-slot-defaults-set!
           !class-type-slot-defaults-set!)
          (spec:
           1
           &!class-type-slot-contracts-set!
           &!class-type-slot-contracts-set!)
          (spec: 1 &!class-type-id-set! &!class-type-id-set!)
          (spec: 1 !class-type-final? !class-type-final?)
          (spec: 1 &!class-type-accessors &!class-type-accessors)
          (spec: 1 class-type-info::t class-type-info::t)
          (spec: 1 &!class-type-mutators &!class-type-mutators)
          (spec: 1 &!class-type-name-set! &!class-type-name-set!)
          (spec: 1 !class-type-name !class-type-name)
          (spec: 1 &!class-type-name &!class-type-name)
          (spec: 1 &!class-type-super-set! &!class-type-super-set!)
          (spec:
           1
           &!class-type-precedence-list-set!
           &!class-type-precedence-list-set!)
          (spec: 1 &!class-type-struct?-set! &!class-type-struct?-set!)
          (spec: 1 &!class-type-metaclass-set! &!class-type-metaclass-set!)
          (spec: 1 &!class-type-constructor-set! &!class-type-constructor-set!)
          (spec: 1 &!class-type-accessors-set! &!class-type-accessors-set!)
          (spec:
           1
           &!class-type-unchecked-accessors
           &!class-type-unchecked-accessors)
          (spec: 1 !class-type-metaclass-set! !class-type-metaclass-set!)
          (spec: 1 !class-type-constructor !class-type-constructor)
          (spec:
           1
           &!class-type-unchecked-mutators
           &!class-type-unchecked-mutators)
          (spec: 1 !class-type-slots !class-type-slots)
          (spec: 1 &!class-type-final?-set! &!class-type-final?-set!)
          (spec: 1 &!class-type-super &!class-type-super)
          (spec: 1 &!class-type-mutators-set! &!class-type-mutators-set!)
          (spec: 1 &!class-type-struct? &!class-type-struct?)
          (spec:
           1
           !class-type-ordered-slots-set!
           !class-type-ordered-slots-set!)
          (spec: 1 !class-type-final?-set! !class-type-final?-set!)
          (spec:
           1
           class-type-info::apply-macro-expander
           class-type-info::apply-macro-expander)
          (spec: 1 !class-type-ordered-slots !class-type-ordered-slots)
          (spec:
           1
           &!class-type-ordered-slots-set!
           &!class-type-ordered-slots-set!)
          (spec: 1 !class-type-accessors-set! !class-type-accessors-set!)
          (spec: 1 class-type-info? class-type-info?)
          (spec: 1 !class-type-slots-set! !class-type-slots-set!)
          (spec: 1 !class-type-system?-set! !class-type-system?-set!)
          (spec: 1 !class-type-super !class-type-super)
          (spec: 1 !class-type-id !class-type-id)
          (spec:
           1
           &!class-type-constructor-method
           &!class-type-constructor-method)
          (spec: 1 &!class-type-slot-defaults &!class-type-slot-defaults)
          (spec: 1 &!class-type-descriptor &!class-type-descriptor)
          (spec: 1 !class-type-slot-defaults !class-type-slot-defaults)
          (spec: 1 &!class-type-slot-contracts &!class-type-slot-contracts)
          (spec: 1 !class-type-id-set! !class-type-id-set!)
          (spec: 1 !class-type-predicate !class-type-predicate)
          (spec: 1 &!class-type-slots &!class-type-slots)
          (spec: 1 &!class-type-slots-set! &!class-type-slots-set!)
          (spec: 1 &!class-type-predicate-set! &!class-type-predicate-set!)
          (spec: 1 &!class-type-slot-types &!class-type-slot-types)
          (spec:
           1
           &!class-type-constructor-method-set!
           &!class-type-constructor-method-set!)
          (spec: 1 defstruct-type defstruct-type)
          (spec: 1 defclass-type defclass-type)
          (spec: 1 make-class-type-id make-class-type-id)
          (spec: 1 module-type-id module-type-id)
          (spec: 1 defconst defconst)
          (spec: 1 defsyntax defsyntax)
          (spec: 1 definline definline)
          (spec: 1 quasiquote quasiquote)
          (spec: 1 ~case-test ~case-test)
          (spec: 1 ~case-dispatch* ~case-dispatch*)
          (spec: 1 alet alet)
          (spec: 1 <> <>)
          (spec: 1 ~case-dispatch ~case-dispatch)
          (spec: 1 do do)
          (spec: 1 begin0 begin0)
          (spec: 1 and-let* and-let*)
          (spec: 1 do-while do-while)
          (spec: 1 rec rec)
          (spec: 1 case case)
          (spec: 1 defvalues defvalues)
          (spec: 1 ~case-dispatch-bsearch ~case-dispatch-bsearch)
          (spec: 1 delay delay)
          (spec: 1 ~case ~case)
          (spec: 1 alet* alet*)
          (spec: 1 <...> <...>)
          (spec: 1 cut cut)
          (spec: 1 @list @list)
          (spec: 1 defrules defrules)
          (spec: 1 let*-values let*-values)
          (spec: 1 defalias defalias)
          (spec: 1 let* let*)
          (spec: 1 cond cond)
          (spec: 1 ~let ~let)
          (spec: 1 letrec* letrec*)
          (spec: 1 syntax-error syntax-error)
          (spec: 1 letrec letrec)
          (spec: 1 unless unless)
          (spec: 1 defsyntax% defsyntax%)
          (spec: 1 defrule defrule)
          (spec: 1 define-rules define-rules)
          (spec: 1 and and)
          (spec: 1 or or)
          (spec: 1 when when)
          (spec: 1 define define)
          (spec: 1 string-ref-set! string-ref-set!)
          (spec: 1 s32vector-ref-set! s32vector-ref-set!)
          (spec: 1 cdr-set! cdr-set!)
          (spec: 1 u8vector-ref-set! u8vector-ref-set!)
          (spec: 1 f32vector-ref-set! f32vector-ref-set!)
          (spec: 1 s8vector-ref-set! s8vector-ref-set!)
          (spec: 1 box-set! box-set!)
          (spec: 1 s64vector-ref-set! s64vector-ref-set!)
          (spec: 1 u16vector-ref-set! u16vector-ref-set!)
          (spec: 1 random-bytes random-bytes)
          (spec: 1 vector-ref-set! vector-ref-set!)
          (spec: 1 f64vector-ref-set! f64vector-ref-set!)
          (spec: 1 random-source-make-bytes random-source-make-bytes)
          (spec: 1 s16vector-ref-set! s16vector-ref-set!)
          (spec: 1 call/parameters call/parameters)
          (spec: 1 u32vector-ref-set! u32vector-ref-set!)
          (spec: 1 car-set! car-set!)
          (spec: 1 u64vector-ref-set! u64vector-ref-set!)
          (spec: 1 call/values call/values)
          (spec: 1 make-instance make-instance)
          (spec: 1 symblic-hash symblic-hash)
          (spec: 1 string-port? string-port?)
          (spec: 1 thread-local-ref thread-local-ref)
          (spec: 1 class-type-field-count class-type-field-count)
          (spec: 1 read-syntax read-syntax)
          (spec: 1 error-object? error-object?)
          (spec: 1 object-port::t object-port::t)
          (spec: 1 hash-keys hash-keys)
          (spec: 1 make-class-type make-class-type)
          (spec: 1 add-load-path! add-load-path!)
          (spec: 1 procedure-hash procedure-hash)
          (spec: 1 u8vector-port::t u8vector-port::t)
          (spec: 1 values->list values->list)
          (spec: 1 string-rindex string-rindex)
          (spec: 1 make-symbolic-table make-symbolic-table)
          (spec: 1 eof::t eof::t)
          (spec: 1 error-message error-message)
          (spec: 1 class-type-name class-type-name)
          (spec: 1 &class-type-properties &class-type-properties)
          (spec: 1 class-type-system? class-type-system?)
          (spec: 1 atom::t atom::t)
          (spec: 1 return::t return::t)
          (spec: 1 true? true?)
          (spec: 1 &interface-instance-object &interface-instance-object)
          (spec: 1 make-hash-table make-hash-table)
          (spec: 1 string-port::t string-port::t)
          (spec: 1 plist->hash-table plist->hash-table)
          (spec: 1 checked-method-ref checked-method-ref)
          (spec: 1 hash-values hash-values)
          (spec: 1 thread-local-get thread-local-get)
          (spec: 1 symbol->keyword symbol->keyword)
          (spec: 1 f64vector::t f64vector::t)
          (spec: 1 object-fill! object-fill!)
          (spec: 1 flonum::t flonum::t)
          (spec: 1 with-exception-stack-trace with-exception-stack-trace)
          (spec: 1 spawn spawn)
          (spec: 1 immediate::t immediate::t)
          (spec: 1 udp-port::t udp-port::t)
          (spec: 1 interface-cast-error? interface-cast-error?)
          (spec: 1 call-with-parameters call-with-parameters)
          (spec: 1 string-split string-split)
          (spec: 1 gerbil-path gerbil-path)
          (spec: 1 eof-object eof-object)
          (spec: 1 values::t values::t)
          (spec: 1 event-queue-port::t event-queue-port::t)
          (spec: 1 remf remf)
          (spec: 1 class::t class::t)
          (spec: 1 fx1- fx1-)
          (spec: 1 bind-method! bind-method!)
          (spec: 1 make-promise make-promise)
          (spec: 1 try-cast try-cast)
          (spec: 1 make-keyword make-keyword)
          (spec: 1 hash-merge hash-merge)
          (spec: 1 interned-symbol? interned-symbol?)
          (spec: 1 class->list class->list)
          (spec: 1 with-dynamic-lock with-dynamic-lock)
          (spec: 1 aget aget)
          (spec: 1 substruct? substruct?)
          (spec: 1 f32vector::t f32vector::t)
          (spec: 1 fixnum::t fixnum::t)
          (spec: 1 actor-thread? actor-thread?)
          (spec: 1 create-directory* create-directory*)
          (spec: 1 slot-ref slot-ref)
          (spec: 1 build-manifest/layer build-manifest/layer)
          (spec: 1 integer::t integer::t)
          (spec: 1 values-ref values-ref)
          (spec: 1 u8vector::t u8vector::t)
          (spec: 1 processor::t processor::t)
          (spec: 1 &class-type-slot-table &class-type-slot-table)
          (spec: 1 class-type-precedence-list class-type-precedence-list)
          (spec: 1 class-type? class-type?)
          (spec: 1 object-type object-type)
          (spec: 1 fx1+ fx1+)
          (spec: 1 bind-specializer! bind-specializer!)
          (spec: 1 pair::t pair::t)
          (spec: 1 error? error?)
          (spec: 1 cast cast)
          (spec: 1 make-hash-table-eqv make-hash-table-eqv)
          (spec:
           1
           raise-contract-violation-error
           raise-contract-violation-error)
          (spec: 1 plist->hash-table-eq plist->hash-table-eq)
          (spec: 1 &class-type-constructor &class-type-constructor)
          (spec: 1 class-type-fields class-type-fields)
          (spec: 1 address-info::t address-info::t)
          (spec: 1 mutex::t mutex::t)
          (spec: 1 list->hash-table list->hash-table)
          (spec: 1 hash->list hash->list)
          (spec: 1 cpxnum::t cpxnum::t)
          (spec: 1 hash-map hash-map)
          (spec: 1 build-manifest/head build-manifest/head)
          (spec: 1 gerbil-runtime-smp? gerbil-runtime-smp?)
          (spec: 1 cons* cons*)
          (spec: 1 fx<=0? fx<=0?)
          (spec: 1 procedure::t procedure::t)
          (spec: 1 vector-port::t vector-port::t)
          (spec: 1 interface-descriptor-methods interface-descriptor-methods)
          (spec: 1 read-u8vector read-u8vector)
          (spec: 1 unbound-key-error? unbound-key-error?)
          (spec: 1 remove1 remove1)
          (spec: 1 object-port? object-port?)
          (spec: 1 hash-put! hash-put!)
          (spec: 1 hvector? hvector?)
          (spec: 1 make-hash-table-eq make-hash-table-eq)
          (spec: 1 syntax-error? syntax-error?)
          (spec: 1 displayln displayln)
          (spec: 1 string->bytes string->bytes)
          (spec: 1 class-instance? class-instance?)
          (spec: 1 make-AST make-AST)
          (spec: 1 AST-e AST-e)
          (spec: 1 foldl foldl)
          (spec: 1 read-syntax-from-file read-syntax-from-file)
          (spec: 1 new-instance new-instance)
          (spec: 1 s16vector::t s16vector::t)
          (spec: 1 condvar::t condvar::t)
          (spec: 1 false::t false::t)
          (spec: 1 immediate? immediate?)
          (spec: 1 udp-port? udp-port?)
          (spec: 1 fx<0? fx<0?)
          (spec: 1 character-port::t character-port::t)
          (spec: 1 event-queue-port? event-queue-port?)
          (spec: 1 plist->hash-table-immediate plist->hash-table-immediate)
          (spec: 1 make-syntax-error make-syntax-error)
          (spec: 1 class-type-properties class-type-properties)
          (spec: 1 &class-type-slot-vector &class-type-slot-vector)
          (spec: 1 set-load-path! set-load-path!)
          (spec: 1 object? object?)
          (spec: 1 hash-merge! hash-merge!)
          (spec: 1 pget pget)
          (spec: 1 hvector::t hvector::t)
          (spec: 1 make-hash-table-string make-hash-table-string)
          (spec: 1 thread-local-set! thread-local-set!)
          (spec: 1 reload-module! reload-module!)
          (spec: 1 with-unwind-protect with-unwind-protect)
          (spec: 1 class-instance-init! class-instance-init!)
          (spec: 1 class-type-final? class-type-final?)
          (spec: 1 &class-type-fields &class-type-fields)
          (spec: 1 symbol::t symbol::t)
          (spec: 1 t::t t::t)
          (spec: 1 make-class-predicate make-class-predicate)
          (spec: 1 1- 1-)
          (spec: 1 file-info::t file-info::t)
          (spec: 1 with-exception-catcher with-exception-catcher)
          (spec: 1 gerbil-system gerbil-system)
          (spec: 1 promise::t promise::t)
          (spec: 1 char::t char::t)
          (spec: 1 vector::t vector::t)
          (spec: 1 interface-descriptor-type interface-descriptor-type)
          (spec: 1 raise-unbound-key-error raise-unbound-key-error)
          (spec: 1 is-hash-table? is-hash-table?)
          (spec: 1 list->hash-table-eq list->hash-table-eq)
          (spec: 1 plist->hash-table-eqv plist->hash-table-eqv)
          (spec: 1 fx>0? fx>0?)
          (spec: 1 object::t object::t)
          (spec: 1 class-type-sealed? class-type-sealed?)
          (spec: 1 thread::t thread::t)
          (spec: 1 dssl-key-object? dssl-key-object?)
          (spec: 1 make-hash-table-immediate make-hash-table-immediate)
          (spec: 1 hash-clear! hash-clear!)
          (spec: 1 raw-device-port::t raw-device-port::t)
          (spec: 1 spawn/name spawn/name)
          (spec: 1 device-port? device-port?)
          (spec: 1 with-lock with-lock)
          (spec: 1 AST? AST?)
          (spec: 1 hash->plist hash->plist)
          (spec: 1 s64vector::t s64vector::t)
          (spec: 1 1+ 1+)
          (spec: 1 remq remq)
          (spec: 1 AST-source AST-source)
          (spec: 1 plist->hash-table-symbolic plist->hash-table-symbolic)
          (spec: 1 gerbil-load-expander! gerbil-load-expander!)
          (spec: 1 vector-port? vector-port?)
          (spec: 1 absent-value absent-value)
          (spec: 1 class-of class-of)
          (spec: 1 fx=0? fx=0?)
          (spec: 1 hash-ref hash-ref)
          (spec: 1 &class-type-super &class-type-super)
          (spec: 1 class-type-seal! class-type-seal!)
          (spec: 1 spawn/group spawn/group)
          (spec: 1 &class-type-flags &class-type-flags)
          (spec: 1 ratnum::t ratnum::t)
          (spec: 1 filter-map filter-map)
          (spec: 1 device-port::t device-port::t)
          (spec: 1 list->hash-table-immediate list->hash-table-immediate)
          (spec: 1 struct->list struct->list)
          (spec: 1 next-method next-method)
          (spec: 1 make-class-slot-mutator make-class-slot-mutator)
          (spec: 1 slot-set! slot-set!)
          (spec: 1 agetq agetq)
          (spec: 1 s32vector::t s32vector::t)
          (spec: 1 gerbil-system-version-string gerbil-system-version-string)
          (spec: 1 vm::t vm::t)
          (spec: 1 character-port? character-port?)
          (spec: 1 absent-obj absent-obj)
          (spec: 1 unchecked-slot-ref unchecked-slot-ref)
          (spec: 1 class-type-slot-table class-type-slot-table)
          (spec: 1 byte-port::t byte-port::t)
          (spec: 1 plist->hash-table-string plist->hash-table-string)
          (spec: 1 fxshift fxshift)
          (spec: 1 hash-remove! hash-remove!)
          (spec: 1 hash-find hash-find)
          (spec: 1 direct-method-ref direct-method-ref)
          (spec: 1 make-hash-table-symbolic make-hash-table-symbolic)
          (spec: 1 dssl-optional-object? dssl-optional-object?)
          (spec: 1 string-hash string-hash)
          (spec: 1 replx replx)
          (spec: 1 class-type-flags class-type-flags)
          (spec: 1 list->hash-table-eqv list->hash-table-eqv)
          (spec: 1 file-newer? file-newer?)
          (spec: 1 foldr foldr)
          (spec: 1 agetv agetv)
          (spec: 1 as-string as-string)
          (spec: 1 make-class-slot-accessor make-class-slot-accessor)
          (spec: 1 constructor-init! constructor-init!)
          (spec: 1 string::t string::t)
          (spec: 1 table::t table::t)
          (spec: 1 false false)
          (spec: 1 gerbil-system-manifest gerbil-system-manifest)
          (spec: 1 eqv-hash eqv-hash)
          (spec: 1 time::t time::t)
          (spec: 1 satisfies? satisfies?)
          (spec: 1 class-type-slot-list class-type-slot-list)
          (spec: 1 writenv? writenv?)
          (spec: 1 hash-copy hash-copy)
          (spec: 1 keyword->symbol keyword->symbol)
          (spec: 1 fx>=0? fx>=0?)
          (spec: 1 boolean::t boolean::t)
          (spec: 1 with-exception-handler with-exception-handler)
          (spec: 1 direct-instance? direct-instance?)
          (spec: 1 dssl-object? dssl-object?)
          (spec: 1 string-empty? string-empty?)
          (spec:
           1
           make-class-slot-unchecked-mutator
           make-class-slot-unchecked-mutator)
          (spec: 1 &class-type-id &class-type-id)
          (spec: 1 raw-device-port? raw-device-port?)
          (spec: 1 symbolic-table-ref symbolic-table-ref)
          (spec: 1 HashTableLock::interface HashTableLock::interface)
          (spec: 1 tcp-server-port::t tcp-server-port::t)
          (spec: 1 nonnegative-fixnum? nonnegative-fixnum?)
          (spec: 1 s8vector::t s8vector::t)
          (spec: 1 display-exception display-exception)
          (spec: 1 list->hash-table-symbolic list->hash-table-symbolic)
          (spec: 1 bytes->string bytes->string)
          (spec: 1 checked-bound-method-ref checked-bound-method-ref)
          (spec: 1 void::t void::t)
          (spec: 1 struct-instance-init! struct-instance-init!)
          (spec: 1 current-thread-group current-thread-group)
          (spec: 1 max-char-code max-char-code)
          (spec: 1 class-type-slot-vector class-type-slot-vector)
          (spec: 1 immediate-hash immediate-hash)
          (spec: 1 pgetq pgetq)
          (spec: 1 directory-port? directory-port?)
          (spec: 1 make-object make-object)
          (spec:
           1
           make-class-slot-unchecked-accessor
           make-class-slot-unchecked-accessor)
          (spec: 1 readenv? readenv?)
          (spec: 1 class-type-id class-type-id)
          (spec: 1 list->hash-table-string list->hash-table-string)
          (spec: 1 symbolic-table-delete! symbolic-table-delete!)
          (spec: 1 special? special?)
          (spec: 1 dump-stack-trace! dump-stack-trace!)
          (spec: 1 continuation::t continuation::t)
          (spec: 1 c4-linearize c4-linearize)
          (spec: 1 unchecked-slot-set! unchecked-slot-set!)
          (spec: 1 gerbil-version-string gerbil-version-string)
          (spec: 1 struct-copy struct-copy)
          (spec: 1 vm? vm?)
          (spec: 1 interface-descriptor? interface-descriptor?)
          (spec: 1 port::t port::t)
          (spec: 1 bignum::t bignum::t)
          (spec: 1 pgetv pgetv)
          (spec: 1 box::t box::t)
          (spec: 1 directory-port::t directory-port::t)
          (spec: 1 dssl-rest-object? dssl-rest-object?)
          (spec: 1 seal-class! seal-class!)
          (spec: 1 keyword-rest keyword-rest)
          (spec: 1 readenv::t readenv::t)
          (spec: 1 raise raise)
          (spec: 1 special::t special::t)
          (spec: 1 HashTableLock::t HashTableLock::t)
          (spec: 1 hash-for-each hash-for-each)
          (spec: 1 load-module load-module)
          (spec:
           1
           datum-parsing-exception-filepos
           datum-parsing-exception-filepos)
          (spec: 1 gerbil-greeting gerbil-greeting)
          (spec: 1 memf memf)
          (spec: 1 error error)
          (spec: 1 class-type-struct? class-type-struct?)
          (spec: 1 foreign::t foreign::t)
          (spec: 1 bound-method-ref bound-method-ref)
          (spec: 1 u16vector::t u16vector::t)
          (spec: 1 display* display*)
          (spec: 1 exception? exception?)
          (spec: 1 hash-update! hash-update!)
          (spec: 1 write-u8vector write-u8vector)
          (spec: 1 keyword-dispatch keyword-dispatch)
          (spec: 1 class-type-metaclass? class-type-metaclass?)
          (spec: 1 symbolic-table-set! symbolic-table-set!)
          (spec: 1 list::t list::t)
          (spec: 1 null::t null::t)
          (spec: 1 assget assget)
          (spec: 1 tcp-server-port? tcp-server-port?)
          (spec: 1 hash-fold hash-fold)
          (spec: 1 source-location-path source-location-path)
          (spec:
           1
           unhandled-actor-exception-hook-set!
           unhandled-actor-exception-hook-set!)
          (spec: 1 void? void?)
          (spec: 1 make-symbol make-symbol)
          (spec: 1 struct-instance? struct-instance?)
          (spec: 1 subclass? subclass?)
          (spec: 1 dump-stack-trace? dump-stack-trace?)
          (spec: 1 readtable::t readtable::t)
          (spec: 1 interface-instance-object interface-instance-object)
          (spec: 1 ormap ormap)
          (spec: 1 hash-table? hash-table?)
          (spec: 1 build-manifest build-manifest)
          (spec: 1 string-index string-index)
          (spec: 1 &class-type-name &class-type-name)
          (spec: 1 symbolic? symbolic?)
          (spec: 1 hash-key? hash-key?)
          (spec: 1 find-method find-method)
          (spec: 1 thread-local-delete! thread-local-delete!)
          (spec: 1 socket-info::t socket-info::t)
          (spec: 1 weak? weak?)
          (spec: 1 gerbil-home gerbil-home)
          (spec: 1 interface-instance? interface-instance?)
          (spec: 1 substring->bytes substring->bytes)
          (spec: 1 error-irritants error-irritants)
          (spec: 1 true::t true::t)
          (spec: 1 u64vector::t u64vector::t)
          (spec: 1 string-join string-join)
          (spec: 1 display-build-manifest display-build-manifest)
          (spec: 1 keyword::t keyword::t)
          (spec: 1 class-type-constructor class-type-constructor)
          (spec: 1 load-path load-path)
          (spec: 1 symbolic::t symbolic::t)
          (spec: 1 hash-get hash-get)
          (spec: 1 find find)
          (spec: 1 thread-group::t thread-group::t)
          (spec: 1 sequence? sequence?)
          (spec: 1 byte-port? byte-port?)
          (spec: 1 source-location? source-location?)
          (spec: 1 build-manifest-string build-manifest-string)
          (spec: 1 call-next-method call-next-method)
          (spec: 1 gerbil-greeting-set! gerbil-greeting-set!)
          (spec: 1 weak::t weak::t)
          (spec: 1 interface-instance::t interface-instance::t)
          (spec: 1 class-type-methods class-type-methods)
          (spec: 1 &class-type-precedence-list &class-type-precedence-list)
          (spec: 1 class-type-super class-type-super)
          (spec: 1 assgetv assgetv)
          (spec: 1 true true)
          (spec: 1 immediate-instance-of? immediate-instance-of?)
          (spec: 1 real::t real::t)
          (spec: 1 u32vector::t u32vector::t)
          (spec: 1 frame::t frame::t)
          (spec: 1 display-as-string display-as-string)
          (spec: 1 with-catch with-catch)
          (spec: 1 make-interface-descriptor make-interface-descriptor)
          (spec: 1 writeenv::t writeenv::t)
          (spec: 1 HashTable::t HashTable::t)
          (spec: 1 andmap andmap)
          (spec: 1 remv remv)
          (spec: 1 number::t number::t)
          (spec: 1 sequence::t sequence::t)
          (spec: 1 hash-length hash-length)
          (spec: 1 build-manifest-set! build-manifest-set!)
          (spec: 1 u8vector-port? u8vector-port?)
          (spec: 1 call-method call-method)
          (spec: 1 interned-keyword? interned-keyword?)
          (spec: 1 method-ref method-ref)
          (spec: 1 eq-hash eq-hash)
          (spec: 1 values-count values-count)
          (spec: 1 error-trace error-trace)
          (spec: 1 source-location-path? source-location-path?)
          (spec: 1 class-type=? class-type=?)
          (spec: 1 assgetq assgetq)
          (spec: 1 fx/ fx/)
          (spec: 1 HashTable::interface HashTable::interface)
          (spec: 1 write-file-string-list write-file-string-list)
          (spec: 1 keyword->string keyword->string)
          (spec: 1 open-event-queue open-event-queue)
          (spec:
           1
           repl-result-history-max-length-set!
           repl-result-history-max-length-set!)
          (spec: 1 user-info-gid user-info-gid)
          (spec:
           1
           cfun-conversion-exception-procedure
           cfun-conversion-exception-procedure)
          (spec: 1 open-string open-string)
          (spec: 1 fold fold)
          (spec: 1 take take)
          (spec: 1 uninterned-keyword? uninterned-keyword?)
          (spec: 1 bitwise-for-each bitwise-for-each)
          (spec: 1 module-search-order-add! module-search-order-add!)
          (spec: 1 copy-bit-field copy-bit-field)
          (spec: 1 file-attributes file-attributes)
          (spec: 1 random-real random-real)
          (spec: 1 u8vector-set! u8vector-set!)
          (spec: 1 mutex? mutex?)
          (spec: 1 file-info-last-access-time file-info-last-access-time)
          (spec: 1 range-exception-arguments range-exception-arguments)
          (spec: 1 thread-base-priority thread-base-priority)
          (spec: 1 char-set-intersection! char-set-intersection!)
          (spec: 1 partition partition)
          (spec: 1 fxnegative? fxnegative?)
          (spec: 1 s64vector-set s64vector-set)
          (spec: 1 fxwraplogical-shift-right fxwraplogical-shift-right)
          (spec: 1 flacosh flacosh)
          (spec: 1 tenth tenth)
          (spec: 1 readtable-sharing-allowed? readtable-sharing-allowed?)
          (spec:
           1
           number-of-arguments-limit-exception?
           number-of-arguments-limit-exception?)
          (spec: 1 flhypot flhypot)
          (spec: 1 s32vector-set! s32vector-set!)
          (spec: 1 vector-swap! vector-swap!)
          (spec: 1 u32vector-copy! u32vector-copy!)
          (spec: 1 f32vector-length f32vector-length)
          (spec: 1 host-info? host-info?)
          (spec: 1 make-u8vector make-u8vector)
          (spec: 1 subf32vector-fill! subf32vector-fill!)
          (spec: 1 u64vector-copy u64vector-copy)
          (spec: 1 f64vector-length f64vector-length)
          (spec: 1 bit-field-replace-same bit-field-replace-same)
          (spec: 1 s8vector-ref s8vector-ref)
          (spec: 1 subs8vector-move! subs8vector-move!)
          (spec: 1 thread-state thread-state)
          (spec: 1 with-output-to-port with-output-to-port)
          (spec: 1 os-exception-message os-exception-message)
          (spec: 1 s16vector-swap! s16vector-swap!)
          (spec: 1 thread-state-waiting-timeout thread-state-waiting-timeout)
          (spec: 1 char-set-count char-set-count)
          (spec: 1 fxandc2 fxandc2)
          (spec: 1 list->bits list->bits)
          (spec: 1 set-box! set-box!)
          (spec:
           1
           wrong-number-of-values-exception-code
           wrong-number-of-values-exception-code)
          (spec: 1 datum-parsing-exception-kind datum-parsing-exception-kind)
          (spec: 1 file-number-of-links file-number-of-links)
          (spec: 1 network-info-number network-info-number)
          (spec:
           1
           readtable-case-conversion?-set
           readtable-case-conversion?-set)
          (spec:
           1
           noncontinuable-exception-reason
           noncontinuable-exception-reason)
          (spec: 1 random-source-make-integers random-source-make-integers)
          (spec: 1 any-bit-set? any-bit-set?)
          (spec: 1 write-file-string write-file-string)
          (spec: 1 main main)
          (spec: 1 u16vector-fill! u16vector-fill!)
          (spec: 1 circular-list? circular-list?)
          (spec:
           1
           expression-parsing-exception-kind
           expression-parsing-exception-kind)
          (spec: 1 print print)
          (spec: 1 make-random-source make-random-source)
          (spec: 1 string-shrink! string-shrink!)
          (spec: 1 udp-write-subu8vector udp-write-subu8vector)
          (spec: 1 divide-by-zero-exception? divide-by-zero-exception?)
          (spec: 1 flonum? flonum?)
          (spec:
           1
           keyword-expected-exception-procedure
           keyword-expected-exception-procedure)
          (spec: 1 open-dummy open-dummy)
          (spec:
           1
           cfun-conversion-exception-message
           cfun-conversion-exception-message)
          (spec: 1 open-process open-process)
          (spec: 1 flzero? flzero?)
          (spec: 1 last-pair last-pair)
          (spec: 1 readtable-start-syntax-set readtable-start-syntax-set)
          (spec: 1 thread-join! thread-join!)
          (spec: 1 bitwise-fold bitwise-fold)
          (spec: 1 cosh cosh)
          (spec: 1 fifth fifth)
          (spec: 1 sinh sinh)
          (spec: 1 u8vector-set u8vector-set)
          (spec: 1 user-info user-info)
          (spec: 1 current-exception-handler current-exception-handler)
          (spec: 1 file-info-inode file-info-inode)
          (spec: 1 mutex-unlock! mutex-unlock!)
          (spec: 1 fxodd? fxodd?)
          (spec: 1 char-set-size char-set-size)
          (spec: 1 path-directory path-directory)
          (spec: 1 s64vector-ref s64vector-ref)
          (spec: 1 fxxor fxxor)
          (spec: 1 acosh acosh)
          (spec: 1 flacos flacos)
          (spec:
           1
           invalid-hash-number-exception-procedure
           invalid-hash-number-exception-procedure)
          (spec:
           1
           terminated-thread-exception-procedure
           terminated-thread-exception-procedure)
          (spec:
           1
           number-of-arguments-limit-exception-procedure
           number-of-arguments-limit-exception-procedure)
          (spec: 1 flfloor flfloor)
          (spec: 1 s32vector-set s32vector-set)
          (spec: 1 step-level-set! step-level-set!)
          (spec: 1 u32vector-copy u32vector-copy)
          (spec:
           1
           wrong-number-of-values-exception?
           wrong-number-of-values-exception?)
          (spec: 1 f32vector-fill! f32vector-fill!)
          (spec: 1 concatenate concatenate)
          (spec: 1 make-u64vector make-u64vector)
          (spec: 1 substring-move! substring-move!)
          (spec: 1 u64vector-concatenate u64vector-concatenate)
          (spec: 1 f64vector-fill! f64vector-fill!)
          (spec: 1 conjugate conjugate)
          (spec: 1 bit-field-replace bit-field-replace)
          (spec: 1 thread-start! thread-start!)
          (spec: 1 s16vector-shrink! s16vector-shrink!)
          (spec: 1 length-mismatch-exception? length-mismatch-exception?)
          (spec: 1 thread-state-waiting-for thread-state-waiting-for)
          (spec: 1 fxarithmetic-shift-right fxarithmetic-shift-right)
          (spec: 1 char-set-delete char-set-delete)
          (spec: 1 subf64vector-fill! subf64vector-fill!)
          (spec: 1 file-size file-size)
          (spec: 1 readtable-case-conversion? readtable-case-conversion?)
          (spec:
           1
           unbound-serial-number-exception?
           unbound-serial-number-exception?)
          (spec: 1 fixnum-overflow-exception? fixnum-overflow-exception?)
          (spec: 1 random-source-make-f64vectors random-source-make-f64vectors)
          (spec: 1 with-output-to-u8vector with-output-to-u8vector)
          (spec: 1 any any)
          (spec:
           1
           mailbox-receive-timeout-exception?
           mailbox-receive-timeout-exception?)
          (spec: 1 port-settings-set! port-settings-set!)
          (spec: 1 script-file script-file)
          (spec: 1 string-suffix-length-ci string-suffix-length-ci)
          (spec: 1 u16vector-copy! u16vector-copy!)
          (spec:
           1
           divide-by-zero-exception-procedure
           divide-by-zero-exception-procedure)
          (spec:
           1
           keyword-expected-exception-arguments
           keyword-expected-exception-arguments)
          (spec: 1 thread-interrupt! thread-interrupt!)
          (spec: 1 user-info-name user-info-name)
          (spec: 1 readtable-start-syntax readtable-start-syntax)
          (spec: 1 open-tcp-client open-tcp-client)
          (spec: 1 u8vector->object u8vector->object)
          (spec: 1 bitwise-ior bitwise-ior)
          (spec: 1 file-device file-device)
          (spec: 1 module-whitelist-add! module-whitelist-add!)
          (spec: 1 range-exception? range-exception?)
          (spec: 1 u8vector-swap! u8vector-swap!)
          (spec:
           1
           file-info-last-modification-time
           file-info-last-modification-time)
          (spec: 1 replace-bit-field replace-bit-field)
          (spec: 1 s32vector-swap! s32vector-swap!)
          (spec: 1 vector-unfold-right vector-unfold-right)
          (spec: 1 fxnot fxnot)
          (spec: 1 char-set-ref char-set-ref)
          (spec: 1 s64vector-shrink! s64vector-shrink!)
          (spec: 1 address-info-family address-info-family)
          (spec: 1 fxwrapsquare fxwrapsquare)
          (spec: 1 take-right take-right)
          (spec: 1 flasin flasin)
          (spec:
           1
           invalid-hash-number-exception-arguments
           invalid-hash-number-exception-arguments)
          (spec:
           1
           not-in-compilation-context-exception-procedure
           not-in-compilation-context-exception-procedure)
          (spec:
           1
           terminated-thread-exception-arguments
           terminated-thread-exception-arguments)
          (spec: 1 flinfinite? flinfinite?)
          (spec: 1 directory-files directory-files)
          (spec: 1 step step)
          (spec: 1 u32vector-length u32vector-length)
          (spec:
           1
           unterminated-process-exception-procedure
           unterminated-process-exception-procedure)
          (spec:
           1
           wrong-number-of-values-exception-vals
           wrong-number-of-values-exception-vals)
          (spec: 1 substring-fill! substring-fill!)
          (spec: 1 f32vector-ref f32vector-ref)
          (spec: 1 proper-list? proper-list?)
          (spec: 1 u64vector-fill! u64vector-fill!)
          (spec: 1 bit-field-rotate bit-field-rotate)
          (spec: 1 f64vector-ref f64vector-ref)
          (spec:
           1
           thread-state-abnormally-terminated-reason
           thread-state-abnormally-terminated-reason)
          (spec: 1 list->char-set! list->char-set!)
          (spec: 1 os-exception? os-exception?)
          (spec: 1 thread-suspend! thread-suspend!)
          (spec: 1 vector-fold-right vector-fold-right)
          (spec: 1 fxarithmetic-shift-left fxarithmetic-shift-left)
          (spec: 1 char-set-cursor-next char-set-cursor-next)
          (spec: 1 subf64vector subf64vector)
          (spec:
           1
           datum-parsing-exception-readenv
           datum-parsing-exception-readenv)
          (spec: 1 readtable-comment-handler-set readtable-comment-handler-set)
          (spec: 1 table->list table->list)
          (spec:
           1
           unbound-serial-number-exception-procedure
           unbound-serial-number-exception-procedure)
          (spec:
           1
           fixnum-overflow-exception-procedure
           fixnum-overflow-exception-procedure)
          (spec:
           1
           inactive-thread-exception-arguments
           inactive-thread-exception-arguments)
          (spec: 1 type-exception-arguments type-exception-arguments)
          (spec: 1 s8vector-set! s8vector-set!)
          (spec: 1 with-output-to-string with-output-to-string)
          (spec: 1 string-suffix-length string-suffix-length)
          (spec: 1 seconds->time seconds->time)
          (spec: 1 write-file-u8vector write-file-u8vector)
          (spec: 1 input-port-byte-position input-port-byte-position)
          (spec:
           1
           expression-parsing-exception-source
           expression-parsing-exception-source)
          (spec:
           1
           thread-group->thread-group-vector
           thread-group->thread-group-vector)
          (spec: 1 open-file open-file)
          (spec: 1 thread-mailbox-next thread-mailbox-next)
          (spec: 1 user-info-home user-info-home)
          (spec: 1 cfun-conversion-exception? cfun-conversion-exception?)
          (spec: 1 fold-right fold-right)
          (spec: 1 open-string-pipe open-string-pipe)
          (spec: 1 random-source-make-u8vectors random-source-make-u8vectors)
          (spec: 1 u8vector->list u8vector->list)
          (spec: 1 file-creation-time file-creation-time)
          (spec: 1 bitwise-if bitwise-if)
          (spec: 1 module-search-order-reset! module-search-order-reset!)
          (spec: 1 u8vector-shrink! u8vector-shrink!)
          (spec: 1 file-info-last-change-time file-info-last-change-time)
          (spec: 1 keyword-hash keyword-hash)
          (spec: 1 void void)
          (spec: 1 s32vector-shrink! s32vector-shrink!)
          (spec: 1 char-set-unfold! char-set-unfold!)
          (spec: 1 fxorc2 fxorc2)
          (spec: 1 will-testator will-testator)
          (spec: 1 s64vector-set! s64vector-set!)
          (spec:
           1
           readtable-write-cdr-read-macros?-set
           readtable-write-cdr-read-macros?-set)
          (spec: 1 uninterned-symbol? uninterned-symbol?)
          (spec:
           1
           not-in-compilation-context-exception-arguments
           not-in-compilation-context-exception-arguments)
          (spec: 1 remove! remove!)
          (spec:
           1
           unterminated-process-exception-arguments
           unterminated-process-exception-arguments)
          (spec: 1 call/cc call/cc)
          (spec: 1 flilogb flilogb)
          (spec: 1 path-expand path-expand)
          (spec: 1 subs16vector subs16vector)
          (spec: 1 u32vector-fill! u32vector-fill!)
          (spec:
           1
           wrong-processor-c-return-exception?
           wrong-processor-c-return-exception?)
          (spec: 1 subu16vector-fill! subu16vector-fill!)
          (spec: 1 u64vector-copy! u64vector-copy!)
          (spec: 1 cons* cons*)
          (spec: 1 bit-field-reverse bit-field-reverse)
          (spec: 1 vector->bits vector->bits)
          (spec: 1 list->char-set list->char-set)
          (spec: 1 fx* fx*)
          (spec: 1 thread-state-waiting? thread-state-waiting?)
          (spec: 1 s16vector? s16vector?)
          (spec: 1 char-set-diff+intersection char-set-diff+intersection)
          (spec: 1 fxbit-set? fxbit-set?)
          (spec: 1 unbound-global-exception-rte unbound-global-exception-rte)
          (spec:
           1
           nonempty-input-port-character-buffer-exception-procedure
           nonempty-input-port-character-buffer-exception-procedure)
          (spec:
           1
           datum-parsing-exception-parameters
           datum-parsing-exception-parameters)
          (spec: 1 unbreak unbreak)
          (spec: 1 readtable-comment-handler readtable-comment-handler)
          (spec: 1 fl* fl*)
          (spec: 1 type-exception-arg-id type-exception-arg-id)
          (spec: 1 s8vector-set s8vector-set)
          (spec: 1 any-bits-set? any-bits-set?)
          (spec: 1 get-output-u8vector get-output-u8vector)
          (spec: 1 string-swap! string-swap!)
          (spec: 1 second second)
          (spec: 1 u16vector-length u16vector-length)
          (spec: 1 heap-overflow-exception? heap-overflow-exception?)
          (spec:
           1
           expression-parsing-exception-parameters
           expression-parsing-exception-parameters)
          (spec:
           1
           thread-group->thread-group-list
           thread-group->thread-group-list)
          (spec: 1 open-u8vector open-u8vector)
          (spec: 1 flpositive? flpositive?)
          (spec: 1 split-at split-at)
          (spec:
           1
           thread-mailbox-extract-and-rewind
           thread-mailbox-extract-and-rewind)
          (spec: 1 user-info-uid user-info-uid)
          (spec:
           1
           invalid-hash-number-exception?
           invalid-hash-number-exception?)
          (spec: 1 u8vector-concatenate u8vector-concatenate)
          (spec: 1 random-source-make-reals random-source-make-reals)
          (spec: 1 bitwise-nand bitwise-nand)
          (spec: 1 ucs-range->char-set ucs-range->char-set)
          (spec: 1 box box)
          (spec: 1 file-info-number-of-links file-info-number-of-links)
          (spec: 1 keyword-expected-exception? keyword-expected-exception?)
          (spec: 1 list-set list-set)
          (spec: 1 open-input-process open-input-process)
          (spec: 1 char-set-unfold char-set-unfold)
          (spec: 1 fxorc1 fxorc1)
          (spec: 1 s64vector? s64vector?)
          (spec: 1 string-ci=?-hash string-ci=?-hash)
          (spec: 1 will-execute! will-execute!)
          (spec: 1 address-info-socket-info address-info-socket-info)
          (spec: 1 fxzero? fxzero?)
          (spec:
           1
           readtable-write-cdr-read-macros?
           readtable-write-cdr-read-macros?)
          (spec: 1 tanh tanh)
          (spec:
           1
           unknown-keyword-argument-exception-arguments
           unknown-keyword-argument-exception-arguments)
          (spec: 1 flatan flatan)
          (spec: 1 terminated-thread-exception? terminated-thread-exception?)
          (spec: 1 remove remove)
          (spec: 1 car+cdr car+cdr)
          (spec: 1 untrace untrace)
          (spec: 1 subf64vector-move! subf64vector-move!)
          (spec: 1 u32vector-ref u32vector-ref)
          (spec: 1 concatenate! concatenate!)
          (spec: 1 f64vector-set! f64vector-set!)
          (spec: 1 subu16vector subu16vector)
          (spec: 1 bit-set? bit-set?)
          (spec: 1 s16vector->list s16vector->list)
          (spec: 1 list->f64vector list->f64vector)
          (spec: 1 vector-inc! vector-inc!)
          (spec: 1 thread-thread-group thread-thread-group)
          (spec: 1 char-set-delete! char-set-delete!)
          (spec: 1 f32vector-set! f32vector-set!)
          (spec: 1 fxbit-count fxbit-count)
          (spec: 1 input-port-char-position input-port-char-position)
          (spec: 1 unbound-global-exception-code unbound-global-exception-code)
          (spec: 1 file-type file-type)
          (spec: 1 integer-nth-root integer-nth-root)
          (spec:
           1
           nonempty-input-port-character-buffer-exception-arguments
           nonempty-input-port-character-buffer-exception-arguments)
          (spec: 1 readtable-eval-allowed?-set readtable-eval-allowed?-set)
          (spec: 1 table-for-each table-for-each)
          (spec: 1 module-whitelist-reset! module-whitelist-reset!)
          (spec: 1 fixnum? fixnum?)
          (spec: 1 s8vector-swap! s8vector-swap!)
          (spec: 1 type-exception-type-id type-exception-type-id)
          (spec: 1 unbox unbox)
          (spec: 1 with-output-to-vector with-output-to-vector)
          (spec: 1 append-reverse append-reverse)
          (spec: 1 make-s16vector make-s16vector)
          (spec: 1 string-suffix? string-suffix?)
          (spec: 1 u16vector-set u16vector-set)
          (spec: 1 dead-end dead-end)
          (spec: 1 thread-group->thread-vector thread-group->thread-vector)
          (spec: 1 open-tcp-server open-tcp-server)
          (spec: 1 user-info-shell user-info-shell)
          (spec: 1 thread-name thread-name)
          (spec:
           1
           not-in-compilation-context-exception?
           not-in-compilation-context-exception?)
          (spec: 1 random-source-randomize! random-source-randomize!)
          (spec: 1 inactive-thread-exception? inactive-thread-exception?)
          (spec: 1 symbol-hash symbol-hash)
          (spec: 1 bitwise-merge bitwise-merge)
          (spec: 1 current-processor current-processor)
          (spec: 1 u8vector-append u8vector-append)
          (spec: 1 u8vector? u8vector?)
          (spec: 1 file-info-mode file-info-mode)
          (spec: 1 path-normalize path-normalize)
          (spec: 1 s32vector? s32vector?)
          (spec: 1 string->char-set! string->char-set!)
          (spec: 1 char-set-union! char-set-union!)
          (spec:
           1
           permission-denied-exception-procedure
           permission-denied-exception-procedure)
          (spec: 1 s64vector-swap! s64vector-swap!)
          (spec: 1 string-concatenate string-concatenate)
          (spec: 1 with-exception-catcher with-exception-catcher)
          (spec: 1 fx- fx-)
          (spec: 1 address-info-protocol address-info-protocol)
          (spec:
           1
           readtable-write-extended-read-macros?-set
           readtable-write-extended-read-macros?-set)
          (spec: 1 tcp-client-peer-socket-info tcp-client-peer-socket-info)
          (spec: 1 flasinh flasinh)
          (spec: 1 rename-file rename-file)
          (spec:
           1
           unterminated-process-exception?
           unterminated-process-exception?)
          (spec: 1 fxquotient fxquotient)
          (spec: 1 flinteger? flinteger?)
          (spec: 1 make-will make-will)
          (spec: 1 protocol-info-aliases protocol-info-aliases)
          (spec: 1 subs16vector-move! subs16vector-move!)
          (spec: 1 f64vector-set f64vector-set)
          (spec: 1 subu32vector subu32vector)
          (spec: 1 u64vector-length u64vector-length)
          (spec: 1 getenv getenv)
          (spec: 1 bit-field-set bit-field-set)
          (spec: 1 console-port console-port)
          (spec: 1 output-port-char-position output-port-char-position)
          (spec: 1 s16vector s16vector)
          (spec: 1 fxeven? fxeven?)
          (spec: 1 char-set->list char-set->list)
          (spec: 1 eq?-hash eq?-hash)
          (spec: 1 list->f32vector list->f32vector)
          (spec:
           1
           started-thread-exception-arguments
           started-thread-exception-arguments)
          (spec:
           1
           thread-state-abnormally-terminated?
           thread-state-abnormally-terminated?)
          (spec: 1 char-set-difference char-set-difference)
          (spec: 1 f32vector-set f32vector-set)
          (spec: 1 input-port-bytes-buffered input-port-bytes-buffered)
          (spec: 1 ninth ninth)
          (spec: 1 thread-terminate! thread-terminate!)
          (spec: 1 fl+* fl+*)
          (spec: 1 unbound-global-exception? unbound-global-exception?)
          (spec: 1 readtable-eval-allowed? readtable-eval-allowed?)
          (spec: 1 integer-length integer-length)
          (spec: 1 table-copy table-copy)
          (spec: 1 uncaught-exception-arguments uncaught-exception-arguments)
          (spec:
           1
           file-exists-exception-procedure
           file-exists-exception-procedure)
          (spec: 1 cpu-time cpu-time)
          (spec: 1 make-bitwise-generator make-bitwise-generator)
          (spec: 1 pp pp)
          (spec: 1 s8vector-shrink! s8vector-shrink!)
          (spec: 1 help-browser help-browser)
          (spec: 1 append! append!)
          (spec: 1 expression-parsing-exception? expression-parsing-exception?)
          (spec: 1 make-root-thread make-root-thread)
          (spec: 1 type-exception-procedure type-exception-procedure)
          (spec: 1 u16vector-ref u16vector-ref)
          (spec: 1 datum-parsing-exception? datum-parsing-exception?)
          (spec: 1 arithmetic-shift arithmetic-shift)
          (spec: 1 keyword? keyword?)
          (spec: 1 open-input-u8vector open-input-u8vector)
          (spec: 1 thread-group->thread-list thread-group->thread-list)
          (spec: 1 write-substring write-substring)
          (spec: 1 open-udp open-udp)
          (spec: 1 thread-mailbox-rewind thread-mailbox-rewind)
          (spec: 1 user-name user-name)
          (spec: 1 flceiling flceiling)
          (spec:
           1
           random-source-pseudo-randomize!
           random-source-pseudo-randomize!)
          (spec:
           1
           inactive-thread-exception-procedure
           inactive-thread-exception-procedure)
          (spec: 1 u8vector-copy! u8vector-copy!)
          (spec: 1 file-info-size file-info-size)
          (spec: 1 bitwise-not bitwise-not)
          (spec: 1 flscalbn flscalbn)
          (spec: 1 list-sort list-sort)
          (spec: 1 path-extension path-extension)
          (spec: 1 s64vector s64vector)
          (spec: 1 link-flat link-flat)
          (spec: 1 address-info? address-info?)
          (spec: 1 char-set-union char-set-union)
          (spec: 1 string->char-set string->char-set)
          (spec:
           1
           permission-denied-exception-arguments
           permission-denied-exception-arguments)
          (spec: 1 thread? thread?)
          (spec: 1 will? will?)
          (spec: 1 fx+ fx+)
          (spec:
           1
           readtable-write-extended-read-macros?
           readtable-write-extended-read-macros?)
          (spec:
           1
           unknown-keyword-argument-exception?
           unknown-keyword-argument-exception?)
          (spec: 1 tcp-client-local-socket-info tcp-client-local-socket-info)
          (spec: 1 fllog1p fllog1p)
          (spec: 1 call-with-input-process call-with-input-process)
          (spec: 1 object->string object->string)
          (spec: 1 remq remq)
          (spec: 1 test-bit-field? test-bit-field?)
          (spec: 1 fxpositive? fxpositive?)
          (spec: 1 f32vector-swap! f32vector-swap!)
          (spec: 1 protocol-info protocol-info)
          (spec: 1 setenv setenv)
          (spec: 1 bits bits)
          (spec: 1 subs16vector-fill! subs16vector-fill!)
          (spec: 1 f64vector-swap! f64vector-swap!)
          (spec: 1 subu16vector-move! subu16vector-move!)
          (spec: 1 u16vector-shrink! u16vector-shrink!)
          (spec: 1 u32vector-set! u32vector-set!)
          (spec: 1 get-output-vector get-output-vector)
          (spec: 1 thread-priority-set! thread-priority-set!)
          (spec: 1 output-port-byte-position output-port-byte-position)
          (spec: 1 s16vector-concatenate s16vector-concatenate)
          (spec: 1 thread-priority-boost-set! thread-priority-boost-set!)
          (spec: 1 fxeqv fxeqv)
          (spec: 1 char-set char-set)
          (spec: 1 list->s32vector list->s32vector)
          (spec: 1 s32vector->list s32vector->list)
          (spec: 1 identity identity)
          (spec: 1 char-set-diff+intersection! char-set-diff+intersection!)
          (spec: 1 deadlock-exception? deadlock-exception?)
          (spec: 1 input-port-column input-port-column)
          (spec: 1 read-file-string-list read-file-string-list)
          (spec:
           1
           unbound-global-exception-variable
           unbound-global-exception-variable)
          (spec: 1 fl+ fl+)
          (spec:
           1
           nonempty-input-port-character-buffer-exception?
           nonempty-input-port-character-buffer-exception?)
          (spec:
           1
           readtable-keywords-allowed?-set
           readtable-keywords-allowed?-set)
          (spec:
           1
           file-exists-exception-arguments
           file-exists-exception-arguments)
          (spec: 1 tty-history tty-history)
          (spec: 1 asinh asinh)
          (spec: 1 help help)
          (spec: 1 extract-bit-field extract-bit-field)
          (spec: 1 make-s64vector make-s64vector)
          (spec: 1 process-pid process-pid)
          (spec: 1 drop drop)
          (spec: 1 force-output force-output)
          (spec: 1 split-at! split-at!)
          (spec: 1 open-u8vector-pipe open-u8vector-pipe)
          (spec: 1 thread-group-parent thread-group-parent)
          (spec: 1 user-info? user-info?)
          (spec: 1 flatanh flatanh)
          (spec: 1 subu64vector-fill! subu64vector-fill!)
          (spec: 1 random-source-state-ref random-source-state-ref)
          (spec: 1 u8vector-copy u8vector-copy)
          (spec: 1 file-info-owner file-info-owner)
          (spec: 1 bitwise-nor bitwise-nor)
          (spec: 1 ucs-range->char-set! ucs-range->char-set!)
          (spec: 1 flround flround)
          (spec: 1 box? box?)
          (spec: 1 fxsquare fxsquare)
          (spec: 1 path-strip-directory path-strip-directory)
          (spec: 1 thread-yield! thread-yield!)
          (spec: 1 address-info-socket-type address-info-socket-type)
          (spec: 1 gc-report-set! gc-report-set!)
          (spec: 1 string-contains-ci string-contains-ci)
          (spec: 1 char-set-adjoin char-set-adjoin)
          (spec: 1 not-pair? not-pair?)
          (spec: 1 table-merge table-merge)
          (spec:
           1
           unknown-keyword-argument-exception-procedure
           unknown-keyword-argument-exception-procedure)
          (spec: 1 fllog fllog)
          (spec:
           1
           join-timeout-exception-procedure
           join-timeout-exception-procedure)
          (spec:
           1
           display-continuation-dynamic-environment
           display-continuation-dynamic-environment)
          (spec: 1 object->serial-number object->serial-number)
          (spec: 1 tcp-client-self-socket-info tcp-client-self-socket-info)
          (spec: 1 char-set-xor! char-set-xor!)
          (spec: 1 protocol-info-number protocol-info-number)
          (spec: 1 f32vector-shrink! f32vector-shrink!)
          (spec: 1 subs32vector-fill! subs32vector-fill!)
          (spec: 1 u16vector-set! u16vector-set!)
          (spec: 1 bit-swap bit-swap)
          (spec: 1 f64vector-shrink! f64vector-shrink!)
          (spec: 1 subu32vector-move! subu32vector-move!)
          (spec: 1 u32vector-set u32vector-set)
          (spec: 1 append-reverse! append-reverse!)
          (spec: 1 output-port-line output-port-line)
          (spec: 1 fx<= fx<=)
          (spec: 1 thread-priority-boost thread-priority-boost)
          (spec: 1 s16vector-append s16vector-append)
          (spec: 1 char-set-every char-set-every)
          (spec: 1 xcons xcons)
          (spec: 1 fxif fxif)
          (spec: 1 equal?-hash equal?-hash)
          (spec: 1 list->s16vector list->s16vector)
          (spec: 1 s32vector s32vector)
          (spec: 1 condition-variable-name condition-variable-name)
          (spec: 1 started-thread-exception? started-thread-exception?)
          (spec:
           1
           input-port-characters-buffered
           input-port-characters-buffered)
          (spec: 1 filter! filter!)
          (spec: 1 read-file-string read-file-string)
          (spec: 1 thread-state-initialized? thread-state-initialized?)
          (spec: 1 fl/ fl/)
          (spec: 1 integer-sqrt integer-sqrt)
          (spec:
           1
           nonprocedure-operator-exception-arguments
           nonprocedure-operator-exception-arguments)
          (spec: 1 readtable-keywords-allowed? readtable-keywords-allowed?)
          (spec: 1 bitwise-orc2 bitwise-orc2)
          (spec:
           1
           unbound-key-exception-arguments
           unbound-key-exception-arguments)
          (spec: 1 make-condition-variable make-condition-variable)
          (spec: 1 string-prefix-ci? string-prefix-ci?)
          (spec: 1 s8vector? s8vector?)
          (spec: 1 process-times process-times)
          (spec: 1 make-s32vector make-s32vector)
          (spec: 1 serial-number->object serial-number->object)
          (spec: 1 type-exception? type-exception?)
          (spec: 1 open-output-bytevector open-output-bytevector)
          (spec: 1 flsinh flsinh)
          (spec: 1 dotted-list? dotted-list?)
          (spec: 1 foreign-address foreign-address)
          (spec: 1 eighth eighth)
          (spec: 1 open-vector-pipe open-vector-pipe)
          (spec: 1 thread-group-name thread-group-name)
          (spec: 1 call-with-input-u8vector call-with-input-u8vector)
          (spec: 1 subu64vector subu64vector)
          (spec: 1 u64vector-set u64vector-set)
          (spec: 1 break break)
          (spec: 1 file-info? file-info?)
          (spec: 1 current-readtable current-readtable)
          (spec: 1 fxremainder fxremainder)
          (spec: 1 list-tabulate list-tabulate)
          (spec: 1 s32vector-concatenate s32vector-concatenate)
          (spec: 1 string->keyword string->keyword)
          (spec: 1 permission-denied-exception? permission-denied-exception?)
          (spec: 1 s64vector-append s64vector-append)
          (spec: 1 string-contains string-contains)
          (spec: 1 char-set->string char-set->string)
          (spec: 1 flcosh flcosh)
          (spec: 1 table-length table-length)
          (spec: 1 readtable? readtable?)
          (spec: 1 uncaught-exception-reason uncaught-exception-reason)
          (spec: 1 flmin flmin)
          (spec:
           1
           display-continuation-backtrace
           display-continuation-backtrace)
          (spec:
           1
           join-timeout-exception-arguments
           join-timeout-exception-arguments)
          (spec: 1 repl-backtrace-detail-level repl-backtrace-detail-level)
          (spec: 1 char-set-xor char-set-xor)
          (spec: 1 protocol-info-name protocol-info-name)
          (spec: 1 write-subu8vector write-subu8vector)
          (spec: 1 subs32vector subs32vector)
          (spec: 1 u16vector? u16vector?)
          (spec: 1 bits->vector bits->vector)
          (spec: 1 seventh seventh)
          (spec: 1 subu32vector-fill! subu32vector-fill!)
          (spec: 1 thread-priority thread-priority)
          (spec: 1 u32vector-swap! u32vector-swap!)
          (spec: 1 output-port-column output-port-column)
          (spec: 1 fx< fx<)
          (spec:
           1
           rpc-remote-error-exception-arguments
           rpc-remote-error-exception-arguments)
          (spec: 1 thread-quantum-set! thread-quantum-set!)
          (spec: 1 char-set-difference! char-set-difference!)
          (spec: 1 err-code->string err-code->string)
          (spec: 1 fxfirst-set-bit fxfirst-set-bit)
          (spec: 1 list->s8vector list->s8vector)
          (spec: 1 s16vector-copy! s16vector-copy!)
          (spec: 1 condition-variable-broadcast! condition-variable-broadcast!)
          (spec:
           1
           started-thread-exception-procedure
           started-thread-exception-procedure)
          (spec: 1 filter filter)
          (spec:
           1
           thread-state-normally-terminated?
           thread-state-normally-terminated?)
          (spec: 1 udp-destination-set! udp-destination-set!)
          (spec: 1 vector-any vector-any)
          (spec: 1 fl- fl-)
          (spec: 1 bitwise-orc1 bitwise-orc1)
          (spec: 1 make-f64vector make-f64vector)
          (spec: 1 s8vector->list s8vector->list)
          (spec: 1 tty-history-set! tty-history-set!)
          (spec: 1 with-exception-handler with-exception-handler)
          (spec: 1 process-status process-status)
          (spec: 1 scheduler-exception-reason scheduler-exception-reason)
          (spec: 1 drop-right! drop-right!)
          (spec: 1 flsin flsin)
          (spec: 1 open-input-vector open-input-vector)
          (spec: 1 sixth sixth)
          (spec: 1 open-vector open-vector)
          (spec: 1 thread-group-specific thread-group-specific)
          (spec: 1 call-with-input-string call-with-input-string)
          (spec: 1 create-fifo create-fifo)
          (spec: 1 file-exists-exception? file-exists-exception?)
          (spec: 1 multiple-c-return-exception? multiple-c-return-exception?)
          (spec: 1 r7rs-raise-continuable r7rs-raise-continuable)
          (spec: 1 subu8vector subu8vector)
          (spec: 1 u64vector-ref u64vector-ref)
          (spec: 1 current-time current-time)
          (spec: 1 file-info-type file-info-type)
          (spec: 1 random-source? random-source?)
          (spec: 1 u8vector-fill! u8vector-fill!)
          (spec: 1 fxwrap+ fxwrap+)
          (spec:
           1
           path-strip-trailing-directory-separator
           path-strip-trailing-directory-separator)
          (spec: 1 list-sort! list-sort!)
          (spec: 1 s32vector-append s32vector-append)
          (spec: 1 address-infos address-infos)
          (spec: 1 s64vector->list s64vector->list)
          (spec: 1 top top)
          (spec: 1 flcos flcos)
          (spec:
           1
           readtable-max-unescaped-char-set
           readtable-max-unescaped-char-set)
          (spec: 1 uncaught-exception-procedure uncaught-exception-procedure)
          (spec: 1 table-ref table-ref)
          (spec: 1 display-exception display-exception)
          (spec: 1 flmax flmax)
          (spec: 1 object->u8vector object->u8vector)
          (spec: 1 real-time real-time)
          (spec: 1 f32vector? f32vector?)
          (spec: 1 condition-variable-specific condition-variable-specific)
          (spec: 1 u16vector-swap! u16vector-swap!)
          (spec: 1 f64vector? f64vector?)
          (spec: 1 bits->list bits->list)
          (spec: 1 continuation-capture continuation-capture)
          (spec: 1 subs64vector subs64vector)
          (spec: 1 u32vector-shrink! u32vector-shrink!)
          (spec: 1 fx> fx>)
          (spec: 1 char-set-any char-set-any)
          (spec: 1 output-port-readtable output-port-readtable)
          (spec: 1 thread-quantum thread-quantum)
          (spec: 1 eqv?-hash eqv?-hash)
          (spec: 1 char-set-filter! char-set-filter!)
          (spec: 1 fxlength fxlength)
          (spec: 1 list->s64vector list->s64vector)
          (spec: 1 s16vector-copy s16vector-copy)
          (spec:
           1
           thread-state-normally-terminated-result
           thread-state-normally-terminated-result)
          (spec: 1 vector-concatenate vector-concatenate)
          (spec: 1 input-port-line input-port-line)
          (spec: 1 fl<= fl<=)
          (spec:
           1
           nonprocedure-operator-exception-operator
           nonprocedure-operator-exception-operator)
          (spec: 1 read-file-u8vector read-file-u8vector)
          (spec: 1 unbound-key-exception? unbound-key-exception?)
          (spec: 1 group-info group-info)
          (spec: 1 apropos apropos)
          (spec: 1 s8vector s8vector)
          (spec: 1 make-f32vector make-f32vector)
          (spec: 1 ->char-set ->char-set)
          (spec: 1 tty-history-max-length-set! tty-history-max-length-set!)
          (spec: 1 with-input-from-process with-input-from-process)
          (spec: 1 string-prefix-length-ci string-prefix-length-ci)
          (spec: 1 make-s8vector make-s8vector)
          (spec: 1 flsquare flsquare)
          (spec: 1 drop-right drop-right)
          (spec: 1 open-output-process open-output-process)
          (spec: 1 foreign-released? foreign-released?)
          (spec: 1 thread-group-resume! thread-group-resume!)
          (spec: 1 file-info file-info)
          (spec: 1 create-directory create-directory)
          (spec: 1 bitwise-xor bitwise-xor)
          (spec: 1 mutex-lock! mutex-lock!)
          (spec: 1 r7rs-raise r7rs-raise)
          (spec: 1 shell-command shell-command)
          (spec:
           1
           file-last-access-and-modification-times-set!
           file-last-access-and-modification-times-set!)
          (spec: 1 current-thread current-thread)
          (spec: 1 initial-current-directory initial-current-directory)
          (spec: 1 random-source-state-set! random-source-state-set!)
          (spec: 1 subu64vector-move! subu64vector-move!)
          (spec: 1 abort abort)
          (spec: 1 fxwrap* fxwrap*)
          (spec: 1 list->table list->table)
          (spec: 1 path-strip-extension path-strip-extension)
          (spec: 1 s32vector-copy! s32vector-copy!)
          (spec: 1 u64vector-shrink! u64vector-shrink!)
          (spec: 1 s64vector-copy s64vector-copy)
          (spec: 1 fleven? fleven?)
          (spec: 1 readtable-max-unescaped-char readtable-max-unescaped-char)
          (spec: 1 table-merge! table-merge!)
          (spec:
           1
           display-continuation-environment
           display-continuation-environment)
          (spec: 1 flnegative? flnegative?)
          (spec: 1 join-timeout-exception? join-timeout-exception?)
          (spec: 1 bit-count bit-count)
          (spec: 1 condition-variable-signal! condition-variable-signal!)
          (spec: 1 make-thread make-thread)
          (spec: 1 f64vector->list f64vector->list)
          (spec: 1 protocol-info? protocol-info?)
          (spec: 1 service-info-aliases service-info-aliases)
          (spec: 1 bitwise-andc1 bitwise-andc1)
          (spec: 1 string=?-hash string=?-hash)
          (spec: 1 subs32vector-move! subs32vector-move!)
          (spec:
           1
           sfun-conversion-exception-arguments
           sfun-conversion-exception-arguments)
          (spec: 1 fx= fx=)
          (spec: 1 char-set-adjoin! char-set-adjoin!)
          (spec: 1 end-of-char-set? end-of-char-set?)
          (spec: 1 length+ length+)
          (spec:
           1
           rpc-remote-error-exception-procedure
           rpc-remote-error-exception-procedure)
          (spec: 1 fxior fxior)
          (spec: 1 char-set-filter char-set-filter)
          (spec: 1 thread-resume! thread-resume!)
          (spec: 1 s16vector-length s16vector-length)
          (spec:
           1
           thread-state-running-processor
           thread-state-running-processor)
          (spec: 1 vector-cas! vector-cas!)
          (spec:
           1
           initialized-thread-exception-procedure
           initialized-thread-exception-procedure)
          (spec: 1 default-random-source default-random-source)
          (spec: 1 udp-local-socket-info udp-local-socket-info)
          (spec: 1 fl< fl<)
          (spec: 1 input-port-readtable-set! input-port-readtable-set!)
          (spec: 1 delete delete)
          (spec:
           1
           nonprocedure-operator-exception-code
           nonprocedure-operator-exception-code)
          (spec: 1 read-substring read-substring)
          (spec: 1 system-type system-type)
          (spec:
           1
           unbound-key-exception-procedure
           unbound-key-exception-procedure)
          (spec: 1 pretty-print pretty-print)
          (spec: 1 s8vector-concatenate s8vector-concatenate)
          (spec:
           1
           tty-paren-balance-duration-set!
           tty-paren-balance-duration-set!)
          (spec: 1 with-input-from-port with-input-from-port)
          (spec: 1 f32vector->list f32vector->list)
          (spec: 1 string-prefix-length string-prefix-length)
          (spec: 1 u16vector u16vector)
          (spec: 1 flsqrt flsqrt)
          (spec: 1 third third)
          (spec: 1 repl-highlight-source-level repl-highlight-source-level)
          (spec: 1 foreign-release! foreign-release!)
          (spec: 1 thread-group-suspend! thread-group-suspend!)
          (spec: 1 file-group file-group)
          (spec: 1 bitwise-unfold bitwise-unfold)
          (spec: 1 create-symbolic-link create-symbolic-link)
          (spec: 1 raise raise)
          (spec: 1 subu8vector-move! subu8vector-move!)
          (spec: 1 file-inode file-inode)
          (spec: 1 u64vector-set! u64vector-set!)
          (spec: 1 u8vector-length u8vector-length)
          (spec: 1 abandoned-mutex-exception? abandoned-mutex-exception?)
          (spec: 1 fxwrapabs fxwrapabs)
          (spec: 1 s32vector-copy s32vector-copy)
          (spec: 1 vector-set vector-set)
          (spec: 1 char-set= char-set=)
          (spec: 1 path-volume path-volume)
          (spec: 1 string->uninterned-symbol string->uninterned-symbol)
          (spec: 1 s64vector-concatenate s64vector-concatenate)
          (spec: 1 fldenominator fldenominator)
          (spec: 1 call-with-input-vector call-with-input-vector)
          (spec: 1 link-incremental link-incremental)
          (spec: 1 null-list? null-list?)
          (spec:
           1
           readtable-max-write-length-set
           readtable-max-write-length-set)
          (spec: 1 flnan? flnan?)
          (spec:
           1
           invalid-utf8-encoding-exception-arguments
           invalid-utf8-encoding-exception-arguments)
          (spec: 1 table-set! table-set!)
          (spec: 1 uncaught-exception? uncaught-exception?)
          (spec: 1 condition-variable? condition-variable?)
          (spec: 1 make-table make-table)
          (spec: 1 f64vector f64vector)
          (spec: 1 processor-id processor-id)
          (spec: 1 service-info service-info)
          (spec: 1 continuation-return continuation-return)
          (spec: 1 bitwise-and bitwise-and)
          (spec:
           1
           wrong-number-of-arguments-exception-procedure
           wrong-number-of-arguments-exception-procedure)
          (spec: 1 subs64vector-move! subs64vector-move!)
          (spec: 1 u32vector? u32vector?)
          (spec: 1 char-set-complement! char-set-complement!)
          (spec: 1 fxabs fxabs)
          (spec:
           1
           rpc-remote-error-exception-message
           rpc-remote-error-exception-message)
          (spec: 1 thread-receive thread-receive)
          (spec: 1 char-set-for-each char-set-for-each)
          (spec: 1 output-port-timeout-set! output-port-timeout-set!)
          (spec: 1 fxmin fxmin)
          (spec: 1 error error)
          (spec: 1 s16vector-fill! s16vector-fill!)
          (spec:
           1
           initialized-thread-exception-arguments
           initialized-thread-exception-arguments)
          (spec: 1 first-set-bit first-set-bit)
          (spec: 1 network-info network-info)
          (spec: 1 udp-read-subu8vector udp-read-subu8vector)
          (spec:
           1
           no-such-file-or-directory-exception-procedure
           no-such-file-or-directory-exception-procedure)
          (spec: 1 compile-file compile-file)
          (spec: 1 fl> fl>)
          (spec: 1 input-port-readtable input-port-readtable)
          (spec: 1 system-stamp system-stamp)
          (spec:
           1
           unbound-os-environment-variable-exception-arguments
           unbound-os-environment-variable-exception-arguments)
          (spec: 1 group-info-members group-info-members)
          (spec: 1 s8vector-append s8vector-append)
          (spec: 1 tty-mode-set! tty-mode-set!)
          (spec: 1 with-input-from-u8vector with-input-from-u8vector)
          (spec: 1 f32vector f32vector)
          (spec: 1 host-info-addresses host-info-addresses)
          (spec: 1 scheduler-exception? scheduler-exception?)
          (spec: 1 fltanh fltanh)
          (spec: 1 repl-error-port repl-error-port)
          (spec: 1 open-output-u8vector open-output-u8vector)
          (spec: 1 socket-info-family socket-info-family)
          (spec: 1 thread-group-specific-set! thread-group-specific-set!)
          (spec:
           1
           module-not-found-exception-arguments
           module-not-found-exception-arguments)
          (spec: 1 create-link create-link)
          (spec: 1 file-info-creation-time file-info-creation-time)
          (spec: 1 r7rs-with-exception-handler r7rs-with-exception-handler)
          (spec: 1 subu8vector-fill! subu8vector-fill!)
          (spec: 1 mutex-specific mutex-specific)
          (spec:
           1
           current-user-interrupt-handler
           current-user-interrupt-handler)
          (spec: 1 file-last-change-time file-last-change-time)
          (spec: 1 random-u8vector random-u8vector)
          (spec: 1 u64vector? u64vector?)
          (spec: 1 error-exception-parameters error-exception-parameters)
          (spec: 1 fxwrap- fxwrap-)
          (spec: 1 list->u32vector list->u32vector)
          (spec: 1 s32vector-length s32vector-length)
          (spec: 1 char-set<= char-set<=)
          (spec: 1 time? time?)
          (spec: 1 path-strip-volume path-strip-volume)
          (spec: 1 s64vector-fill! s64vector-fill!)
          (spec: 1 string->uninterned-keyword string->uninterned-keyword)
          (spec: 1 call-with-output-string call-with-output-string)
          (spec:
           1
           nonprocedure-operator-exception?
           nonprocedure-operator-exception?)
          (spec: 1 flexpm1 flexpm1)
          (spec: 1 readtable-max-write-length readtable-max-write-length)
          (spec: 1 table-search table-search)
          (spec:
           1
           uninitialized-thread-exception-arguments
           uninitialized-thread-exception-arguments)
          (spec: 1 display-exception-in-context display-exception-in-context)
          (spec: 1 tcp-server-socket-info tcp-server-socket-info)
          (spec:
           1
           condition-variable-specific-set!
           condition-variable-specific-set!)
          (spec: 1 f32vector-concatenate f32vector-concatenate)
          (spec: 1 bit-field-any? bit-field-any?)
          (spec: 1 make-tls-context make-tls-context)
          (spec: 1 service-info-port-number service-info-port-number)
          (spec: 1 continuation-graft continuation-graft)
          (spec: 1 f64vector-concatenate f64vector-concatenate)
          (spec: 1 bitwise-eqv bitwise-eqv)
          (spec:
           1
           sfun-conversion-exception-message
           sfun-conversion-exception-message)
          (spec: 1 subs64vector-fill! subs64vector-fill!)
          (spec: 1 u32vector->list u32vector->list)
          (spec: 1 char-set-complement char-set-complement)
          (spec: 1 u64vector u64vector)
          (spec: 1 fx>= fx>=)
          (spec:
           1
           length-mismatch-exception-arg-id
           length-mismatch-exception-arg-id)
          (spec: 1 thread-sleep! thread-sleep!)
          (spec: 1 char-set-fold char-set-fold)
          (spec:
           1
           wrong-number-of-arguments-exception-arguments
           wrong-number-of-arguments-exception-arguments)
          (spec: 1 fxmax fxmax)
          (spec: 1 output-port-readtable-set! output-port-readtable-set!)
          (spec: 1 s16vector-ref s16vector-ref)
          (spec: 1 first first)
          (spec: 1 read-all read-all)
          (spec: 1 defer-user-interrupts defer-user-interrupts)
          (spec: 1 fl= fl=)
          (spec:
           1
           no-such-file-or-directory-exception-arguments
           no-such-file-or-directory-exception-arguments)
          (spec: 1 system-version system-version)
          (spec: 1 group-info-gid group-info-gid)
          (spec: 1 s8vector-copy! s8vector-copy!)
          (spec: 1 tty-text-attributes-set! tty-text-attributes-set!)
          (spec: 1 command-args command-args)
          (spec: 1 with-input-from-string with-input-from-string)
          (spec: 1 host-info host-info)
          (spec: 1 make-mutex make-mutex)
          (spec: 1 string-prefix? string-prefix?)
          (spec: 1 u16vector-append u16vector-append)
          (spec: 1 display-procedure-environment display-procedure-environment)
          (spec: 1 fltan fltan)
          (spec: 1 repl-output-port repl-output-port)
          (spec: 1 thread thread)
          (spec: 1 foreign-tags foreign-tags)
          (spec: 1 reverse! reverse!)
          (spec: 1 socket-info-address socket-info-address)
          (spec: 1 thread-group? thread-group?)
          (spec: 1 copy-bit copy-bit)
          (spec: 1 file-info-attributes file-info-attributes)
          (spec: 1 random-integer random-integer)
          (spec: 1 subvector-fill! subvector-fill!)
          (spec: 1 u64vector-swap! u64vector-swap!)
          (spec: 1 mutex-name mutex-name)
          (spec: 1 file-last-access-time file-last-access-time)
          (spec: 1 range-exception-arg-id range-exception-arg-id)
          (spec: 1 fxnand fxnand)
          (spec: 1 error-exception-message error-exception-message)
          (spec: 1 list->u16vector list->u16vector)
          (spec: 1 s32vector-fill! s32vector-fill!)
          (spec: 1 time->seconds time->seconds)
          (spec: 1 fxwraparithmetic-shift-left fxwraparithmetic-shift-left)
          (spec: 1 all-bits-set? all-bits-set?)
          (spec: 1 s64vector-copy! s64vector-copy!)
          (spec: 1 list= list=)
          (spec: 1 vector-shrink! vector-shrink!)
          (spec: 1 call-with-output-process call-with-output-process)
          (spec: 1 delete-directory delete-directory)
          (spec: 1 flexp flexp)
          (spec:
           1
           nonprocedure-operator-exception-rte
           nonprocedure-operator-exception-rte)
          (spec: 1 readtable-max-write-level-set readtable-max-write-level-set)
          (spec: 1 flnumerator flnumerator)
          (spec:
           1
           invalid-utf8-encoding-exception?
           invalid-utf8-encoding-exception?)
          (spec: 1 tcp-service-unregister! tcp-service-unregister!)
          (spec: 1 f32vector-append f32vector-append)
          (spec: 1 bit-field bit-field)
          (spec: 1 host-info-name host-info-name)
          (spec: 1 make-thread-group make-thread-group)
          (spec: 1 service-info-name service-info-name)
          (spec: 1 subf32vector subf32vector)
          (spec: 1 bitwise-andc2 bitwise-andc2)
          (spec: 1 f64vector-append f64vector-append)
          (spec:
           1
           sfun-conversion-exception-code
           sfun-conversion-exception-code)
          (spec: 1 subs8vector-fill! subs8vector-fill!)
          (spec: 1 u32vector u32vector)
          (spec: 1 fourth fourth)
          (spec: 1 char-set-copy char-set-copy)
          (spec: 1 os-exception-code os-exception-code)
          (spec: 1 rpc-remote-error-exception? rpc-remote-error-exception?)
          (spec: 1 thread-send thread-send)
          (spec: 1 char-set-intersection char-set-intersection)
          (spec: 1 fxandc1 fxandc1)
          (spec: 1 thread-state-running? thread-state-running?)
          (spec: 1 vector-every vector-every)
          (spec: 1 file-mode file-mode)
          (spec: 1 initialized-thread-exception? initialized-thread-exception?)
          (spec: 1 network-info-name network-info-name)
          (spec: 1 udp-source-socket-info udp-source-socket-info)
          (spec: 1 fixnum->flonum fixnum->flonum)
          (spec:
           1
           default-user-interrupt-handler
           default-user-interrupt-handler)
          (spec: 1 input-port-timeout-set! input-port-timeout-set!)
          (spec: 1 read-subu8vector read-subu8vector)
          (spec: 1 system-type-string system-type-string)
          (spec: 1 gensym gensym)
          (spec: 1 circular-list circular-list)
          (spec: 1 poll-point poll-point)
          (spec: 1 s8vector-copy s8vector-copy)
          (spec:
           1
           unbound-os-environment-variable-exception?
           unbound-os-environment-variable-exception?)
          (spec: 1 executable-path executable-path)
          (spec: 1 group-info? group-info?)
          (spec: 1 primordial-exception-handler primordial-exception-handler)
          (spec: 1 u16vector->list u16vector->list)
          (spec:
           1
           cfun-conversion-exception-code
           cfun-conversion-exception-code)
          (spec: 1 open-directory open-directory)
          (spec: 1 repl-input-port repl-input-port)
          (spec: 1 socket-info? socket-info?)
          (spec: 1 last last)
          (spec: 1 thread-group-terminate! thread-group-terminate!)
          (spec: 1 module-not-found-exception? module-not-found-exception?)
          (spec: 1 random-f64vector random-f64vector)
          (spec: 1 subvector subvector)
          (spec: 1 create-temporary-directory create-temporary-directory)
          (spec: 1 file-info-group file-info-group)
          (spec: 1 mutex-state mutex-state)
          (spec: 1 compile-file-to-target compile-file-to-target)
          (spec: 1 u8vector-ref u8vector-ref)
          (spec: 1 fxmodulo fxmodulo)
          (spec: 1 list->u8vector list->u8vector)
          (spec: 1 s32vector-ref s32vector-ref)
          (spec: 1 trace trace)
          (spec: 1 fxwraparithmetic-shift fxwraparithmetic-shift)
          (spec: 1 char-set? char-set?)
          (spec: 1 every-bit-set? every-bit-set?)
          (spec: 1 thread-specific-set! thread-specific-set!)
          (spec: 1 flabs flabs)
          (spec: 1 call-with-output-vector call-with-output-vector)
          (spec: 1 delete! delete!)
          (spec: 1 readtable-max-write-level readtable-max-write-level)
          (spec: 1 table? table?)
          (spec:
           1
           uninitialized-thread-exception?
           uninitialized-thread-exception?)
          (spec: 1 flfinite? flfinite?)
          (spec:
           1
           invalid-utf8-encoding-exception-procedure
           invalid-utf8-encoding-exception-procedure)
          (spec:
           1
           number-of-arguments-limit-exception-arguments
           number-of-arguments-limit-exception-arguments)
          (spec: 1 tcp-service-register! tcp-service-register!)
          (spec: 1 host-info-aliases host-info-aliases)
          (spec: 1 make-u32vector make-u32vector)
          (spec: 1 f32vector-copy! f32vector-copy!)
          (spec: 1 processor? processor?)
          (spec: 1 service-info? service-info?)
          (spec: 1 timeout->time timeout->time)
          (spec: 1 bit-field-every? bit-field-every?)
          (spec: 1 continuation? continuation?)
          (spec: 1 f64vector-copy! f64vector-copy!)
          (spec: 1 sfun-conversion-exception? sfun-conversion-exception?)
          (spec: 1 subs8vector subs8vector)
          (spec: 1 foreign? foreign?)
          (spec: 1 char-set-contains? char-set-contains?)
          (spec:
           1
           length-mismatch-exception-procedure
           length-mismatch-exception-procedure)
          (spec: 1 os-exception-arguments os-exception-arguments)
          (spec: 1 tty? tty?)
          (spec: 1 u64vector-append u64vector-append)
          (spec: 1 fxand fxand)
          (spec: 1 char-set-hash char-set-hash)
          (spec: 1 output-port-width output-port-width)
          (spec: 1 s16vector-set! s16vector-set!)
          (spec: 1 u32vector-concatenate u32vector-concatenate)
          (spec: 1 file-last-modification-time file-last-modification-time)
          (spec: 1 vector-cumulate vector-cumulate)
          (spec: 1 network-info-aliases network-info-aliases)
          (spec:
           1
           wrong-number-of-arguments-exception?
           wrong-number-of-arguments-exception?)
          (spec: 1 udp-read-u8vector udp-read-u8vector)
          (spec:
           1
           no-such-file-or-directory-exception?
           no-such-file-or-directory-exception?)
          (spec:
           1
           unbound-os-environment-variable-exception-procedure
           unbound-os-environment-variable-exception-procedure)
          (spec: 1 generate-proper-tail-calls generate-proper-tail-calls)
          (spec:
           1
           mailbox-receive-timeout-exception-procedure
           mailbox-receive-timeout-exception-procedure)
          (spec: 1 u16vector-copy u16vector-copy)
          (spec: 1 s8vector-length s8vector-length)
          (spec: 1 with-input-from-vector with-input-from-vector)
          (spec: 1 group-info-name group-info-name)
          (spec: 1 command-name command-name)
          (spec: 1 string-set string-set)
          (spec: 1 script-directory script-directory)
          (spec: 1 flodd? flodd?)
          (spec:
           1
           cfun-conversion-exception-arguments
           cfun-conversion-exception-arguments)
          (spec:
           1
           divide-by-zero-exception-arguments
           divide-by-zero-exception-arguments)
          (spec: 1 thread-init! thread-init!)
          (spec: 1 repl-result-history-ref repl-result-history-ref)
          (spec: 1 fltruncate fltruncate)
          (spec: 1 socket-info-port-number socket-info-port-number)
          (spec: 1 open-output-vector open-output-vector)
          (spec: 1 take! take!)
          (spec: 1 copy-file copy-file)
          (spec:
           1
           module-not-found-exception-procedure
           module-not-found-exception-procedure)
          (spec: 1 file-info-device file-info-device)
          (spec: 1 current-directory current-directory)
          (spec: 1 mutex-specific-set! mutex-specific-set!)
          (spec: 1 range-exception-procedure range-exception-procedure)
          (spec: 1 char-set-map char-set-map)
          (spec: 1 partition! partition!)
          (spec: 1 fxnor fxnor)
          (spec: 1 error-exception? error-exception?)
          (spec: 1 list->u64vector list->u64vector)
          (spec: 1 thread-base-priority-set! thread-base-priority-set!)
          (spec: 1 touch touch)
          (spec: 1 fxwrapquotient fxwrapquotient)
          (spec: 1 every every)
          (spec: 1 s64vector-length s64vector-length)
          (spec: 1 fl>= fl>=)
          (spec: 1 call-with-output-u8vector call-with-output-u8vector)
          (spec: 1 delete-file-or-directory delete-file-or-directory)
          (spec: 1 thread-specific thread-specific)
          (spec:
           1
           readtable-sharing-allowed?-set
           readtable-sharing-allowed?-set)
          (spec:
           1
           uninitialized-thread-exception-procedure
           uninitialized-thread-exception-procedure)
          (spec: 1 flexpt flexpt)
          (spec: 1 iota iota)
          (spec: 1 vector-unfold vector-unfold)
          (spec: 1 compilation-target compilation-target)
          (spec: 1 atanh atanh)
          (spec: 1 host-name host-name)
          (spec: 1 f32vector-copy f32vector-copy)
          (spec: 1 make-u16vector make-u16vector)
          (spec: 1 service-info-protocol service-info-protocol)
          (spec: 1 bit-field-clear bit-field-clear)
          (spec: 1 configure-command-string configure-command-string)
          (spec: 1 f64vector-copy f64vector-copy)
          (spec:
           1
           sfun-conversion-exception-procedure
           sfun-conversion-exception-procedure)
          (spec: 1 subf32vector-move! subf32vector-move!)
          (spec: 1 tty-type-set! tty-type-set!)
          (spec: 1 u64vector->list u64vector->list)
          (spec: 1 os-exception-procedure os-exception-procedure)
          (spec:
           1
           length-mismatch-exception-arguments
           length-mismatch-exception-arguments)
          (spec: 1 thread-state-uninitialized? thread-state-uninitialized?)
          (spec: 1 vector-fold vector-fold)
          (spec: 1 char-set-cursor char-set-cursor)
          (spec: 1 with-output-to-process with-output-to-process)
          (spec: 1 fxarithmetic-shift fxarithmetic-shift)
          (spec: 1 s16vector-set s16vector-set)
          (spec: 1 stack-overflow-exception? stack-overflow-exception?)
          (spec: 1 u32vector-append u32vector-append)
          (spec:
           1
           wrong-number-of-values-exception-rte
           wrong-number-of-values-exception-rte)
          (spec: 1 network-info? network-info?)
          (spec: 1 file-owner file-owner)
          (spec: 1 system-version-string system-version-string)
          (spec:
           1
           unbound-serial-number-exception-arguments
           unbound-serial-number-exception-arguments)
          (spec: 1 noncontinuable-exception? noncontinuable-exception?)
          (spec:
           1
           fixnum-overflow-exception-arguments
           fixnum-overflow-exception-arguments)
          (spec: 1 subvector-move! subvector-move!)
          (spec: 1 u8vector u8vector)
          (spec:
           1
           mailbox-receive-timeout-exception-arguments
           mailbox-receive-timeout-exception-arguments)
          (spec:
           1
           port-io-exception-handler-set!
           port-io-exception-handler-set!)
          (spec: 1 s8vector-fill! s8vector-fill!)
          (spec: 1 u16vector-concatenate u16vector-concatenate)
          (spec: 1 clear-bit-field clear-bit-field)
          (spec: 1 println println)
          (spec: 1 udp-write-u8vector udp-write-u8vector)
          (spec: 1 string-suffix-ci? string-suffix-ci?)
          (spec: 1 make-parameter make-parameter)
          (spec: 1 boolean=? boolean=?)
          (spec: 1 error-object? error-object?)
          (spec: 1 delete-file delete-file)
          (spec: 1 inexact inexact)
          (spec: 1 char-foldcase char-foldcase)
          (spec: 1 bytevector? bytevector?)
          (spec: 1 get-environment-variable get-environment-variable)
          (spec: 1 list-copy list-copy)
          (spec: 1 promise? promise?)
          (spec: 1 error-object-message error-object-message)
          (spec: 1 call-with-port call-with-port)
          (spec: 1 exact exact)
          (spec: 1 eof-object eof-object)
          (spec: 1 get-environment-variables get-environment-variables)
          (spec: 1 get-output-bytevector get-output-bytevector)
          (spec: 1 floor-remainder floor-remainder)
          (spec: 1 current-error-port current-error-port)
          (spec: 1 make-promise make-promise)
          (spec: 1 open-input-bytevector open-input-bytevector)
          (spec: 1 balanced-quotient balanced-quotient)
          (spec: 1 peek-u8 peek-u8)
          (spec: 1 string-map string-map)
          (spec: 1 floor-quotient floor-quotient)
          (spec: 1 current-jiffy current-jiffy)
          (spec: 1 truncate-quotient truncate-quotient)
          (spec: 1 vector-for-each vector-for-each)
          (spec: 1 write-simple write-simple)
          (spec: 1 truncate/ truncate/)
          (spec: 1 euclidean-quotient euclidean-quotient)
          (spec: 1 balanced/ balanced/)
          (spec: 1 port? port?)
          (spec: 1 make-bytevector make-bytevector)
          (spec: 1 get-output-string get-output-string)
          (spec: 1 floor/ floor/)
          (spec: 1 file-error? file-error?)
          (spec: 1 round-remainder round-remainder)
          (spec: 1 truncate-remainder truncate-remainder)
          (spec: 1 balanced-remainder balanced-remainder)
          (spec: 1 read-error? read-error?)
          (spec: 1 vector->string vector->string)
          (spec: 1 write-shared write-shared)
          (spec: 1 round-quotient round-quotient)
          (spec: 1 euclidean/ euclidean/)
          (spec: 1 exact-integer? exact-integer?)
          (spec: 1 infinite? infinite?)
          (spec: 1 jiffies-per-second jiffies-per-second)
          (spec: 1 open-input-string open-input-string)
          (spec: 1 string-upcase string-upcase)
          (spec: 1 current-second current-second)
          (spec: 1 euclidean-remainder euclidean-remainder)
          (spec: 1 exact-integer-sqrt exact-integer-sqrt)
          (spec: 1 list-set! list-set!)
          (spec: 1 utf8->string utf8->string)
          (spec: 1 close-port close-port)
          (spec: 1 bytevector bytevector)
          (spec: 1 file-exists? file-exists?)
          (spec: 1 open-output-bytevector open-output-bytevector)
          (spec: 1 round/ round/)
          (spec: 1 symbol=? symbol=?)
          (spec: 1 textual-port? textual-port?)
          (spec: 1 input-port-open? input-port-open?)
          (spec: 1 read-line read-line)
          (spec: 1 vector-append vector-append)
          (spec: 1 nan? nan?)
          (spec: 1 square square)
          (spec: 1 vector-map vector-map)
          (spec: 1 write-string write-string)
          (spec: 1 write-u8 write-u8)
          (spec: 1 bytevector-copy bytevector-copy)
          (spec: 1 finite? finite?)
          (spec: 1 ceiling-remainder ceiling-remainder)
          (spec: 1 string-copy! string-copy!)
          (spec: 1 write-bytevector write-bytevector)
          (spec: 1 features features)
          (spec: 1 bytevector-append bytevector-append)
          (spec: 1 output-port-open? output-port-open?)
          (spec: 1 ceiling-quotient ceiling-quotient)
          (spec: 1 binary-port? binary-port?)
          (spec: 1 bytevector-length bytevector-length)
          (spec: 1 command-line command-line)
          (spec: 1 emergency-exit emergency-exit)
          (spec: 1 open-binary-input-file open-binary-input-file)
          (spec: 1 read-string read-string)
          (spec: 1 vector-copy! vector-copy!)
          (spec: 1 bytevector-copy! bytevector-copy!)
          (spec: 1 read-u8 read-u8)
          (spec: 1 ceiling/ ceiling/)
          (spec: 1 open-output-string open-output-string)
          (spec: 1 string->vector string->vector)
          (spec: 1 string-downcase string-downcase)
          (spec: 1 vector-copy vector-copy)
          (spec: 1 bytevector-u8-set! bytevector-u8-set!)
          (spec: 1 make-list make-list)
          (spec: 1 flush-output-port flush-output-port)
          (spec: 1 string-for-each string-for-each)
          (spec: 1 error-object-irritants error-object-irritants)
          (spec: 1 digit-value digit-value)
          (spec: 1 string->utf8 string->utf8)
          (spec: 1 u8-ready? u8-ready?)
          (spec: 1 bytevector-u8-ref bytevector-u8-ref)
          (spec: 1 read-bytevector! read-bytevector!)
          (spec: 1 open-binary-output-file open-binary-output-file)
          (spec: 1 string-foldcase string-foldcase)
          (spec: 1 read-bytevector read-bytevector)
          (spec: 1 exit exit)
          (spec: 1 cddaar cddaar)
          (spec: 1 floor floor)
          (spec: 1 imag-part imag-part)
          (spec: 1 char-upper-case? char-upper-case?)
          (spec: 1 angle angle)
          (spec: 1 transcript-on transcript-on)
          (spec: 1 exact->inexact exact->inexact)
          (spec: 1 caddar caddar)
          (spec: 1 peek-char peek-char)
          (spec: 1 string-append string-append)
          (spec: 1 call-with-values call-with-values)
          (spec: 1 memv memv)
          (spec: 1 vector-fill! vector-fill!)
          (spec: 1 eof-object? eof-object?)
          (spec: 1 char-upcase char-upcase)
          (spec: 1 cdar cdar)
          (spec: 1 string-ci=? string-ci=?)
          (spec: 1 list->vector list->vector)
          (spec: 1 cadar cadar)
          (spec: 1 remainder remainder)
          (spec: 1 <= <=)
          (spec: 1 tan tan)
          (spec: 1 memq memq)
          (spec: 1 char-lower-case? char-lower-case?)
          (spec: 1 transcript-off transcript-off)
          (spec: 1 list list)
          (spec: 1 vector? vector?)
          (spec: 1 char-whitespace? char-whitespace?)
          (spec: 1 read-char read-char)
          (spec: 1 cddar cddar)
          (spec: 1 cos cos)
          (spec: 1 string-ci<? string-ci<?)
          (spec: 1 caddr caddr)
          (spec: 1 denominator denominator)
          (spec: 1 < <)
          (spec: 1 complex? complex?)
          (spec: 1 number? number?)
          (spec: 1 eq? eq?)
          (spec: 1 integer->char integer->char)
          (spec: 1 make-vector make-vector)
          (spec: 1 append append)
          (spec: 1 make-rectangular make-rectangular)
          (spec: 1 cddadr cddadr)
          (spec: 1 round round)
          (spec: 1 set-cdr! set-cdr!)
          (spec: 1 inexact? inexact?)
          (spec: 1 boolean? boolean?)
          (spec: 1 rationalize rationalize)
          (spec: 1 string string)
          (spec: 1 cadddr cadddr)
          (spec: 1 string-ci>=? string-ci>=?)
          (spec: 1 set-car! set-car!)
          (spec: 1 truncate truncate)
          (spec: 1 dynamic-wind dynamic-wind)
          (spec: 1 char-ready? char-ready?)
          (spec: 1 modulo modulo)
          (spec: 1 char<? char<?)
          (spec: 1 cddddr cddddr)
          (spec: 1 char->integer char->integer)
          (spec: 1 force force)
          (spec: 1 current-input-port current-input-port)
          (spec: 1 rational? rational?)
          (spec: 1 log log)
          (spec:
           1
           call-with-current-continuation
           call-with-current-continuation)
          (spec: 1 map map)
          (spec: 1 = =)
          (spec: 1 cons cons)
          (spec: 1 char-numeric? char-numeric?)
          (spec: 1 equal? equal?)
          (spec: 1 vector vector)
          (spec: 1 char<=? char<=?)
          (spec: 1 expt expt)
          (spec: 1 procedure? procedure?)
          (spec: 1 cdddar cdddar)
          (spec: 1 for-each for-each)
          (spec: 1 open-input-file open-input-file)
          (spec: 1 list-ref list-ref)
          (spec: 1 cadr cadr)
          (spec: 1 car car)
          (spec: 1 >= >=)
          (spec: 1 min min)
          (spec: 1 numerator numerator)
          (spec: 1 pair? pair?)
          (spec: 1 caaaar caaaar)
          (spec: 1 char>=? char>=?)
          (spec: 1 close-output-port close-output-port)
          (spec: 1 cddr cddr)
          (spec: 1 lcm lcm)
          (spec: 1 char-ci<=? char-ci<=?)
          (spec: 1 current-output-port current-output-port)
          (spec: 1 sqrt sqrt)
          (spec: 1 string-ci>? string-ci>?)
          (spec: 1 string<=? string<=?)
          (spec: 1 display display)
          (spec: 1 symbol->string symbol->string)
          (spec: 1 > >)
          (spec: 1 quotient quotient)
          (spec: 1 apply apply)
          (spec: 1 eqv? eqv?)
          (spec: 1 newline newline)
          (spec: 1 integer? integer?)
          (spec: 1 vector->list vector->list)
          (spec: 1 positive? positive?)
          (spec: 1 char=? char=?)
          (spec: 1 close-input-port close-input-port)
          (spec: 1 cdddr cdddr)
          (spec: 1 char-alphabetic? char-alphabetic?)
          (spec: 1 symbol? symbol?)
          (spec: 1 vector-length vector-length)
          (spec: 1 string->list string->list)
          (spec: 1 call-with-input-file call-with-input-file)
          (spec: 1 char? char?)
          (spec: 1 caaar caaar)
          (spec: 1 with-input-from-file with-input-from-file)
          (spec: 1 asin asin)
          (spec: 1 + +)
          (spec: 1 char-ci=? char-ci=?)
          (spec: 1 string=? string=?)
          (spec: 1 ceiling ceiling)
          (spec: 1 null-environment null-environment)
          (spec: 1 max max)
          (spec: 1 char>? char>?)
          (spec: 1 caaadr caaadr)
          (spec: 1 assoc assoc)
          (spec: 1 * *)
          (spec: 1 char-ci<? char-ci<?)
          (spec: 1 make-string make-string)
          (spec: 1 string<? string<?)
          (spec: 1 cdr cdr)
          (spec: 1 string->symbol string->symbol)
          (spec: 1 eval eval)
          (spec: 1 string>=? string>=?)
          (spec: 1 caaddr caaddr)
          (spec: 1 exact? exact?)
          (spec: 1 interaction-environment interaction-environment)
          (spec: 1 char-ci>? char-ci>?)
          (spec: 1 negative? negative?)
          (spec: 1 string->number string->number)
          (spec: 1 call-with-output-file call-with-output-file)
          (spec: 1 cdaadr cdaadr)
          (spec: 1 null? null?)
          (spec: 1 real-part real-part)
          (spec: 1 caadar caadar)
          (spec: 1 magnitude magnitude)
          (spec: 1 - -)
          (spec: 1 assv assv)
          (spec: 1 char-ci>=? char-ci>=?)
          (spec: 1 open-output-file open-output-file)
          (spec: 1 string-copy string-copy)
          (spec: 1 write write)
          (spec: 1 even? even?)
          (spec: 1 list->string list->string)
          (spec: 1 list-tail list-tail)
          (spec: 1 cdaaar cdaaar)
          (spec: 1 scheme-report-environment scheme-report-environment)
          (spec: 1 string? string?)
          (spec: 1 zero? zero?)
          (spec: 1 length length)
          (spec: 1 caar caar)
          (spec: 1 assq assq)
          (spec: 1 string-fill! string-fill!)
          (spec: 1 char-downcase char-downcase)
          (spec: 1 string-ref string-ref)
          (spec: 1 write-char write-char)
          (spec: 1 vector-ref vector-ref)
          (spec: 1 gcd gcd)
          (spec: 1 cdadar cdadar)
          (spec: 1 list? list?)
          (spec: 1 number->string number->string)
          (spec: 1 real? real?)
          (spec: 1 string>? string>?)
          (spec: 1 caadr caadr)
          (spec: 1 input-port? input-port?)
          (spec: 1 atan atan)
          (spec: 1 odd? odd?)
          (spec: 1 abs abs)
          (spec: 1 cdaar cdaar)
          (spec: 1 output-port? output-port?)
          (spec: 1 read read)
          (spec: 1 cadadr cadadr)
          (spec: 1 string-set! string-set!)
          (spec: 1 with-output-to-file with-output-to-file)
          (spec: 1 reverse reverse)
          (spec: 1 sin sin)
          (spec: 1 acos acos)
          (spec: 1 vector-set! vector-set!)
          (spec: 1 cdadr cdadr)
          (spec: 1 values values)
          (spec: 1 cadaar cadaar)
          (spec: 1 exp exp)
          (spec: 1 make-polar make-polar)
          (spec: 1 inexact->exact inexact->exact)
          (spec: 1 load load)
          (spec: 1 not not)
          (spec: 1 cdaddr cdaddr)
          (spec: 1 string-ci<=? string-ci<=?)
          (spec: 1 member member)
          (spec: 1 substring substring)
          (spec: 1 string-length string-length)
          (spec: 1 / /)
          (spec: 1 RuntimeAliases RuntimeAliases)
          (spec: 1 R5RSRuntime R5RSRuntime)
          (spec: 1 GerbilRuntime GerbilRuntime)
          (spec: 1 GambitRuntime GambitRuntime)
          (spec: 1 Runtime Runtime)
          (spec: 1 R7RSRuntime R7RSRuntime)
          (spec: 1 %%app-dotted %%app)
          (spec: 1 %%ref-dotted %%ref)
          (spec: 1 %%set-dotted! set!)
          (spec: 1 lambda/c lambda)
          (spec: 1 case-lambda/c case-lambda)
          (spec: 1 let/c let)
          (spec: 1 def/c def)
          (spec: 1 def*/c def*)
          (spec: 1 defmethod/c defmethod)
          (spec: 1 defclass/c defclass)
          (spec: 1 defstruct/c defstruct)
          (phi: 2 (import: :gerbil/core/runtime))
          (phi: 2 (import: :gerbil/core/expander))))
