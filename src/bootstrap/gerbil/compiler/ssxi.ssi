prelude: :gerbil/core
package: gerbil/compiler
namespace: gxc

(%#begin (%#import
          :gerbil/core
          :gerbil/core/expander
          :gerbil/expander
          :gerbil/compiler/base
          :gerbil/compiler/optimize-base)
         (%#export
          #t
          (spec: 0 ast-rules ast-rules)
          (spec: 0 ast-case ast-case)
          (spec: 0 syntax syntax)
          (spec: 0 with-syntax with-syntax)
          (spec: 0 with-syntax* with-syntax*)
          (import: :gerbil/core)
          (import: :gerbil/core/expander)
          (import: :gerbil/expander))
         (%#begin (%#begin-syntax
                   (%#call (%#ref load-module)
                           (%#quote "gerbil/compiler/ssxi~1")))
                  (%#define-syntax declare-type |gxc[:0:]#declare-type|))
         (%#define-syntax declare-type* |gxc[:0:]#declare-type*|)
         (%#define-syntax declare-method |gxc[:0:]#declare-method|)
         (%#define-syntax declare-method* |gxc[:0:]#declare-method*|)
         (%#define-syntax declare-methods |gxc[:0:]#declare-methods|)
         (%#define-syntax @alias |gxc[:0:]#@alias|)
         (%#define-syntax @class |gxc[:0:]#@class|)
         (%#define-syntax @predicate |gxc[:0:]#@predicate|)
         (%#define-syntax @constructor |gxc[:0:]#@constructor|)
         (%#define-syntax @accessor |gxc[:0:]#@accessor|)
         (%#define-syntax @mutator |gxc[:0:]#@mutator|)
         (%#define-syntax @lambda |gxc[:0:]#@lambda|)
         (%#define-syntax @case-lambda |gxc[:0:]#@case-lambda|)
         (%#define-syntax @kw-lambda |gxc[:0:]#@kw-lambda|)
         (%#define-syntax @kw-lambda-dispatch |gxc[:0:]#@kw-lambda-dispatch|)
         (%#define-syntax declare-primitive |gxc[:0:]#declare-primitive|)
         (%#define-syntax
          declare-primitive/unchecked
          |gxc[:0:]#declare-primitive/unchecked|)
         (%#define-syntax declare-primitive* |gxc[:0:]#declare-primitive*|)
         (%#define-syntax
          declare-primitive/unchecked*
          |gxc[:0:]#declare-primitive/unchecked*|))
